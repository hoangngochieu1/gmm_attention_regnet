{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ffe4ef66",
   "metadata": {
    "papermill": {
     "duration": 0.006393,
     "end_time": "2025-08-07T11:34:22.172598",
     "exception": false,
     "start_time": "2025-08-07T11:34:22.166205",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 1 ModelWithAttentionAndSoftmax"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8f977b44",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:22.184122Z",
     "iopub.status.busy": "2025-08-07T11:34:22.183863Z",
     "iopub.status.idle": "2025-08-07T11:34:33.222837Z",
     "shell.execute_reply": "2025-08-07T11:34:33.222172Z"
    },
    "papermill": {
     "duration": 11.046455,
     "end_time": "2025-08-07T11:34:33.224225",
     "exception": false,
     "start_time": "2025-08-07T11:34:22.177770",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "import torchvision.models as models\n",
    "import random\n",
    "from torchvision.models.efficientnet import EfficientNet_V2_S_Weights\n",
    "import os\n",
    "import pandas as pd\n",
    "\n",
    "from torch.utils.data import Dataset\n",
    "\n",
    "\n",
    "\n",
    "import torchvision.transforms.v2 as v2\n",
    "from torchvision.io import read_image\n",
    "from PIL import Image\n",
    "\n",
    "from torch.utils.data import DataLoader\n",
    "# from torchvision import transforms\n",
    "\n",
    "from torchvision.transforms import InterpolationMode\n",
    "\n",
    "from typing import Dict, List\n",
    "from tqdm import tqdm\n",
    "import torch\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b0cdea49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.235895Z",
     "iopub.status.busy": "2025-08-07T11:34:33.235257Z",
     "iopub.status.idle": "2025-08-07T11:34:33.240147Z",
     "shell.execute_reply": "2025-08-07T11:34:33.239477Z"
    },
    "papermill": {
     "duration": 0.011757,
     "end_time": "2025-08-07T11:34:33.241334",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.229577",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.1920928955078125e-07\n"
     ]
    }
   ],
   "source": [
    "eps = torch.finfo(torch.float32).eps\n",
    "lr = 0.01\n",
    "factor=0.5\n",
    "patience=2\n",
    "num_components = 3\n",
    "epochs = 50\n",
    "batch_size = 64\n",
    "print(eps)\n",
    "mean = 0.187437\n",
    "std = 0.197918\n",
    "temperature = 5.0\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f0c0041e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.252749Z",
     "iopub.status.busy": "2025-08-07T11:34:33.252346Z",
     "iopub.status.idle": "2025-08-07T11:34:33.256127Z",
     "shell.execute_reply": "2025-08-07T11:34:33.255577Z"
    },
    "papermill": {
     "duration": 0.010574,
     "end_time": "2025-08-07T11:34:33.257159",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.246585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# ✅ Đặt lớp này trước class mô hình chính\n",
    "class SoftmaxWithTemperature(nn.Module):\n",
    "    def __init__(self, temperature):\n",
    "        super().__init__()\n",
    "        self.temperature = temperature\n",
    "\n",
    "    def forward(self, x):\n",
    "        return torch.softmax(x / self.temperature, dim=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "344065ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.268173Z",
     "iopub.status.busy": "2025-08-07T11:34:33.267984Z",
     "iopub.status.idle": "2025-08-07T11:34:33.276530Z",
     "shell.execute_reply": "2025-08-07T11:34:33.276014Z"
    },
    "papermill": {
     "duration": 0.015574,
     "end_time": "2025-08-07T11:34:33.277767",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.262193",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.init as init\n",
    "import math\n",
    "\n",
    "class SelfAttentionGate(nn.Module):\n",
    "    def __init__(self, in_channels, inter_channels=None, generator=None):\n",
    "        super(SelfAttentionGate, self).__init__()\n",
    "\n",
    "        self.generator = generator or torch.Generator(device='cuda' if torch.cuda.is_available() else 'cpu')\n",
    "        \n",
    "        if inter_channels is None:\n",
    "            inter_channels = max(1, in_channels // 2)\n",
    "\n",
    "        # Các layer\n",
    "        self.theta = nn.Conv2d(in_channels, inter_channels, kernel_size=1, stride=1, padding=0)\n",
    "        self.psi = nn.Conv2d(in_channels, 1, kernel_size=1, stride=1, padding=0)\n",
    "        self.W = nn.Conv2d(in_channels, in_channels, kernel_size=1, stride=1, padding=0)\n",
    "\n",
    "        self.sigmoid = nn.Sigmoid()\n",
    "        self.relu = nn.ReLU(inplace=True)\n",
    "\n",
    "        # # Khởi tạo trọng số bằng tay với generator\n",
    "        # self._init_weights()\n",
    "\n",
    "    def init_weights(self,generator):\n",
    "        # Khởi tạo theta\n",
    "        init.kaiming_uniform_(self.theta.weight, a=math.sqrt(5), generator=self.generator)\n",
    "        if self.theta.bias is not None:\n",
    "            fan_in, _ = init._calculate_fan_in_and_fan_out(self.theta.weight)\n",
    "            bound = 1 / math.sqrt(fan_in)\n",
    "            init.uniform_(self.theta.bias, -bound, bound, generator=self.generator)\n",
    "\n",
    "        # Khởi tạo psi\n",
    "        init.kaiming_uniform_(self.psi.weight, a=math.sqrt(5), generator=self.generator)\n",
    "        if self.psi.bias is not None:\n",
    "            fan_in, _ = init._calculate_fan_in_and_fan_out(self.psi.weight)\n",
    "            bound = 1 / math.sqrt(fan_in)\n",
    "            init.uniform_(self.psi.bias, -bound, bound, generator=self.generator)\n",
    "\n",
    "        # Khởi tạo W\n",
    "        init.kaiming_uniform_(self.W.weight, a=math.sqrt(5), generator=self.generator)\n",
    "        if self.W.bias is not None:\n",
    "            fan_in, _ = init._calculate_fan_in_and_fan_out(self.W.weight)\n",
    "            bound = 1 / math.sqrt(fan_in)\n",
    "            init.uniform_(self.W.bias, -bound, bound, generator=self.generator)\n",
    "\n",
    "    def forward(self, x):\n",
    "        psi_f = self.sigmoid(self.psi(x))       # [B, 1, H, W]\n",
    "        attention = psi_f.expand_as(x)          # [B, C, H, W]\n",
    "        y = x * attention                       # Apply attention\n",
    "        W_y = y                                 # hoặc self.W(y) nếu muốn học thêm\n",
    "        return W_y, attention\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "38e68925",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.288649Z",
     "iopub.status.busy": "2025-08-07T11:34:33.288466Z",
     "iopub.status.idle": "2025-08-07T11:34:33.300334Z",
     "shell.execute_reply": "2025-08-07T11:34:33.299830Z"
    },
    "papermill": {
     "duration": 0.01868,
     "end_time": "2025-08-07T11:34:33.301453",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.282773",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n",
    "\n",
    "class RegNetWithAttentionAndSoftmax(nn.Module):\n",
    "    def __init__(self, num_components):\n",
    "        super(RegNetWithAttentionAndSoftmax, self).__init__()\n",
    "        self.num_components = num_components\n",
    "\n",
    "        # Backbone\n",
    "        # base_model = models.regnet_y_400mf(pretrained=True)\n",
    "        # self.backbone = nn.Sequential(*list(base_model.children())[:-2])  # Remove classifier head\n",
    "        # backbone_out_channels = 440  # RegNet_Y_400MF output channels\n",
    "      \n",
    "      # Load pretrained EfficientNetV2-S\n",
    "        weights = EfficientNet_V2_S_Weights.IMAGENET1K_V1\n",
    "        base_model = models.efficientnet_v2_s(weights=weights)\n",
    "\n",
    "        # Replace first Conv2d to accept 1-channel input\n",
    "        old_conv = base_model.features[0][0]  # First conv layer (Conv2d)\n",
    "        new_conv = nn.Conv2d(\n",
    "            in_channels=1,\n",
    "            out_channels=old_conv.out_channels,\n",
    "            kernel_size=old_conv.kernel_size,\n",
    "            stride=old_conv.stride,\n",
    "            padding=old_conv.padding,\n",
    "            bias=old_conv.bias is not None\n",
    "        )\n",
    "\n",
    "        # Initialize weights by averaging RGB weights\n",
    "        with torch.no_grad():\n",
    "            new_conv.weight[:] = old_conv.weight.mean(dim=1, keepdim=True)\n",
    "            if old_conv.bias is not None:\n",
    "                new_conv.bias[:] = old_conv.bias\n",
    "\n",
    "        # Replace conv in base model\n",
    "        base_model.features[0][0] = new_conv\n",
    "\n",
    "        # Remove classification head, gap\n",
    "        self.backbone = nn.Sequential(*list(base_model.children())[:-2])  # Output shape: (B, 1280, H/32, W/32)\n",
    "     \n",
    "        # Automatically infer output channels\n",
    "        with torch.no_grad():\n",
    "            dummy = torch.randn(1, 1, 384, 384)\n",
    "            out = self.backbone(dummy)\n",
    "            self.backbone_out_channels = out.shape[1]\n",
    "     \n",
    "       \n",
    "        \n",
    "        # # attention có khởi tạo bằng generator\n",
    "        # self.attention_blocks = nn.ModuleList([\n",
    "        #     self._init_attention_gate(backbone_out_channels)\n",
    "        #     for _ in range(num_components)\n",
    "        # ])\n",
    "\n",
    "        self.attention_blocks = None  # Khởi tạo sau khi .to()\n",
    "        \n",
    "        # sau attention Regression branches: mỗi nhánh sinh [mu, log_sigma2_raw]\n",
    "        self.reg_branches = nn.ModuleList()\n",
    "        for i in range(num_components):\n",
    "            branch = nn.Sequential(\n",
    "                nn.Linear(self.backbone_out_channels, 2),     \n",
    "            )\n",
    "            self.reg_branches.append(branch)\n",
    "\n",
    "        # Mixing coefficient (pi): từ đặc trưng trung bình\n",
    "        # self.softmax_branch = nn.Sequential(\n",
    "        #     nn.Linear(backbone_out_channels, num_components),\n",
    "        #     nn.Softmax(dim=1)  \n",
    "        # )\n",
    "        self.softmax_branch = nn.Sequential(\n",
    "            nn.Linear(self.backbone_out_channels, num_components),\n",
    "            SoftmaxWithTemperature(temperature=temperature)  # ✅ sử dụng ở đây\n",
    "        )\n",
    "\n",
    "        self.gap = nn.AdaptiveAvgPool2d(1)  # Global Average Pooling\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "    # def _init_attention_gate(self, channels):\n",
    "    #     gen = torch.Generator(device=\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "    #     gen.manual_seed(torch.seed())  # Hoặc torch.initial_seed() nếu bạn muốn\n",
    "    #     print(f\"Attention gate seed: {gen.initial_seed()}\")\n",
    "    #     return SelfAttentionGate(channels, generator=gen)\n",
    "        \n",
    "    \n",
    "\n",
    "    def init_attention_blocks(self, device):\n",
    "        self.attention_blocks = nn.ModuleList()\n",
    "        for i in range(self.num_components):\n",
    "            gen = torch.Generator(device=device)\n",
    "            gen.manual_seed(torch.seed())\n",
    "              \n",
    "            att = SelfAttentionGate(self.backbone_out_channels).to(device)\n",
    "            att.init_weights(generator=gen)\n",
    "            self.attention_blocks.append(att)\n",
    "        \n",
    "    def forward(self, x):\n",
    "        feat_map = self.backbone(x)  # [B, C, H, W]\n",
    "       \n",
    "        # Attention + pooling\n",
    "        attention_feats = []\n",
    "        attention_maps = []\n",
    "        for att in self.attention_blocks:\n",
    "            W_y, attention = att(feat_map)  # attention là mask sigmoid, W_y = x * attention\n",
    "            attention_feats.append(W_y)\n",
    "            attention_maps.append(attention)\n",
    "     \n",
    "        # Attention + pooling\n",
    "        pooled_feats = [self.gap(f).squeeze(-1).squeeze(-1) for f in attention_feats]  # [B, C] * K\n",
    "        # print('pooled_feats shape:', pooled_feats[0].shape)\n",
    "\n",
    "        # Regression outputs\n",
    "        reg_outputs = [reg(f) for reg, f in zip(self.reg_branches, pooled_feats)]  # [B, 2] * K\n",
    "        # print('reg_outputs shape:', reg_outputs[0].shape)\n",
    "        reg_outputs = torch.stack(reg_outputs, dim=1)  # [B, K, 2]\n",
    "        # print('reg_outputs shape:', reg_outputs[0].shape)\n",
    "      \n",
    "    \n",
    "        mu = reg_outputs[:, :, 0]                     # [B, K]\n",
    "        \n",
    "        log_sigma2 = (reg_outputs[:, :, 1])\n",
    "        # log_sigma2 = torch.clamp(log_sigma2, min=-10.0, max=10.0)\n",
    "\n",
    "\n",
    "        \n",
    "        gap_feat = self.gap(feat_map).view(x.size(0), -1)  # [B, C]\n",
    "        pi = self.softmax_branch(gap_feat)          # [B, num_components]\n",
    "        \n",
    "        # Trả thêm attention maps: [B, K, C, H, W]\n",
    "        attention_maps = torch.stack(attention_maps, dim=1)  # [B, K, C, H, W]\n",
    "       \n",
    "        return pi, mu, log_sigma2, attention_maps\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d7f48749",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.312522Z",
     "iopub.status.busy": "2025-08-07T11:34:33.312309Z",
     "iopub.status.idle": "2025-08-07T11:34:33.315865Z",
     "shell.execute_reply": "2025-08-07T11:34:33.315062Z"
    },
    "papermill": {
     "duration": 0.01058,
     "end_time": "2025-08-07T11:34:33.316993",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.306413",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.21.0+cu124\n"
     ]
    }
   ],
   "source": [
    "import torchvision\n",
    "print(torchvision.__version__)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3789916",
   "metadata": {
    "papermill": {
     "duration": 0.004701,
     "end_time": "2025-08-07T11:34:33.326589",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.321888",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Tổng loss = mdn_loss + lambda * diversity_loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b2383a54",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.337187Z",
     "iopub.status.busy": "2025-08-07T11:34:33.336984Z",
     "iopub.status.idle": "2025-08-07T11:34:33.341391Z",
     "shell.execute_reply": "2025-08-07T11:34:33.340839Z"
    },
    "papermill": {
     "duration": 0.011107,
     "end_time": "2025-08-07T11:34:33.342544",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.331437",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def mdn_loss(y, pi, mu, log_sigma2):\n",
    "    \"\"\"\n",
    "    y: [B] - ground truth\n",
    "    pi: [B, K]\n",
    "    mu: [B, K]\n",
    "    log_sigma2: [B, K]\n",
    "    \n",
    "    Return: scalar loss (mean NLL)\n",
    "    \"\"\"\n",
    "    sigma2 = torch.exp(log_sigma2) + eps\n",
    "    y = y.unsqueeze(1)  # [B, 1]\n",
    "    sqrt_2pi = torch.sqrt(torch.tensor(2.0 * torch.pi, device=y.device, dtype=y.dtype))\n",
    "\n",
    "    # Gaussian PDF: [B, K]\n",
    "    prob = (1.0 / (sigma2 * sqrt_2pi)) * \\\n",
    "           torch.exp(-0.5 * ((y - mu)**2) / sigma2 )\n",
    "\n",
    "    weighted_prob = pi * prob  # [B, K]\n",
    "    total_prob = torch.sum(weighted_prob, dim=1)  # [B]\n",
    "\n",
    "    nll = -torch.log(total_prob + eps)\n",
    "    return nll.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "95c316ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.354010Z",
     "iopub.status.busy": "2025-08-07T11:34:33.353527Z",
     "iopub.status.idle": "2025-08-07T11:34:33.358293Z",
     "shell.execute_reply": "2025-08-07T11:34:33.357727Z"
    },
    "papermill": {
     "duration": 0.011421,
     "end_time": "2025-08-07T11:34:33.359334",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.347913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def mdn_loss1(y, pi, mu, log_sigma2, entropy_weight=0.01):\n",
    "    sigma2 = torch.exp(log_sigma2) + eps\n",
    "    y = y.unsqueeze(1)\n",
    "    sqrt_2pi = torch.sqrt(torch.tensor(2.0 * torch.pi, device=y.device, dtype=y.dtype))\n",
    "\n",
    "    prob = (1.0 / (torch.sqrt(sigma2) * sqrt_2pi)) * \\\n",
    "           torch.exp(-0.5 * ((y - mu)**2) / sigma2)\n",
    "    prob = torch.clamp(prob, min=1e-12)  # để tránh log(0)\n",
    "\n",
    "    total_prob = torch.sum(pi * prob, dim=1)\n",
    "    nll = -torch.log(total_prob + eps)\n",
    "\n",
    "    # Entropy of pi (muốn entropy cao → pi phân bố đều hơn)\n",
    "    pi_entropy = -torch.sum(pi * torch.log(pi + 1e-8), dim=1).mean()\n",
    "\n",
    "    return nll.mean() - entropy_weight * pi_entropy\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "003b9fff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.370372Z",
     "iopub.status.busy": "2025-08-07T11:34:33.370191Z",
     "iopub.status.idle": "2025-08-07T11:34:33.374579Z",
     "shell.execute_reply": "2025-08-07T11:34:33.374068Z"
    },
    "papermill": {
     "duration": 0.011036,
     "end_time": "2025-08-07T11:34:33.375604",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.364568",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def diversity_loss(attention_maps):\n",
    "    \"\"\"\n",
    "    attention_maps: [B, K, C, H, W]\n",
    "    Trả về độ tương đồng giữa các attention maps (để giảm)\n",
    "    \"\"\"\n",
    "    B, K, C, H, W = attention_maps.shape\n",
    "\n",
    "    # Mean across channel → [B, K, H, W]\n",
    "    spatial_maps = attention_maps.mean(dim=2)\n",
    "\n",
    "    # Flatten to [B, K, H*W]\n",
    "    flat_maps = spatial_maps.view(B, K, -1)\n",
    "\n",
    "    # Normalize theo spatial vector (optional: để giống cosine)\n",
    "    flat_maps = F.normalize(flat_maps, dim=2)\n",
    "\n",
    "    # Dot product similarity: [B, K, K]\n",
    "    sim_matrix = torch.bmm(flat_maps, flat_maps.transpose(1, 2))\n",
    "\n",
    "    # Loại bỏ diagonal (i==j)\n",
    "    eye = torch.eye(K, device=attention_maps.device).unsqueeze(0)  # [1, K, K]\n",
    "    sim_matrix = sim_matrix * (1 - eye)\n",
    "\n",
    "    # Trung bình loss trên batch\n",
    "    return sim_matrix.sum() / B\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "01e14822",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.386705Z",
     "iopub.status.busy": "2025-08-07T11:34:33.386529Z",
     "iopub.status.idle": "2025-08-07T11:34:33.391153Z",
     "shell.execute_reply": "2025-08-07T11:34:33.390438Z"
    },
    "papermill": {
     "duration": 0.011786,
     "end_time": "2025-08-07T11:34:33.392494",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.380708",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def diversity_loss1(attention_maps):\n",
    "    \"\"\"\n",
    "    attention_maps: [B, K, C, H, W]\n",
    "    Trả về tổng độ tương đồng giữa các cặp attention maps khác nhau.\n",
    "    \"\"\"\n",
    "    B, K, C, H, W = attention_maps.shape\n",
    "\n",
    "    # [B, K, H, W]\n",
    "    spatial_maps = attention_maps.mean(dim=2)\n",
    "\n",
    "    # [B, K, H*W]\n",
    "    flat_maps = spatial_maps.view(B, K, -1)\n",
    "\n",
    "    # Normalize để tính cosine similarity\n",
    "    flat_maps = F.normalize(flat_maps, dim=2)\n",
    "\n",
    "    loss = 0\n",
    "    count = 0\n",
    "    for i in range(K):\n",
    "        for j in range(i + 1, K):\n",
    "            sim = (flat_maps[:, i] * flat_maps[:, j]).sum(dim=1)  # [B]\n",
    "            loss += sim.sum()\n",
    "            count += B\n",
    "\n",
    "    return loss / count  # trung bình theo batch\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9a6be583",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.404255Z",
     "iopub.status.busy": "2025-08-07T11:34:33.403703Z",
     "iopub.status.idle": "2025-08-07T11:34:33.407649Z",
     "shell.execute_reply": "2025-08-07T11:34:33.406900Z"
    },
    "papermill": {
     "duration": 0.011156,
     "end_time": "2025-08-07T11:34:33.408700",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.397544",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def total_loss(y, pi, mu, log_sigma2, attention_maps, lambda_div):\n",
    "    \"\"\"\n",
    "    Tổng loss = mdn_loss + lambda * diversity_loss\n",
    "    \"\"\"\n",
    "    main = mdn_loss1(y, pi, mu, log_sigma2)\n",
    "    div = diversity_loss1(attention_maps)\n",
    "    return main + lambda_div * div\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e26dd704",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.419656Z",
     "iopub.status.busy": "2025-08-07T11:34:33.419464Z",
     "iopub.status.idle": "2025-08-07T11:34:33.423046Z",
     "shell.execute_reply": "2025-08-07T11:34:33.422451Z"
    },
    "papermill": {
     "duration": 0.010174,
     "end_time": "2025-08-07T11:34:33.424034",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.413860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def total_loss1(y, pi, mu, log_sigma2, attention_maps, lambda_div):\n",
    "    \"\"\"\n",
    "    Tổng loss = mdn_loss + lambda * diversity_loss\n",
    "    \"\"\"\n",
    "    main = mdn_loss1(y, pi, mu, log_sigma2)\n",
    "    div = diversity_loss1(attention_maps)\n",
    "    return main + lambda_div * div"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f2f332b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.435047Z",
     "iopub.status.busy": "2025-08-07T11:34:33.434825Z",
     "iopub.status.idle": "2025-08-07T11:34:33.438100Z",
     "shell.execute_reply": "2025-08-07T11:34:33.437569Z"
    },
    "papermill": {
     "duration": 0.009824,
     "end_time": "2025-08-07T11:34:33.439044",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.429220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # Dummy input\n",
    "# B, C, H, W = 2, 1, 384, 384\n",
    "# x = torch.randn(B, C, H, W)\n",
    "# y = torch.tensor([10.0, 12.0])  # tuổi ground truth\n",
    "\n",
    "# # Model\n",
    "# model = RegNetWithAttentionAndSoftmax(num_components=3)\n",
    "\n",
    "# # Forward\n",
    "# pi, mu, log_sigma2, attention_maps = model(x)\n",
    "\n",
    "# # Print shapes để kiểm tra\n",
    "# print(\"pi:\", pi)                  # [B, K]\n",
    "# print(\"mu:\", mu)                  # [B, K]\n",
    "# print(\"log_sigma2:\", log_sigma2)            # [B, K]\n",
    "# print(\"attention_maps:\", attention_maps.shape)  # [B, K, C, H', W']\n",
    "\n",
    "\n",
    "# # Compute loss\n",
    "# loss_mdn = mdn_loss(y, pi, mu, log_sigma2)\n",
    "# loss = total_loss(y, pi, mu, log_sigma2, attention_maps, lambda_div=0.1)\n",
    "# print(\"Total loss mdn:\", loss_mdn.item())\n",
    "# print(\"Total loss:\", loss.item())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca5e64d5",
   "metadata": {
    "papermill": {
     "duration": 0.005,
     "end_time": "2025-08-07T11:34:33.449139",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.444139",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0feffc77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.460587Z",
     "iopub.status.busy": "2025-08-07T11:34:33.460402Z",
     "iopub.status.idle": "2025-08-07T11:34:33.470311Z",
     "shell.execute_reply": "2025-08-07T11:34:33.469765Z"
    },
    "papermill": {
     "duration": 0.016897,
     "end_time": "2025-08-07T11:34:33.471471",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.454574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n",
    "class AgeGenderDataset(Dataset):\n",
    "    def __init__(self, image_dirs, csv_path, use_age=True, use_male=False, transform=None, image_ext=\".png\"):\n",
    "        \"\"\"\n",
    "        image_dirs: 1 thư mục hoặc list thư mục chứa ảnh\n",
    "        csv_path: đường dẫn đến file csv\n",
    "        use_age: True → dùng age làm label\n",
    "        use_male: True → thêm gender vào label\n",
    "        image_ext: phần đuôi ảnh, ví dụ '.png'\n",
    "        \"\"\"\n",
    "        self.image_dirs = image_dirs if isinstance(image_dirs, list) else [image_dirs]\n",
    "        # self.data = pd.read_csv(csv_path)\n",
    "\n",
    "        if csv_path.endswith(\".xlsx\"):\n",
    "            self.data = pd.read_excel(csv_path)\n",
    "        else:\n",
    "            self.data = pd.read_csv(csv_path)\n",
    "\n",
    "        self.use_age = use_age\n",
    "        self.use_male = use_male\n",
    "        self.transform = transform\n",
    "        self.image_ext = image_ext\n",
    "\n",
    "        # Chuẩn hóa tên cột\n",
    "        if 'id' not in self.data.columns:\n",
    "            if 'Image ID' in self.data.columns:\n",
    "                self.data.rename(columns={'Image ID': 'id'}, inplace=True)\n",
    "            elif 'Case ID' in self.data.columns:\n",
    "                self.data.rename(columns={'Case ID': 'id'}, inplace=True)\n",
    "\n",
    "        if 'boneage' not in self.data.columns:\n",
    "            if 'Bone Age (months)' in self.data.columns:\n",
    "                self.data.rename(columns={'Bone Age (months)': 'boneage'}, inplace=True)\n",
    "            elif 'Ground truth bone age (months)' in self.data.columns:\n",
    "                self.data.rename(columns={'Ground truth bone age (months)': 'boneage'}, inplace=True)\n",
    "\n",
    "        if 'male' not in self.data.columns:\n",
    "            if 'Sex' in self.data.columns:\n",
    "                self.data['male'] = self.data['Sex'].map({'M': True, 'F': False})\n",
    "            elif 'gender' in self.data.columns:\n",
    "                self.data['male'] = self.data['gender'].map({'male': True, 'female': False})\n",
    "\n",
    "        self.data['male'] = self.data['male'].astype(bool)\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.data)\n",
    "\n",
    "    def find_image_path(self, img_id):\n",
    "        \"\"\"Tìm ảnh trong các thư mục đã cho.\"\"\"\n",
    "        for dir in self.image_dirs:\n",
    "            candidate = os.path.join(dir, img_id + self.image_ext)\n",
    "            if os.path.exists(candidate):\n",
    "                return candidate\n",
    "        raise FileNotFoundError(f\"Không tìm thấy {img_id + self.image_ext} trong bất kỳ thư mục nào.\")\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        row = self.data.iloc[idx]\n",
    "        img_id = str(row['id']).strip()\n",
    "        img_path = self.find_image_path(img_id)\n",
    "\n",
    "        image = Image.open(img_path).convert(\"L\")\n",
    "        if self.transform:\n",
    "            image = self.transform(image)\n",
    "\n",
    "        if self.use_age:\n",
    "            age = float(row['boneage'])\n",
    "            if self.use_male:\n",
    "                gender = float(row['male'])  # True → 1.0, False → 0.0\n",
    "                label = torch.tensor([age, gender], dtype=torch.float32)\n",
    "            else:\n",
    "                label = torch.tensor(age, dtype=torch.float32)\n",
    "        else:\n",
    "            label = torch.tensor([-1.0, -1.0] if self.use_male else -1.0, dtype=torch.float32)\n",
    "\n",
    "        return image, label\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3a971db4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.482293Z",
     "iopub.status.busy": "2025-08-07T11:34:33.482087Z",
     "iopub.status.idle": "2025-08-07T11:34:33.485591Z",
     "shell.execute_reply": "2025-08-07T11:34:33.485028Z"
    },
    "papermill": {
     "duration": 0.010207,
     "end_time": "2025-08-07T11:34:33.486682",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.476475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import torchvision.transforms.v2 as T\n",
    "# from PIL import Image\n",
    "# import os\n",
    "# import torch\n",
    "\n",
    "# # Đường dẫn thư mục ảnh\n",
    "# data_dir = '/kaggle/input/boneage-amazone-data/BoneAgeTrainingSet/boneage-training-dataset'\n",
    "\n",
    "# # Transform dùng T.ToImage + T.ToDtype thay vì ToImageTensor\n",
    "# transform = T.Compose([\n",
    "#     T.ToImage(),                           # PIL → Tensor (C, H, W), dtype=uint8\n",
    "#     T.ToDtype(torch.float32, scale=True), # → float32, chia 255 nếu scale=True\n",
    "# ])\n",
    "\n",
    "# sum_ = 0.0\n",
    "# sum_squared = 0.0\n",
    "# num_pixels = 0\n",
    "\n",
    "# for file in os.listdir(data_dir):\n",
    "#     if file.endswith(('.png', '.jpg', '.jpeg')):\n",
    "#         img = Image.open(os.path.join(data_dir, file)).convert('L')  # ảnh grayscale\n",
    "#         img_tensor = transform(img)  # shape: (1, H, W), float32 ∈ [0, 1]\n",
    "\n",
    "#         sum_ += img_tensor.sum().item()\n",
    "#         sum_squared += (img_tensor ** 2).sum().item()\n",
    "#         num_pixels += img_tensor.numel()\n",
    "\n",
    "# mean = sum_ / num_pixels\n",
    "# std = (sum_squared / num_pixels - mean ** 2) ** 0.5\n",
    "\n",
    "# print(f\"Mean: {mean:.6f}\")\n",
    "# print(f\"Std: {std:.6f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7ac0e871",
   "metadata": {
    "papermill": {
     "duration": 0.005416,
     "end_time": "2025-08-07T11:34:33.497277",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.491861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "428d5abc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.511472Z",
     "iopub.status.busy": "2025-08-07T11:34:33.511229Z",
     "iopub.status.idle": "2025-08-07T11:34:33.565164Z",
     "shell.execute_reply": "2025-08-07T11:34:33.564553Z"
    },
    "papermill": {
     "duration": 0.062523,
     "end_time": "2025-08-07T11:34:33.566504",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.503981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "# Paths\n",
    "train_dir = \"/kaggle/input/boneage-amazone-data/BoneAgeTrainingSet/boneage-training-dataset\"\n",
    "train_csv = \"/kaggle/input/boneage-amazone-data/BoneAgeTrainingSetAnnotations (1)/train.csv\"\n",
    "val_csv = \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/Validation Dataset.csv\"\n",
    "val_img_dirs = [\n",
    "    \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/boneage-validation-dataset-1/boneage-validation-dataset-1\",\n",
    "    \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/boneage-validation-dataset-2/boneage-validation-dataset-2\",\n",
    "]\n",
    "\n",
    "\n",
    "# Resize + CenterCrop + ToTensor \n",
    "transform = v2.Compose([\n",
    "    v2.ToImage(),\n",
    "    v2.Resize((232, 232), interpolation=InterpolationMode.BILINEAR),\n",
    "    v2.CenterCrop(224),\n",
    "    v2.ToDtype(torch.float32, scale=True),\n",
    "    v2.Normalize(mean=[mean], std=[std])\n",
    "])\n",
    "\n",
    "\n",
    "\n",
    "# Dataset & DataLoader\n",
    "train_dataset = AgeGenderDataset(train_dir, train_csv, use_age=True, transform=transform)\n",
    "train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True,num_workers=4, pin_memory=True)\n",
    "\n",
    "val_dataset = AgeGenderDataset(val_img_dirs, val_csv, use_age=True, transform=transform)\n",
    "val_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=4, pin_memory=True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a4870b44",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.577751Z",
     "iopub.status.busy": "2025-08-07T11:34:33.577538Z",
     "iopub.status.idle": "2025-08-07T11:34:33.582208Z",
     "shell.execute_reply": "2025-08-07T11:34:33.581471Z"
    },
    "papermill": {
     "duration": 0.011353,
     "end_time": "2025-08-07T11:34:33.583326",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.571973",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "from pathlib import Path\n",
    "\n",
    "def save_model(model: torch.nn.Module,\n",
    "               target_dir: str,\n",
    "               model_name: str):\n",
    "\n",
    "  # Create target directory\n",
    "  target_dir_path = Path(target_dir)\n",
    "  target_dir_path.mkdir(parents=True,\n",
    "                        exist_ok=True)\n",
    "  # Create model save path\n",
    "  assert model_name.endswith(\".pth\") or model_name.endswith(\".pt\"), \"model_name should end with '.pt' or '.pth'\"\n",
    "  model_save_path = target_dir_path / model_name\n",
    "\n",
    "  # Save the model state_dict()\n",
    "  print(f\"[INFO] Saving model to: {model_save_path}\")\n",
    "  torch.save(obj=model.state_dict(),\n",
    "             f=model_save_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a4974712",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.594629Z",
     "iopub.status.busy": "2025-08-07T11:34:33.594439Z",
     "iopub.status.idle": "2025-08-07T11:34:33.600330Z",
     "shell.execute_reply": "2025-08-07T11:34:33.599834Z"
    },
    "papermill": {
     "duration": 0.012899,
     "end_time": "2025-08-07T11:34:33.601426",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.588527",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "def train_step(model, dataloader, loss_fn, optimizer, device, lambda_div):\n",
    "    model.train()\n",
    "    total_loss_train = 0.0\n",
    "\n",
    "    for X, y in dataloader:\n",
    "        X, y = X.to(device), y.to(device)\n",
    "\n",
    "        pi, mu, log_sigma2, attention_maps = model(X)\n",
    "\n",
    "        # Gọi loss function truyền vào\n",
    "        loss = loss_fn(y, pi, mu, log_sigma2)\n",
    "\n",
    "        print(\"Ground truth y:\", y[:1])\n",
    "        print(\"Predicted mu:\", mu[:1])\n",
    "        print(\"Predicted sigma2:\",torch.exp(log_sigma2[:1]) + eps )\n",
    "        print(\"pi:\", pi[:1])\n",
    "        print(\"loss:\", loss.item())\n",
    "\n",
    "        optimizer.zero_grad()\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        total_loss_train += loss.item()\n",
    "\n",
    "    return total_loss_train / len(dataloader)\n",
    "\n",
    "\n",
    "def valid_step(model, dataloader, loss_fn, device, lambda_div):\n",
    "    model.eval()\n",
    "    total_loss_val = 0.0\n",
    "\n",
    "    with torch.inference_mode():\n",
    "        for X, y in dataloader:\n",
    "            X, y = X.to(device), y.to(device)\n",
    "            pi, mu, log_sigma2, attention_maps = model(X)\n",
    "            loss = loss_fn(y, pi, mu, log_sigma2)\n",
    "            total_loss_val += loss.item()\n",
    "\n",
    "    return total_loss_val / len(dataloader)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    " # loss = total_loss(y, pi, mu, log_sigma2, attention_maps, lambda_div=lambda_div)  \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "2f9679d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.612870Z",
     "iopub.status.busy": "2025-08-07T11:34:33.612636Z",
     "iopub.status.idle": "2025-08-07T11:34:33.619285Z",
     "shell.execute_reply": "2025-08-07T11:34:33.618751Z"
    },
    "papermill": {
     "duration": 0.013512,
     "end_time": "2025-08-07T11:34:33.620235",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.606723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def train(model: torch.nn.Module, \n",
    "          train_dataloader: torch.utils.data.DataLoader, \n",
    "          valid_dataloader: torch.utils.data.DataLoader, \n",
    "          optimizer: torch.optim.Optimizer,\n",
    "          loss_fn,\n",
    "          epochs: int,\n",
    "          model_name: str,\n",
    "          device: torch.device,\n",
    "          lambda_div: float = 0.0,\n",
    "          scheduler=None) -> Dict[str, List]:\n",
    "\n",
    "    results = {\n",
    "        \"train_loss\": [],\n",
    "        \"valid_loss\": [],\n",
    "        \"learning_rates\": []\n",
    "    }\n",
    "\n",
    "    model.to(device)\n",
    "\n",
    "    for epoch in tqdm(range(epochs)):\n",
    "        train_loss = train_step(\n",
    "            model=model,\n",
    "            dataloader=train_dataloader,\n",
    "            loss_fn=loss_fn,\n",
    "            optimizer=optimizer,\n",
    "            device=device,\n",
    "            lambda_div=lambda_div\n",
    "        )\n",
    "\n",
    "        valid_loss = valid_step(\n",
    "            model=model,\n",
    "            dataloader=valid_dataloader,\n",
    "            loss_fn=loss_fn,\n",
    "            device=device,\n",
    "            lambda_div=lambda_div\n",
    "        )\n",
    "\n",
    "        # Gọi scheduler sau valid_loss\n",
    "        if scheduler is not None:\n",
    "            scheduler.step(valid_loss)\n",
    "\n",
    "        current_lr = optimizer.param_groups[0]['lr']\n",
    "\n",
    "        # Ghi lại log\n",
    "        print(\n",
    "            f\"Epoch {epoch+1:02d} | \"\n",
    "            f\"Train Loss: {train_loss:.4f} | \"\n",
    "            f\"Valid Loss: {valid_loss:.4f} | \"\n",
    "            f\"LR: {current_lr:.6f}\"\n",
    "        )\n",
    "\n",
    "        # Lưu kết quả\n",
    "        results[\"train_loss\"].append(train_loss)\n",
    "        results[\"valid_loss\"].append(valid_loss)\n",
    "        results[\"learning_rates\"].append(current_lr)\n",
    "    \n",
    "    # Lưu mô hình\n",
    "    save_path = \"/kaggle/working/\"\n",
    "    save_model(model=model,\n",
    "               target_dir=save_path,\n",
    "               model_name=model_name)\n",
    "\n",
    "    return results, model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b10a453",
   "metadata": {
    "papermill": {
     "duration": 0.004697,
     "end_time": "2025-08-07T11:34:33.630100",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.625403",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e6ff7d14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:33.643473Z",
     "iopub.status.busy": "2025-08-07T11:34:33.643252Z",
     "iopub.status.idle": "2025-08-07T11:34:35.399885Z",
     "shell.execute_reply": "2025-08-07T11:34:35.399046Z"
    },
    "papermill": {
     "duration": 1.765697,
     "end_time": "2025-08-07T11:34:35.401199",
     "exception": false,
     "start_time": "2025-08-07T11:34:33.635502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Downloading: \"https://download.pytorch.org/models/efficientnet_v2_s-dd5fe13b.pth\" to /root/.cache/torch/hub/checkpoints/efficientnet_v2_s-dd5fe13b.pth\n",
      "100%|██████████| 82.7M/82.7M [00:00<00:00, 183MB/s]\n",
      "/usr/local/lib/python3.11/dist-packages/torch/optim/lr_scheduler.py:62: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "# Model, Loss, Optimizer\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "model = RegNetWithAttentionAndSoftmax(num_components=3)\n",
    "model = model.to(device)  # ⚠️ Phải to() trước khi init attention_blocks\n",
    "model.init_attention_blocks(device=device) \n",
    "\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=0.01)\n",
    "scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', \n",
    "                                                        factor=factor, patience=patience, verbose=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a65fa6d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:35.413777Z",
     "iopub.status.busy": "2025-08-07T11:34:35.413565Z",
     "iopub.status.idle": "2025-08-07T11:34:35.422116Z",
     "shell.execute_reply": "2025-08-07T11:34:35.421264Z"
    },
    "papermill": {
     "duration": 0.016558,
     "end_time": "2025-08-07T11:34:35.423726",
     "exception": false,
     "start_time": "2025-08-07T11:34:35.407168",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "backbone.0.0.0.weight: trainable (shape=torch.Size([24, 1, 3, 3]))\n",
      "backbone.0.0.1.weight: trainable (shape=torch.Size([24]))\n",
      "backbone.0.0.1.bias: trainable (shape=torch.Size([24]))\n",
      "backbone.0.1.0.block.0.0.weight: trainable (shape=torch.Size([24, 24, 3, 3]))\n",
      "backbone.0.1.0.block.0.1.weight: trainable (shape=torch.Size([24]))\n",
      "backbone.0.1.0.block.0.1.bias: trainable (shape=torch.Size([24]))\n",
      "backbone.0.1.1.block.0.0.weight: trainable (shape=torch.Size([24, 24, 3, 3]))\n",
      "backbone.0.1.1.block.0.1.weight: trainable (shape=torch.Size([24]))\n",
      "backbone.0.1.1.block.0.1.bias: trainable (shape=torch.Size([24]))\n",
      "backbone.0.2.0.block.0.0.weight: trainable (shape=torch.Size([96, 24, 3, 3]))\n",
      "backbone.0.2.0.block.0.1.weight: trainable (shape=torch.Size([96]))\n",
      "backbone.0.2.0.block.0.1.bias: trainable (shape=torch.Size([96]))\n",
      "backbone.0.2.0.block.1.0.weight: trainable (shape=torch.Size([48, 96, 1, 1]))\n",
      "backbone.0.2.0.block.1.1.weight: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.0.block.1.1.bias: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.1.block.0.0.weight: trainable (shape=torch.Size([192, 48, 3, 3]))\n",
      "backbone.0.2.1.block.0.1.weight: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.1.block.0.1.bias: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.1.block.1.0.weight: trainable (shape=torch.Size([48, 192, 1, 1]))\n",
      "backbone.0.2.1.block.1.1.weight: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.1.block.1.1.bias: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.2.block.0.0.weight: trainable (shape=torch.Size([192, 48, 3, 3]))\n",
      "backbone.0.2.2.block.0.1.weight: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.2.block.0.1.bias: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.2.block.1.0.weight: trainable (shape=torch.Size([48, 192, 1, 1]))\n",
      "backbone.0.2.2.block.1.1.weight: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.2.block.1.1.bias: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.3.block.0.0.weight: trainable (shape=torch.Size([192, 48, 3, 3]))\n",
      "backbone.0.2.3.block.0.1.weight: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.3.block.0.1.bias: trainable (shape=torch.Size([192]))\n",
      "backbone.0.2.3.block.1.0.weight: trainable (shape=torch.Size([48, 192, 1, 1]))\n",
      "backbone.0.2.3.block.1.1.weight: trainable (shape=torch.Size([48]))\n",
      "backbone.0.2.3.block.1.1.bias: trainable (shape=torch.Size([48]))\n",
      "backbone.0.3.0.block.0.0.weight: trainable (shape=torch.Size([192, 48, 3, 3]))\n",
      "backbone.0.3.0.block.0.1.weight: trainable (shape=torch.Size([192]))\n",
      "backbone.0.3.0.block.0.1.bias: trainable (shape=torch.Size([192]))\n",
      "backbone.0.3.0.block.1.0.weight: trainable (shape=torch.Size([64, 192, 1, 1]))\n",
      "backbone.0.3.0.block.1.1.weight: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.0.block.1.1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.1.block.0.0.weight: trainable (shape=torch.Size([256, 64, 3, 3]))\n",
      "backbone.0.3.1.block.0.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.1.block.0.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.1.block.1.0.weight: trainable (shape=torch.Size([64, 256, 1, 1]))\n",
      "backbone.0.3.1.block.1.1.weight: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.1.block.1.1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.2.block.0.0.weight: trainable (shape=torch.Size([256, 64, 3, 3]))\n",
      "backbone.0.3.2.block.0.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.2.block.0.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.2.block.1.0.weight: trainable (shape=torch.Size([64, 256, 1, 1]))\n",
      "backbone.0.3.2.block.1.1.weight: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.2.block.1.1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.3.block.0.0.weight: trainable (shape=torch.Size([256, 64, 3, 3]))\n",
      "backbone.0.3.3.block.0.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.3.block.0.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.3.3.block.1.0.weight: trainable (shape=torch.Size([64, 256, 1, 1]))\n",
      "backbone.0.3.3.block.1.1.weight: trainable (shape=torch.Size([64]))\n",
      "backbone.0.3.3.block.1.1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.4.0.block.0.0.weight: trainable (shape=torch.Size([256, 64, 1, 1]))\n",
      "backbone.0.4.0.block.0.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.4.0.block.0.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.4.0.block.1.0.weight: trainable (shape=torch.Size([256, 1, 3, 3]))\n",
      "backbone.0.4.0.block.1.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.4.0.block.1.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.4.0.block.2.fc1.weight: trainable (shape=torch.Size([16, 256, 1, 1]))\n",
      "backbone.0.4.0.block.2.fc1.bias: trainable (shape=torch.Size([16]))\n",
      "backbone.0.4.0.block.2.fc2.weight: trainable (shape=torch.Size([256, 16, 1, 1]))\n",
      "backbone.0.4.0.block.2.fc2.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.4.0.block.3.0.weight: trainable (shape=torch.Size([128, 256, 1, 1]))\n",
      "backbone.0.4.0.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.0.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.1.block.0.0.weight: trainable (shape=torch.Size([512, 128, 1, 1]))\n",
      "backbone.0.4.1.block.0.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.1.block.0.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.1.block.1.0.weight: trainable (shape=torch.Size([512, 1, 3, 3]))\n",
      "backbone.0.4.1.block.1.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.1.block.1.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.1.block.2.fc1.weight: trainable (shape=torch.Size([32, 512, 1, 1]))\n",
      "backbone.0.4.1.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.4.1.block.2.fc2.weight: trainable (shape=torch.Size([512, 32, 1, 1]))\n",
      "backbone.0.4.1.block.2.fc2.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.1.block.3.0.weight: trainable (shape=torch.Size([128, 512, 1, 1]))\n",
      "backbone.0.4.1.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.1.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.2.block.0.0.weight: trainable (shape=torch.Size([512, 128, 1, 1]))\n",
      "backbone.0.4.2.block.0.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.2.block.0.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.2.block.1.0.weight: trainable (shape=torch.Size([512, 1, 3, 3]))\n",
      "backbone.0.4.2.block.1.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.2.block.1.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.2.block.2.fc1.weight: trainable (shape=torch.Size([32, 512, 1, 1]))\n",
      "backbone.0.4.2.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.4.2.block.2.fc2.weight: trainable (shape=torch.Size([512, 32, 1, 1]))\n",
      "backbone.0.4.2.block.2.fc2.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.2.block.3.0.weight: trainable (shape=torch.Size([128, 512, 1, 1]))\n",
      "backbone.0.4.2.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.2.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.3.block.0.0.weight: trainable (shape=torch.Size([512, 128, 1, 1]))\n",
      "backbone.0.4.3.block.0.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.3.block.0.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.3.block.1.0.weight: trainable (shape=torch.Size([512, 1, 3, 3]))\n",
      "backbone.0.4.3.block.1.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.3.block.1.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.3.block.2.fc1.weight: trainable (shape=torch.Size([32, 512, 1, 1]))\n",
      "backbone.0.4.3.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.4.3.block.2.fc2.weight: trainable (shape=torch.Size([512, 32, 1, 1]))\n",
      "backbone.0.4.3.block.2.fc2.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.3.block.3.0.weight: trainable (shape=torch.Size([128, 512, 1, 1]))\n",
      "backbone.0.4.3.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.3.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.4.block.0.0.weight: trainable (shape=torch.Size([512, 128, 1, 1]))\n",
      "backbone.0.4.4.block.0.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.4.block.0.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.4.block.1.0.weight: trainable (shape=torch.Size([512, 1, 3, 3]))\n",
      "backbone.0.4.4.block.1.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.4.block.1.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.4.block.2.fc1.weight: trainable (shape=torch.Size([32, 512, 1, 1]))\n",
      "backbone.0.4.4.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.4.4.block.2.fc2.weight: trainable (shape=torch.Size([512, 32, 1, 1]))\n",
      "backbone.0.4.4.block.2.fc2.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.4.block.3.0.weight: trainable (shape=torch.Size([128, 512, 1, 1]))\n",
      "backbone.0.4.4.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.4.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.5.block.0.0.weight: trainable (shape=torch.Size([512, 128, 1, 1]))\n",
      "backbone.0.4.5.block.0.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.5.block.0.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.5.block.1.0.weight: trainable (shape=torch.Size([512, 1, 3, 3]))\n",
      "backbone.0.4.5.block.1.1.weight: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.5.block.1.1.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.5.block.2.fc1.weight: trainable (shape=torch.Size([32, 512, 1, 1]))\n",
      "backbone.0.4.5.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.4.5.block.2.fc2.weight: trainable (shape=torch.Size([512, 32, 1, 1]))\n",
      "backbone.0.4.5.block.2.fc2.bias: trainable (shape=torch.Size([512]))\n",
      "backbone.0.4.5.block.3.0.weight: trainable (shape=torch.Size([128, 512, 1, 1]))\n",
      "backbone.0.4.5.block.3.1.weight: trainable (shape=torch.Size([128]))\n",
      "backbone.0.4.5.block.3.1.bias: trainable (shape=torch.Size([128]))\n",
      "backbone.0.5.0.block.0.0.weight: trainable (shape=torch.Size([768, 128, 1, 1]))\n",
      "backbone.0.5.0.block.0.1.weight: trainable (shape=torch.Size([768]))\n",
      "backbone.0.5.0.block.0.1.bias: trainable (shape=torch.Size([768]))\n",
      "backbone.0.5.0.block.1.0.weight: trainable (shape=torch.Size([768, 1, 3, 3]))\n",
      "backbone.0.5.0.block.1.1.weight: trainable (shape=torch.Size([768]))\n",
      "backbone.0.5.0.block.1.1.bias: trainable (shape=torch.Size([768]))\n",
      "backbone.0.5.0.block.2.fc1.weight: trainable (shape=torch.Size([32, 768, 1, 1]))\n",
      "backbone.0.5.0.block.2.fc1.bias: trainable (shape=torch.Size([32]))\n",
      "backbone.0.5.0.block.2.fc2.weight: trainable (shape=torch.Size([768, 32, 1, 1]))\n",
      "backbone.0.5.0.block.2.fc2.bias: trainable (shape=torch.Size([768]))\n",
      "backbone.0.5.0.block.3.0.weight: trainable (shape=torch.Size([160, 768, 1, 1]))\n",
      "backbone.0.5.0.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.0.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.1.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.1.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.1.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.1.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.1.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.1.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.1.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.1.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.1.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.1.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.1.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.1.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.1.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.2.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.2.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.2.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.2.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.2.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.2.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.2.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.2.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.2.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.2.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.2.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.2.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.2.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.3.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.3.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.3.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.3.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.3.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.3.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.3.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.3.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.3.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.3.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.3.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.3.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.3.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.4.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.4.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.4.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.4.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.4.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.4.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.4.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.4.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.4.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.4.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.4.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.4.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.4.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.5.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.5.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.5.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.5.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.5.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.5.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.5.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.5.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.5.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.5.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.5.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.5.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.5.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.6.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.6.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.6.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.6.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.6.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.6.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.6.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.6.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.6.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.6.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.6.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.6.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.6.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.7.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.7.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.7.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.7.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.7.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.7.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.7.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.7.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.7.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.7.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.7.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.7.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.7.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.8.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.5.8.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.8.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.8.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.5.8.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.8.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.8.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.5.8.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.5.8.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.5.8.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.5.8.block.3.0.weight: trainable (shape=torch.Size([160, 960, 1, 1]))\n",
      "backbone.0.5.8.block.3.1.weight: trainable (shape=torch.Size([160]))\n",
      "backbone.0.5.8.block.3.1.bias: trainable (shape=torch.Size([160]))\n",
      "backbone.0.6.0.block.0.0.weight: trainable (shape=torch.Size([960, 160, 1, 1]))\n",
      "backbone.0.6.0.block.0.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.6.0.block.0.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.6.0.block.1.0.weight: trainable (shape=torch.Size([960, 1, 3, 3]))\n",
      "backbone.0.6.0.block.1.1.weight: trainable (shape=torch.Size([960]))\n",
      "backbone.0.6.0.block.1.1.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.6.0.block.2.fc1.weight: trainable (shape=torch.Size([40, 960, 1, 1]))\n",
      "backbone.0.6.0.block.2.fc1.bias: trainable (shape=torch.Size([40]))\n",
      "backbone.0.6.0.block.2.fc2.weight: trainable (shape=torch.Size([960, 40, 1, 1]))\n",
      "backbone.0.6.0.block.2.fc2.bias: trainable (shape=torch.Size([960]))\n",
      "backbone.0.6.0.block.3.0.weight: trainable (shape=torch.Size([256, 960, 1, 1]))\n",
      "backbone.0.6.0.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.0.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.1.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.1.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.1.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.1.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.1.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.1.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.1.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.1.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.1.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.1.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.1.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.1.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.1.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.2.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.2.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.2.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.2.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.2.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.2.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.2.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.2.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.2.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.2.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.2.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.2.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.2.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.3.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.3.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.3.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.3.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.3.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.3.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.3.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.3.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.3.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.3.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.3.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.3.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.3.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.4.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.4.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.4.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.4.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.4.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.4.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.4.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.4.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.4.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.4.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.4.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.4.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.4.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.5.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.5.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.5.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.5.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.5.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.5.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.5.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.5.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.5.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.5.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.5.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.5.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.5.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.6.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.6.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.6.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.6.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.6.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.6.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.6.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.6.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.6.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.6.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.6.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.6.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.6.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.7.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.7.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.7.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.7.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.7.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.7.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.7.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.7.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.7.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.7.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.7.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.7.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.7.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.8.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.8.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.8.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.8.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.8.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.8.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.8.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.8.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.8.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.8.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.8.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.8.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.8.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.9.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.9.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.9.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.9.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.9.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.9.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.9.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.9.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.9.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.9.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.9.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.9.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.9.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.10.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.10.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.10.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.10.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.10.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.10.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.10.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.10.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.10.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.10.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.10.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.10.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.10.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.11.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.11.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.11.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.11.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.11.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.11.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.11.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.11.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.11.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.11.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.11.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.11.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.11.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.12.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.12.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.12.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.12.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.12.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.12.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.12.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.12.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.12.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.12.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.12.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.12.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.12.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.13.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.13.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.13.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.13.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.13.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.13.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.13.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.13.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.13.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.13.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.13.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.13.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.13.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.14.block.0.0.weight: trainable (shape=torch.Size([1536, 256, 1, 1]))\n",
      "backbone.0.6.14.block.0.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.14.block.0.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.14.block.1.0.weight: trainable (shape=torch.Size([1536, 1, 3, 3]))\n",
      "backbone.0.6.14.block.1.1.weight: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.14.block.1.1.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.14.block.2.fc1.weight: trainable (shape=torch.Size([64, 1536, 1, 1]))\n",
      "backbone.0.6.14.block.2.fc1.bias: trainable (shape=torch.Size([64]))\n",
      "backbone.0.6.14.block.2.fc2.weight: trainable (shape=torch.Size([1536, 64, 1, 1]))\n",
      "backbone.0.6.14.block.2.fc2.bias: trainable (shape=torch.Size([1536]))\n",
      "backbone.0.6.14.block.3.0.weight: trainable (shape=torch.Size([256, 1536, 1, 1]))\n",
      "backbone.0.6.14.block.3.1.weight: trainable (shape=torch.Size([256]))\n",
      "backbone.0.6.14.block.3.1.bias: trainable (shape=torch.Size([256]))\n",
      "backbone.0.7.0.weight: trainable (shape=torch.Size([1280, 256, 1, 1]))\n",
      "backbone.0.7.1.weight: trainable (shape=torch.Size([1280]))\n",
      "backbone.0.7.1.bias: trainable (shape=torch.Size([1280]))\n",
      "reg_branches.0.0.weight: trainable (shape=torch.Size([2, 1280]))\n",
      "reg_branches.0.0.bias: trainable (shape=torch.Size([2]))\n",
      "reg_branches.1.0.weight: trainable (shape=torch.Size([2, 1280]))\n",
      "reg_branches.1.0.bias: trainable (shape=torch.Size([2]))\n",
      "reg_branches.2.0.weight: trainable (shape=torch.Size([2, 1280]))\n",
      "reg_branches.2.0.bias: trainable (shape=torch.Size([2]))\n",
      "softmax_branch.0.weight: trainable (shape=torch.Size([3, 1280]))\n",
      "softmax_branch.0.bias: trainable (shape=torch.Size([3]))\n",
      "attention_blocks.0.theta.weight: trainable (shape=torch.Size([640, 1280, 1, 1]))\n",
      "attention_blocks.0.theta.bias: trainable (shape=torch.Size([640]))\n",
      "attention_blocks.0.psi.weight: trainable (shape=torch.Size([1, 1280, 1, 1]))\n",
      "attention_blocks.0.psi.bias: trainable (shape=torch.Size([1]))\n",
      "attention_blocks.0.W.weight: trainable (shape=torch.Size([1280, 1280, 1, 1]))\n",
      "attention_blocks.0.W.bias: trainable (shape=torch.Size([1280]))\n",
      "attention_blocks.1.theta.weight: trainable (shape=torch.Size([640, 1280, 1, 1]))\n",
      "attention_blocks.1.theta.bias: trainable (shape=torch.Size([640]))\n",
      "attention_blocks.1.psi.weight: trainable (shape=torch.Size([1, 1280, 1, 1]))\n",
      "attention_blocks.1.psi.bias: trainable (shape=torch.Size([1]))\n",
      "attention_blocks.1.W.weight: trainable (shape=torch.Size([1280, 1280, 1, 1]))\n",
      "attention_blocks.1.W.bias: trainable (shape=torch.Size([1280]))\n",
      "attention_blocks.2.theta.weight: trainable (shape=torch.Size([640, 1280, 1, 1]))\n",
      "attention_blocks.2.theta.bias: trainable (shape=torch.Size([640]))\n",
      "attention_blocks.2.psi.weight: trainable (shape=torch.Size([1, 1280, 1, 1]))\n",
      "attention_blocks.2.psi.bias: trainable (shape=torch.Size([1]))\n",
      "attention_blocks.2.W.weight: trainable (shape=torch.Size([1280, 1280, 1, 1]))\n",
      "attention_blocks.2.W.bias: trainable (shape=torch.Size([1280]))\n"
     ]
    }
   ],
   "source": [
    "for name, param in model.named_parameters():\n",
    "    if param.requires_grad:\n",
    "        print(f\"{name}: trainable (shape={param.shape})\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ae8d89d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:35.437582Z",
     "iopub.status.busy": "2025-08-07T11:34:35.437379Z",
     "iopub.status.idle": "2025-08-07T11:34:35.442043Z",
     "shell.execute_reply": "2025-08-07T11:34:35.441459Z"
    },
    "papermill": {
     "duration": 0.01217,
     "end_time": "2025-08-07T11:34:35.443135",
     "exception": false,
     "start_time": "2025-08-07T11:34:35.430965",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "for name, param in model.named_parameters():\n",
    "    if not param.requires_grad:\n",
    "        print(f\"{name}: ❌ frozen (not trainable)\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "62c1ca7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T11:34:35.455558Z",
     "iopub.status.busy": "2025-08-07T11:34:35.455379Z",
     "iopub.status.idle": "2025-08-07T14:28:29.135831Z",
     "shell.execute_reply": "2025-08-07T14:28:29.134718Z"
    },
    "papermill": {
     "duration": 10433.951765,
     "end_time": "2025-08-07T14:28:29.400726",
     "exception": false,
     "start_time": "2025-08-07T11:34:35.448961",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|          | 0/50 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 0.0931,  0.0851, -0.0664]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.0033, 1.0377, 1.1117]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3128, 0.3430, 0.3442]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[-0.0811,  0.1203,  0.0752]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[0.9231, 0.7953, 1.1208]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3256, 0.3383, 0.3362]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[0.0490, 0.3554, 0.0837]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[0.8786, 0.9573, 0.8493]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3318, 0.3305, 0.3376]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[-0.0352,  0.0141,  0.0386]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.0273, 0.9415, 0.8989]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3295, 0.3327, 0.3379]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.837873458862305\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[0.1983, 0.1342, 0.1795]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.5034, 1.2081, 1.3857]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3274, 0.3372, 0.3354]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 0.0125, -0.0178,  0.0148]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.0782, 0.9566, 1.2138]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3234, 0.3391, 0.3375]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[0.1670, 0.0349, 0.1298]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.2702, 1.1114, 1.4074]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3336, 0.3323, 0.3341]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 0.1380,  0.1233, -0.0260]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.7657, 1.1065, 1.6422]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3287, 0.3380, 0.3333]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 0.0959, -0.1227,  0.1653]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[0.9962, 0.8751, 1.2076]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3347, 0.3429, 0.3225]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[-0.0660, -0.0418, -0.0745]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.2494, 0.9846, 1.1551]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3094, 0.3442, 0.3464]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[0.0495, 0.1011, 0.1139]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.1026, 0.9473, 1.2266]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3682, 0.3089, 0.3229]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[-0.0061, -0.0664, -0.5011]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[2.6385, 1.0501, 1.4645]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3584, 0.3193, 0.3224]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[-0.0736, -0.0550,  0.0186]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[1.3161, 0.8597, 1.3876]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.3470, 0.3243, 0.3287]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.716934204101562\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[1.3953, 0.0027, 1.3288]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[3.8400, 1.0634, 3.4025]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.4519, 0.2730, 0.2750]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 1.2429, -0.2461,  1.3721]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[3.1198, 0.9316, 2.9064]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.4488, 0.2754, 0.2758]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([152.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 1.9142, -0.3947,  1.8823]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[5.0571, 0.8106, 4.0761]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.4409, 0.2824, 0.2767]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.942384719848633\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 2.9621, -0.4346,  3.3263]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[10.7272,  0.8495,  9.0768]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.5204, 0.2498, 0.2298]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.822431564331055\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[ 1.0551, -0.3595,  1.2442]], device='cuda:0',\n",
      "       grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[3.0831, 1.1392, 2.9273]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.4222, 0.2984, 0.2794]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.583175659179688\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[0.6714, 0.0308, 0.3458]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[2.6455, 1.6541, 1.4721]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.4423, 0.2738, 0.2838]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.382502555847168\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[2.0408, 0.0160, 1.7957]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[11.1632,  1.7790,  5.7815]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.5941, 0.2039, 0.2020]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 15.494274139404297\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[6.4725, 0.1688, 4.9946]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[927.7548,   1.9205, 144.0375]], device='cuda:0',\n",
      "       grad_fn=<AddBackward0>)\n",
      "pi: tensor([[0.8780, 0.0523, 0.0697]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: 14.998601913452148\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([139.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([163.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  2%|▏         | 1/50 [03:38<2:58:09, 218.16s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 01 | Train Loss: nan | Valid Loss: nan | LR: 0.010000\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([179.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([173.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([214.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  4%|▍         | 2/50 [06:57<2:45:31, 206.91s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 02 | Train Loss: nan | Valid Loss: nan | LR: 0.010000\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([130.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([91.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([124.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([184.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  6%|▌         | 3/50 [10:15<2:38:52, 202.81s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 03 | Train Loss: nan | Valid Loss: nan | LR: 0.005000\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([158.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([87.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  8%|▊         | 4/50 [13:34<2:34:21, 201.33s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 04 | Train Loss: nan | Valid Loss: nan | LR: 0.005000\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([125.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([65.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([109.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([158.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([128.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 10%|█         | 5/50 [16:51<2:30:01, 200.04s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 05 | Train Loss: nan | Valid Loss: nan | LR: 0.005000\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 12%|█▏        | 6/50 [20:09<2:26:00, 199.10s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 06 | Train Loss: nan | Valid Loss: nan | LR: 0.002500\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([91.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([170.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([46.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 14%|█▍        | 7/50 [23:26<2:22:20, 198.61s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 07 | Train Loss: nan | Valid Loss: nan | LR: 0.002500\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([158.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([34.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([103.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 16%|█▌        | 8/50 [26:45<2:18:56, 198.49s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 08 | Train Loss: nan | Valid Loss: nan | LR: 0.002500\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([87.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([125.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([189.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 18%|█▊        | 9/50 [30:05<2:16:03, 199.10s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 09 | Train Loss: nan | Valid Loss: nan | LR: 0.001250\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([67.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([13.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([9.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 20%|██        | 10/50 [33:23<2:12:27, 198.69s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 10 | Train Loss: nan | Valid Loss: nan | LR: 0.001250\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([118.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([9.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([214.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 22%|██▏       | 11/50 [36:41<2:08:58, 198.43s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 11 | Train Loss: nan | Valid Loss: nan | LR: 0.001250\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([163.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([176.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 24%|██▍       | 12/50 [39:59<2:05:39, 198.42s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 12 | Train Loss: nan | Valid Loss: nan | LR: 0.000625\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([129.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([107.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([116.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([27.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([62.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([91.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([183.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 26%|██▌       | 13/50 [43:17<2:02:16, 198.29s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 13 | Train Loss: nan | Valid Loss: nan | LR: 0.000625\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([103.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([16.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([206.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([163.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([67.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 28%|██▊       | 14/50 [46:36<1:59:06, 198.52s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 14 | Train Loss: nan | Valid Loss: nan | LR: 0.000625\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([136.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([101.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 30%|███       | 15/50 [50:08<1:58:14, 202.69s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 15 | Train Loss: nan | Valid Loss: nan | LR: 0.000313\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([222.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([140.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([86.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 32%|███▏      | 16/50 [53:42<1:56:42, 205.95s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 16 | Train Loss: nan | Valid Loss: nan | LR: 0.000313\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([200.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([222.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([56.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([183.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([27.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 34%|███▍      | 17/50 [57:17<1:54:47, 208.72s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 17 | Train Loss: nan | Valid Loss: nan | LR: 0.000313\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([139.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([116.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([169.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([1.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([80.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([134.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 36%|███▌      | 18/50 [1:00:54<1:52:35, 211.11s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 18 | Train Loss: nan | Valid Loss: nan | LR: 0.000156\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([64.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([14.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([154.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([27.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([166.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([107.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([139.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 38%|███▊      | 19/50 [1:04:23<1:48:49, 210.62s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 19 | Train Loss: nan | Valid Loss: nan | LR: 0.000156\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([128.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([6.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([206.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 40%|████      | 20/50 [1:07:48<1:44:24, 208.80s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 20 | Train Loss: nan | Valid Loss: nan | LR: 0.000156\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([146.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([64.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([86.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([173.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([64.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 42%|████▏     | 21/50 [1:11:09<1:39:50, 206.58s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 21 | Train Loss: nan | Valid Loss: nan | LR: 0.000078\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([222.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([169.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([146.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([200.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([130.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 44%|████▍     | 22/50 [1:14:31<1:35:41, 205.04s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 22 | Train Loss: nan | Valid Loss: nan | LR: 0.000078\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([214.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([140.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 46%|████▌     | 23/50 [1:17:49<1:31:21, 203.03s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 23 | Train Loss: nan | Valid Loss: nan | LR: 0.000078\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([184.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([183.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([136.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 48%|████▊     | 24/50 [1:21:07<1:27:21, 201.60s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 24 | Train Loss: nan | Valid Loss: nan | LR: 0.000039\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([74.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 50%|█████     | 25/50 [1:24:26<1:23:39, 200.79s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 25 | Train Loss: nan | Valid Loss: nan | LR: 0.000039\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([189.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([64.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([170.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([86.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([166.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 52%|█████▏    | 26/50 [1:27:45<1:20:02, 200.09s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 26 | Train Loss: nan | Valid Loss: nan | LR: 0.000039\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([133.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([164.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 54%|█████▍    | 27/50 [1:31:16<1:17:59, 203.44s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 27 | Train Loss: nan | Valid Loss: nan | LR: 0.000020\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([46.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([67.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([176.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 56%|█████▌    | 28/50 [1:34:51<1:15:54, 207.01s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 28 | Train Loss: nan | Valid Loss: nan | LR: 0.000020\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([152.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([149.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 58%|█████▊    | 29/50 [1:38:22<1:12:53, 208.24s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 29 | Train Loss: nan | Valid Loss: nan | LR: 0.000020\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([164.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([9.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 60%|██████    | 30/50 [1:41:56<1:09:59, 209.96s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 30 | Train Loss: nan | Valid Loss: nan | LR: 0.000010\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([37.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([170.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([166.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([104.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([104.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 62%|██████▏   | 31/50 [1:45:32<1:06:59, 211.57s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 31 | Train Loss: nan | Valid Loss: nan | LR: 0.000010\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([116.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([123.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 64%|██████▍   | 32/50 [1:49:07<1:03:51, 212.84s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 32 | Train Loss: nan | Valid Loss: nan | LR: 0.000010\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([136.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([70.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([13.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([133.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([123.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 66%|██████▌   | 33/50 [1:52:44<1:00:37, 213.95s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 33 | Train Loss: nan | Valid Loss: nan | LR: 0.000005\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([141.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([111.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 68%|██████▊   | 34/50 [1:56:22<57:20, 215.05s/it]  "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 34 | Train Loss: nan | Valid Loss: nan | LR: 0.000005\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([124.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([188.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([179.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 70%|███████   | 35/50 [1:59:57<53:45, 215.02s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 35 | Train Loss: nan | Valid Loss: nan | LR: 0.000005\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([16.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([166.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([171.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 72%|███████▏  | 36/50 [2:03:33<50:18, 215.59s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 36 | Train Loss: nan | Valid Loss: nan | LR: 0.000002\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([46.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([16.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([134.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([70.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([176.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([164.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([206.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 74%|███████▍  | 37/50 [2:07:11<46:50, 216.19s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 37 | Train Loss: nan | Valid Loss: nan | LR: 0.000002\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([13.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 76%|███████▌  | 38/50 [2:10:48<43:18, 216.53s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 38 | Train Loss: nan | Valid Loss: nan | LR: 0.000002\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([176.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([189.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([17.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([134.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([109.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 78%|███████▊  | 39/50 [2:14:22<39:31, 215.56s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 39 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([183.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 80%|████████  | 40/50 [2:17:53<35:43, 214.38s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 40 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([189.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([169.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([9.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([123.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 82%|████████▏ | 41/50 [2:21:27<32:08, 214.27s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 41 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([12.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([58.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([184.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 84%|████████▍ | 42/50 [2:25:05<28:41, 215.16s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 42 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([4.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([137.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([107.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 86%|████████▌ | 43/50 [2:28:41<25:08, 215.48s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 43 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([70.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([40.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([164.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([33.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 88%|████████▊ | 44/50 [2:32:19<21:38, 216.35s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 44 | Train Loss: nan | Valid Loss: nan | LR: 0.000001\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([6.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([104.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([166.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([140.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([64.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([200.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 90%|█████████ | 45/50 [2:35:54<17:59, 215.94s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 45 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "Ground truth y: tensor([112.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([32.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([141.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([55.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([87.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([210.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([76.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 92%|█████████▏| 46/50 [2:39:28<14:21, 215.37s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 46 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([9.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([228.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([184.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([6.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([87.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([28.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([152.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([173.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 94%|█████████▍| 47/50 [2:42:57<10:40, 213.49s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 47 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([51.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([152.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([45.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([15.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([78.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([75.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([67.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([93.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 96%|█████████▌| 48/50 [2:46:27<07:04, 212.23s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 48 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([140.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([18.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([100.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([62.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([27.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([48.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([189.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([72.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([102.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 98%|█████████▊| 49/50 [2:50:09<03:35, 215.31s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 49 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([198.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([90.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([66.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([81.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([216.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([136.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([192.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([133.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([30.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([115.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([171.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([42.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([184.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([153.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([186.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([135.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([84.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([128.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([113.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([108.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([36.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([104.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([144.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([165.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([50.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([21.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([114.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([147.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([180.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([138.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([96.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([24.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([57.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([69.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([60.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([159.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([204.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([132.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([39.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([174.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([81.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([120.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([106.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([94.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([82.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([162.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([150.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([88.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([126.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([168.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([156.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n",
      "Ground truth y: tensor([54.], device='cuda:0')\n",
      "Predicted mu: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "Predicted sigma2: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<AddBackward0>)\n",
      "pi: tensor([[nan, nan, nan]], device='cuda:0', grad_fn=<SliceBackward0>)\n",
      "loss: nan\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 50/50 [2:53:53<00:00, 208.67s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 50 | Train Loss: nan | Valid Loss: nan | LR: 0.000000\n",
      "[INFO] Saving model to: /kaggle/working/custom_model_v1.pth\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "results, model = train(\n",
    "    model=model,\n",
    "    train_dataloader=train_loader,\n",
    "    valid_dataloader=val_loader,\n",
    "    loss_fn=mdn_loss,  # 👈 Gọi loss function ở đây\n",
    "    optimizer=optimizer,\n",
    "    epochs=epochs,\n",
    "    model_name=\"custom_model_v1.pth\",\n",
    "    device=device,\n",
    "    # lambda_div=0.0,  # hoặc giá trị bạn cần\n",
    "    scheduler=scheduler  # nếu dùng ReduceLROnPlateau\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4708b59d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T14:28:30.474372Z",
     "iopub.status.busy": "2025-08-07T14:28:30.474057Z",
     "iopub.status.idle": "2025-08-07T14:28:30.880110Z",
     "shell.execute_reply": "2025-08-07T14:28:30.879247Z"
    },
    "papermill": {
     "duration": 0.907839,
     "end_time": "2025-08-07T14:28:30.881518",
     "exception": false,
     "start_time": "2025-08-07T14:28:29.973679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "# Biểu đồ Train Loss và Valid Loss\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(results[\"train_loss\"], label='Train Loss')\n",
    "plt.plot(results[\"valid_loss\"], label='Valid Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.title('Train vs Valid Loss')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()\n",
    "\n",
    "# Biểu đồ Learning Rate\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(results[\"learning_rates\"], label='Learning Rate', color='green')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('LR')\n",
    "plt.title('Learning Rate over Epochs')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2ecfde9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T14:28:31.970911Z",
     "iopub.status.busy": "2025-08-07T14:28:31.970493Z",
     "iopub.status.idle": "2025-08-07T14:28:42.651696Z",
     "shell.execute_reply": "2025-08-07T14:28:42.650629Z"
    },
    "papermill": {
     "duration": 11.270336,
     "end_time": "2025-08-07T14:28:42.653055",
     "exception": false,
     "start_time": "2025-08-07T14:28:31.382719",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor([[nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan]], device='cuda:0')\n",
      "---------------------\n",
      "tensor([[nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan]], device='cuda:0')\n",
      "---------------------\n",
      "tensor([[nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan]], device='cuda:0')\n",
      "---------------------\n",
      "tensor([[nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan],\n",
      "        [nan, nan, nan]], device='cuda:0')\n",
      "---------------------\n",
      "Inference completed. Predictions saved to: inference_results1.csv\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Định nghĩa transform nếu cần\n",
    "transform = v2.Compose([\n",
    "    v2.ToImage(),\n",
    "    v2.Resize((232, 232), interpolation=InterpolationMode.BILINEAR),\n",
    "    v2.CenterCrop(224),\n",
    "    v2.ToDtype(torch.float32, scale=True),\n",
    "    v2.Normalize(mean=[0.187437], std=[0.197918])  # Dùng cho ảnh (không liên quan đến label)\n",
    "])\n",
    "\n",
    "def inference(model_path, image_dirs, csv_path, output_path, num_components=3, use_male=True):\n",
    "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "    # Tạo dataset và dataloader\n",
    "    dataset = AgeGenderDataset(\n",
    "        image_dirs=image_dirs,\n",
    "        csv_path=csv_path,\n",
    "        use_age=True,\n",
    "        use_male=use_male,\n",
    "        transform=transform\n",
    "    )\n",
    "    dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=False)\n",
    "\n",
    "    # Tải model\n",
    "    model = RegNetWithAttentionAndSoftmax(num_components=num_components).to(device)\n",
    "    model.init_attention_blocks(device=device)   # ✅ GỌI TRƯỚC!\n",
    "    model.load_state_dict(torch.load(model_path, map_location=device))\n",
    "    model.eval()\n",
    "\n",
    "    predictions = []\n",
    "\n",
    "    with torch.inference_mode():\n",
    "        for imgs, _ in dataloader:\n",
    "            imgs = imgs.to(device)\n",
    "            pi, mu, log_sigma2, _ = model(imgs)\n",
    "            print(mu)\n",
    "            print('---------------------')\n",
    "            \n",
    "\n",
    "            # Dự đoán tuổi bằng kỳ vọng của GMM\n",
    "            predicted_age = (pi * mu).sum(dim=1)\n",
    "            predictions.extend(predicted_age.cpu().numpy())\n",
    "\n",
    "    # Đọc CSV chứa ID gốc\n",
    "    if csv_path.endswith(\".xlsx\"):\n",
    "        df = pd.read_excel(csv_path)\n",
    "    else:\n",
    "        df = pd.read_csv(csv_path)\n",
    "\n",
    "    # Đảm bảo có cột \"id\"\n",
    "    if 'id' not in df.columns:\n",
    "        if 'Image ID' in df.columns:\n",
    "            df.rename(columns={'Image ID': 'id'}, inplace=True)\n",
    "        elif 'Case ID' in df.columns:\n",
    "            df.rename(columns={'Case ID': 'id'}, inplace=True)\n",
    "\n",
    "    # Thêm cột dự đoán và lưu kết quả\n",
    "    df['predicted_boneage'] = predictions\n",
    "    df[['id', 'predicted_boneage']].to_csv(output_path, index=False)\n",
    "    print(f\"Inference completed. Predictions saved to: {output_path}\")\n",
    "\n",
    "# Ví dụ sử dụng\n",
    "if __name__ == \"__main__\":\n",
    "    inference(\n",
    "        model_path=\"custom_model_v1.pth\",\n",
    "        image_dirs=\"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Test Set Images\",\n",
    "        csv_path=\"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Bone age ground truth.xlsx\",\n",
    "        output_path=\"inference_results1.csv\",\n",
    "        num_components=3,\n",
    "        use_male=False\n",
    "    )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b43be580",
   "metadata": {
    "papermill": {
     "duration": 0.508418,
     "end_time": "2025-08-07T14:28:43.666478",
     "exception": false,
     "start_time": "2025-08-07T14:28:43.158060",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# visualize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d4d46970",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T14:28:44.767362Z",
     "iopub.status.busy": "2025-08-07T14:28:44.767082Z",
     "iopub.status.idle": "2025-08-07T14:28:44.946172Z",
     "shell.execute_reply": "2025-08-07T14:28:44.945500Z"
    },
    "papermill": {
     "duration": 0.756806,
     "end_time": "2025-08-07T14:28:44.947631",
     "exception": false,
     "start_time": "2025-08-07T14:28:44.190825",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torchvision.transforms.v2 as T\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import cv2\n",
    "from PIL import Image\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0eedd18f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-07T14:28:45.939275Z",
     "iopub.status.busy": "2025-08-07T14:28:45.938523Z",
     "iopub.status.idle": "2025-08-07T14:28:45.943940Z",
     "shell.execute_reply": "2025-08-07T14:28:45.943210Z"
    },
    "papermill": {
     "duration": 0.503192,
     "end_time": "2025-08-07T14:28:45.945182",
     "exception": false,
     "start_time": "2025-08-07T14:28:45.441990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class '__main__.RegNetWithAttentionAndSoftmax'>\n"
     ]
    }
   ],
   "source": [
    "print(type(model))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a05b955",
   "metadata": {
    "papermill": {
     "duration": 0.58406,
     "end_time": "2025-08-07T14:28:47.014839",
     "exception": false,
     "start_time": "2025-08-07T14:28:46.430779",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 10832,
     "sourceId": 15122,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7928729,
     "sourceId": 12556697,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31090,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10472.205248,
   "end_time": "2025-08-07T14:28:50.209316",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-07T11:34:18.004068",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
