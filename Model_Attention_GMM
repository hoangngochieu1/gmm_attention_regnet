{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/hongngchiu/model-attention-gmm?scriptVersionId=258856088\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"1d586d23","metadata":{"papermill":{"duration":0.007806,"end_time":"2025-08-29T09:43:55.160948","exception":false,"start_time":"2025-08-29T09:43:55.153142","status":"completed"},"tags":[]},"source":["# 1. Import"]},{"cell_type":"code","execution_count":1,"id":"d1c2fdfd","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-08-29T09:43:55.174841Z","iopub.status.busy":"2025-08-29T09:43:55.174553Z","iopub.status.idle":"2025-08-29T09:44:06.082502Z","shell.execute_reply":"2025-08-29T09:44:06.081578Z"},"papermill":{"duration":10.916432,"end_time":"2025-08-29T09:44:06.083905","exception":false,"start_time":"2025-08-29T09:43:55.167473","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["0.21.0+cu124\n"]}],"source":["import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torchvision.models as models\n","import random\n","from torchvision.models.efficientnet import EfficientNet_V2_S_Weights\n","import os\n","import pandas as pd\n","\n","from torch.utils.data import Dataset\n","import torchvision\n","\n","\n","\n","import torchvision.transforms.v2 as v2\n","from torchvision.io import read_image\n","from PIL import Image\n","\n","from torch.utils.data import DataLoader\n","# from torchvision import transforms\n","\n","from torchvision.transforms import InterpolationMode\n","\n","from typing import Dict, List\n","from tqdm import tqdm\n","import torch\n","print(torchvision.__version__)\n","\n","\n"]},{"cell_type":"markdown","id":"4bf7e7d8","metadata":{"papermill":{"duration":0.006768,"end_time":"2025-08-29T09:44:06.097886","exception":false,"start_time":"2025-08-29T09:44:06.091118","status":"completed"},"tags":[]},"source":["# 2. Configs"]},{"cell_type":"code","execution_count":2,"id":"989111fc","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.113312Z","iopub.status.busy":"2025-08-29T09:44:06.112927Z","iopub.status.idle":"2025-08-29T09:44:06.178068Z","shell.execute_reply":"2025-08-29T09:44:06.177255Z"},"papermill":{"duration":0.074036,"end_time":"2025-08-29T09:44:06.179271","exception":false,"start_time":"2025-08-29T09:44:06.105235","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.1920928955078125e-07\n"]}],"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","eps = torch.finfo(torch.float32).eps\n","lr = 0.001\n","factor=0.5\n","patience=2\n","num_components = 2\n","epochs = 50\n","batch_size = 64\n","print(eps)\n","mean = 0.187437\n","std = 0.197918\n","temperature = 3.0\n","lambda_div = 0.5\n","label_mean = 127.3040771484375\n","label_std =  41.23422622680664\n","# Bone age mean = 127.30, std = 41.23\n","\n"]},{"cell_type":"markdown","id":"baae24b4","metadata":{"papermill":{"duration":0.006188,"end_time":"2025-08-29T09:44:06.192173","exception":false,"start_time":"2025-08-29T09:44:06.185985","status":"completed"},"tags":[]},"source":["# 3 Hàm liên quan đến model"]},{"cell_type":"markdown","id":"6b30cf27","metadata":{"papermill":{"duration":0.006192,"end_time":"2025-08-29T09:44:06.204683","exception":false,"start_time":"2025-08-29T09:44:06.198491","status":"completed"},"tags":[]},"source":["## 3.1. Hàm về softmax"]},{"cell_type":"code","execution_count":3,"id":"91fe1ec2","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.218169Z","iopub.status.busy":"2025-08-29T09:44:06.217949Z","iopub.status.idle":"2025-08-29T09:44:06.221235Z","shell.execute_reply":"2025-08-29T09:44:06.220552Z"},"papermill":{"duration":0.01134,"end_time":"2025-08-29T09:44:06.222375","exception":false,"start_time":"2025-08-29T09:44:06.211035","status":"completed"},"tags":[]},"outputs":[],"source":["# # ✅ Đặt lớp này trước class mô hình chính\n","# class SoftmaxWithTemperature(nn.Module):\n","#     def __init__(self, temperature):\n","#         super().__init__()\n","#         self.temperature = temperature\n","\n","#     def forward(self, x):\n","#         return torch.softmax(x / self.temperature, dim=1)"]},{"cell_type":"markdown","id":"e2c96cf5","metadata":{"papermill":{"duration":0.006218,"end_time":"2025-08-29T09:44:06.234923","exception":false,"start_time":"2025-08-29T09:44:06.228705","status":"completed"},"tags":[]},"source":["## 3.2. Hàm về Cổng Attention(sigmoid)"]},{"cell_type":"code","execution_count":4,"id":"d1dcb6a0","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.248548Z","iopub.status.busy":"2025-08-29T09:44:06.248162Z","iopub.status.idle":"2025-08-29T09:44:06.257729Z","shell.execute_reply":"2025-08-29T09:44:06.257035Z"},"papermill":{"duration":0.017626,"end_time":"2025-08-29T09:44:06.258789","exception":false,"start_time":"2025-08-29T09:44:06.241163","status":"completed"},"tags":[]},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","import torch.nn.init as init\n","import math\n","\n","class SelfAttentionGate(nn.Module):\n","    def __init__(self, in_channels, generator=None):\n","        super(SelfAttentionGate, self).__init__()\n","        if generator != None:\n","            print('có generator')\n","            print(f\"Seed: {generator.initial_seed()}\")  \n","            self.generator = generator\n","        else:\n","            print('không có generator ')\n","       \n","        inter_channels = max(1, in_channels // 2)\n","\n","        # Các layer\n","        self.theta = nn.Conv2d(in_channels, inter_channels, kernel_size=1, stride=1, padding=0)\n","        self.psi = nn.Conv2d(in_channels, 1, kernel_size=1, stride=1, padding=0)\n","        self.W = nn.Conv2d(in_channels, in_channels, kernel_size=1, stride=1, padding=0)\n","\n","        self.sigmoid = nn.Sigmoid()\n","        self.relu = nn.ReLU(inplace=True)\n","\n","    def init_weights(self):\n","        # Khởi tạo theta\n","    \n","        init.kaiming_uniform_(self.theta.weight, a=math.sqrt(5), generator=self.generator)\n","        if self.theta.bias is not None:\n","            fan_in, _ = init._calculate_fan_in_and_fan_out(self.theta.weight)\n","            bound = 1 / math.sqrt(fan_in)\n","            init.uniform_(self.theta.bias, -bound, bound, generator=self.generator)\n","\n","        # Khởi tạo psi\n","        init.kaiming_uniform_(self.psi.weight, a=math.sqrt(5), generator=self.generator)\n","        if self.psi.bias is not None:\n","            fan_in, _ = init._calculate_fan_in_and_fan_out(self.psi.weight)\n","            bound = 1 / math.sqrt(fan_in)\n","            init.uniform_(self.psi.bias, -bound, bound, generator=self.generator)\n","\n","        # Khởi tạo W\n","        init.kaiming_uniform_(self.W.weight, a=math.sqrt(5), generator=self.generator)\n","        if self.W.bias is not None:\n","            fan_in, _ = init._calculate_fan_in_and_fan_out(self.W.weight)\n","            bound = 1 / math.sqrt(fan_in)\n","            init.uniform_(self.W.bias, -bound, bound, generator=self.generator)\n","\n","    def forward(self, x):\n","        psi_f = self.sigmoid(self.psi(x))       # [B, 1, H, W]\n","        attention = psi_f.expand_as(x)          # [B, C, H, W]\n","        y = x * attention                       # Apply attention\n","        W_y = y                                 # hoặc self.W(y) nếu muốn học thêm\n","        return W_y, attention\n"]},{"cell_type":"markdown","id":"ddee20cc","metadata":{"papermill":{"duration":0.00626,"end_time":"2025-08-29T09:44:06.271586","exception":false,"start_time":"2025-08-29T09:44:06.265326","status":"completed"},"tags":[]},"source":["## 3.3. Model chính với attention và softmax"]},{"cell_type":"code","execution_count":5,"id":"88453899","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.285808Z","iopub.status.busy":"2025-08-29T09:44:06.285546Z","iopub.status.idle":"2025-08-29T09:44:06.296184Z","shell.execute_reply":"2025-08-29T09:44:06.295704Z"},"papermill":{"duration":0.019132,"end_time":"2025-08-29T09:44:06.297204","exception":false,"start_time":"2025-08-29T09:44:06.278072","status":"completed"},"tags":[]},"outputs":[],"source":["class RegNetWithAttentionAndSoftmax(nn.Module):\n","    def __init__(self, num_components):\n","        super(RegNetWithAttentionAndSoftmax, self).__init__()\n","        self.num_components = num_components\n","\n","        # Backbone\n","        # base_model = models.regnet_y_400mf(pretrained=True)\n","        # self.backbone = nn.Sequential(*list(base_model.children())[:-2])  # Remove classifier head\n","        # backbone_out_channels = 440  # RegNet_Y_400MF output channels\n","      \n","      # Load pretrained EfficientNetV2-S\n","        weights = EfficientNet_V2_S_Weights.IMAGENET1K_V1\n","        base_model = models.efficientnet_v2_s(weights=weights)\n","\n","        # Replace first Conv2d to accept 1-channel input\n","        old_conv = base_model.features[0][0]  # First conv layer (Conv2d)\n","        new_conv = nn.Conv2d(\n","            in_channels=1,\n","            out_channels=old_conv.out_channels,\n","            kernel_size=old_conv.kernel_size,\n","            stride=old_conv.stride,\n","            padding=old_conv.padding,\n","            bias=old_conv.bias is not None\n","        )\n","\n","        # Initialize weights by averaging RGB weights\n","        with torch.no_grad():\n","            new_conv.weight[:] = old_conv.weight.mean(dim=1, keepdim=True)\n","            if old_conv.bias is not None:\n","                new_conv.bias[:] = old_conv.bias\n","\n","        # Replace conv in base model\n","        base_model.features[0][0] = new_conv\n","\n","        # Remove classification head, gap\n","        self.backbone = nn.Sequential(*list(base_model.children())[:-2])  # Output shape: (B, 1280, H/32, W/32)\n","     \n","        # Automatically infer output channels\n","        with torch.no_grad():\n","            dummy = torch.randn(1, 1, 384, 384)\n","            out = self.backbone(dummy)\n","            self.backbone_out_channels = out.shape[1]\n","    \n","\n","        self.attention_blocks = None  # Khởi tạo sau khi .to()\n","        \n","        # sau attention Regression branches: mỗi nhánh sinh [mu, log_sigma2_raw]\n","        self.reg_branches = nn.ModuleList()\n","        for i in range(num_components):\n","            branch = nn.Sequential(\n","                nn.Linear(self.backbone_out_channels, 2),     \n","            )\n","            self.reg_branches.append(branch)\n","\n","        # Mixing coefficient (pi): từ đặc trưng trung bình\n","        self.softmax_branch = nn.Sequential(\n","            nn.Linear(self.backbone_out_channels, num_components),\n","            nn.Softmax(dim=1)  \n","        )\n","        # self.softmax_branch = nn.Sequential(\n","        #     nn.Linear(self.backbone_out_channels, num_components),\n","        #     SoftmaxWithTemperature(temperature=temperature)  # ✅ sử dụng ở đây\n","        # )\n","\n","        self.gap = nn.AdaptiveAvgPool2d(1)  # Global Average Pooling\n","\n","    def init_attention_blocks(self, device):\n","        self.attention_blocks = nn.ModuleList()\n","        for i in range(self.num_components):  \n","            gen = torch.Generator(device=device)\n","            gen.manual_seed(torch.seed())\n","            att = SelfAttentionGate(self.backbone_out_channels,generator = gen).to(device)\n","            att.init_weights() \n","            self.attention_blocks.append(att)\n","        \n","    def forward(self, x):\n","        feat_map = self.backbone(x)  # [B, C, H, W]\n","       \n","        # Attention + pooling\n","        attention_feats = []\n","        attention_maps = []\n","        for att in self.attention_blocks:\n","            W_y, attention = att(feat_map)  # attention là mask sigmoid, W_y = x * attention\n","            attention_feats.append(W_y)\n","            attention_maps.append(attention)\n","     \n","        # Attention + pooling\n","        pooled_feats = [self.gap(f).squeeze(-1).squeeze(-1) for f in attention_feats]  # [B, C] * K\n","        # print('pooled_feats shape:', pooled_feats[0].shape)\n","\n","        # Regression outputs\n","        reg_outputs = [reg(f) for reg, f in zip(self.reg_branches, pooled_feats)]  # [B, 2] * K\n","        # print('reg_outputs shape:', reg_outputs[0].shape)\n","        reg_outputs = torch.stack(reg_outputs, dim=1)  # [B, K, 2]\n","        # print('reg_outputs shape:', reg_outputs[0].shape)\n","      \n","    \n","        mu = reg_outputs[:, :, 0]                     # [B, K]    \n","        log_sigma2 = (reg_outputs[:, :, 1])\n","        gap_feat = self.gap(feat_map).view(x.size(0), -1)  # [B, C]\n","        pi = self.softmax_branch(gap_feat)          # [B, num_components]\n","        # Trả thêm attention maps: [B, K, C, H, W]\n","        attention_maps = torch.stack(attention_maps, dim=1)  # [B, K, C, H, W]\n","       \n","        return pi, mu, log_sigma2, attention_maps\n"]},{"cell_type":"markdown","id":"214a4580","metadata":{"papermill":{"duration":0.006176,"end_time":"2025-08-29T09:44:06.309915","exception":false,"start_time":"2025-08-29T09:44:06.303739","status":"completed"},"tags":[]},"source":["# 4. Các hàm loss"]},{"cell_type":"markdown","id":"5aa3e190","metadata":{"papermill":{"duration":0.006075,"end_time":"2025-08-29T09:44:06.322322","exception":false,"start_time":"2025-08-29T09:44:06.316247","status":"completed"},"tags":[]},"source":["## 4.1. Hàm loss áp dụng Gaussion mixture model"]},{"cell_type":"code","execution_count":6,"id":"8eaa2d64","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.335938Z","iopub.status.busy":"2025-08-29T09:44:06.335729Z","iopub.status.idle":"2025-08-29T09:44:06.340111Z","shell.execute_reply":"2025-08-29T09:44:06.339597Z"},"papermill":{"duration":0.012547,"end_time":"2025-08-29T09:44:06.341131","exception":false,"start_time":"2025-08-29T09:44:06.328584","status":"completed"},"tags":[]},"outputs":[],"source":["def mdn_loss(y, pi, mu, log_sigma2):\n","    \"\"\"\n","    y: [B] - ground truth\n","    pi: [B, K]\n","    mu: [B, K]\n","    log_sigma2: [B, K]\n","    \n","    Return: scalar loss (mean NLL)\n","    \"\"\"\n","    sigma2 = torch.exp(log_sigma2) + eps\n","    y = y.unsqueeze(1)  # [B, 1]\n","    sqrt_2pi = torch.sqrt(torch.tensor(2.0 * torch.pi, device=y.device, dtype=y.dtype))\n","\n","    prob = (1.0 / (torch.sqrt(sigma2) * sqrt_2pi)) * \\\n","       torch.exp(-0.5 * ((y - mu)**2) / sigma2 )\n","    \n","    weighted_prob = pi * prob  # [B, K]\n","    total_prob = torch.sum(weighted_prob, dim=1)  # [B]\n","\n","    nll = -torch.log(total_prob + eps)\n","    return nll.mean()\n"]},{"cell_type":"code","execution_count":7,"id":"33293bdc","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.355097Z","iopub.status.busy":"2025-08-29T09:44:06.35488Z","iopub.status.idle":"2025-08-29T09:44:06.359663Z","shell.execute_reply":"2025-08-29T09:44:06.359156Z"},"papermill":{"duration":0.012897,"end_time":"2025-08-29T09:44:06.360733","exception":false,"start_time":"2025-08-29T09:44:06.347836","status":"completed"},"tags":[]},"outputs":[],"source":["def mdn_loss1(y, pi, mu, log_sigma2, entropy_weight=0.01):\n","    sigma2 = torch.exp(log_sigma2) + eps\n","    y = y.unsqueeze(1)\n","    sqrt_2pi = torch.sqrt(torch.tensor(2.0 * torch.pi, device=y.device, dtype=y.dtype))\n","\n","    prob = (1.0 / (torch.sqrt(sigma2) * sqrt_2pi)) * \\\n","           torch.exp(-0.5 * ((y - mu)**2) / sigma2)\n","    prob = torch.clamp(prob, min=1e-12)  # để tránh log(0)\n","\n","    total_prob = torch.sum(pi * prob, dim=1)\n","    nll = -torch.log(total_prob + eps)\n","\n","    # Entropy of pi (muốn entropy cao → pi phân bố đều hơn)\n","    pi_entropy = -torch.sum(pi * torch.log(pi + 1e-8), dim=1).mean()\n","\n","    return nll.mean() - entropy_weight * pi_entropy\n"]},{"cell_type":"markdown","id":"98029897","metadata":{"papermill":{"duration":0.052523,"end_time":"2025-08-29T09:44:06.419694","exception":false,"start_time":"2025-08-29T09:44:06.367171","status":"completed"},"tags":[]},"source":["## 4.2. Hàm loss giúp các attention map không chồng lên nhau"]},{"cell_type":"code","execution_count":8,"id":"0d46bb04","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.434099Z","iopub.status.busy":"2025-08-29T09:44:06.433839Z","iopub.status.idle":"2025-08-29T09:44:06.438883Z","shell.execute_reply":"2025-08-29T09:44:06.438319Z"},"papermill":{"duration":0.013422,"end_time":"2025-08-29T09:44:06.439964","exception":false,"start_time":"2025-08-29T09:44:06.426542","status":"completed"},"tags":[]},"outputs":[],"source":["def diversity_loss(attention_maps):\n","    \"\"\"\n","    attention_maps: [B, K, C, H, W]\n","    Trả về độ tương tự (penalty) không âm, càng nhỏ càng đa dạng.\n","    \"\"\"\n","    B, K, C, H, W = attention_maps.shape\n","\n","    # [B, K, H*W]\n","    flat = attention_maps.mean(dim=2).view(B, K, -1)\n","    flat = F.normalize(flat, dim=2, eps=eps)\n","\n","    # Gram: [B, K, K]\n","    G = torch.bmm(flat, flat.transpose(1, 2))\n","\n","    # Loại bỏ đường chéo\n","    I = torch.eye(K, device=G.device, dtype=G.dtype).unsqueeze(0)\n","    off = G - I\n","\n","    # Lấy chỉ phần tam giác trên để tránh đếm đôi\n","    idx = torch.triu_indices(K, K, offset=1)\n","    pair_sims = off[:, idx[0], idx[1]]  # [B, K*(K-1)/2]\n","\n","    # Phạt độ tương tự theo bình phương (≥0), rồi trung bình theo số cặp\n","    loss = (pair_sims ** 2).mean()\n","    return loss\n"]},{"cell_type":"code","execution_count":9,"id":"b37a8f43","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.453819Z","iopub.status.busy":"2025-08-29T09:44:06.453557Z","iopub.status.idle":"2025-08-29T09:44:06.458036Z","shell.execute_reply":"2025-08-29T09:44:06.457534Z"},"papermill":{"duration":0.012637,"end_time":"2025-08-29T09:44:06.459088","exception":false,"start_time":"2025-08-29T09:44:06.446451","status":"completed"},"tags":[]},"outputs":[],"source":["import torch\n","\n","def diversity_loss1(attention_maps):\n","    \"\"\"\n","    attention_maps: [B, K, C, H, W]\n","    Loss = trung bình overlap (element-wise product) giữa từng cặp attention maps\n","    \"\"\"\n","    B, K, C, H, W = attention_maps.shape\n","\n","    # [B, K, HW]\n","    flat = attention_maps.view(B, K, -1)\n","\n","    # Tích trong không gian: [B, K, K]\n","    G = torch.bmm(flat, flat.transpose(1, 2))  # dot product = sum of element-wise\n","\n","    # Loại bỏ self-dot\n","    I = torch.eye(K, device=G.device, dtype=G.dtype).unsqueeze(0)\n","    off = G * (1 - I)\n","\n","    # Trung bình trên số cặp\n","    loss = off.sum(dim=(1, 2)) / (K * (K - 1))\n","    return loss.mean()\n"]},{"cell_type":"markdown","id":"704281ff","metadata":{"papermill":{"duration":0.006309,"end_time":"2025-08-29T09:44:06.471776","exception":false,"start_time":"2025-08-29T09:44:06.465467","status":"completed"},"tags":[]},"source":["## 4.3. Hàm loss tổng "]},{"cell_type":"code","execution_count":10,"id":"5c6fd610","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.485399Z","iopub.status.busy":"2025-08-29T09:44:06.485189Z","iopub.status.idle":"2025-08-29T09:44:06.488872Z","shell.execute_reply":"2025-08-29T09:44:06.488214Z"},"papermill":{"duration":0.011884,"end_time":"2025-08-29T09:44:06.490005","exception":false,"start_time":"2025-08-29T09:44:06.478121","status":"completed"},"tags":[]},"outputs":[],"source":["def total_loss(y, pi, mu, log_sigma2, attention_maps, lambda_div):\n","    \"\"\"\n","    Tổng loss = mdn_loss + lambda * diversity_loss\n","    \"\"\"\n","    main = mdn_loss(y, pi, mu, log_sigma2)\n","    div = diversity_loss(attention_maps)\n","    return main + lambda_div * div\n"]},{"cell_type":"code","execution_count":11,"id":"608772a4","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.503837Z","iopub.status.busy":"2025-08-29T09:44:06.503653Z","iopub.status.idle":"2025-08-29T09:44:06.507338Z","shell.execute_reply":"2025-08-29T09:44:06.506689Z"},"papermill":{"duration":0.011751,"end_time":"2025-08-29T09:44:06.508437","exception":false,"start_time":"2025-08-29T09:44:06.496686","status":"completed"},"tags":[]},"outputs":[],"source":["def total_loss1(y, pi, mu, log_sigma2, attention_maps, lambda_div):\n","    \"\"\"\n","    Tổng loss = mdn_loss + lambda * diversity_loss\n","    \"\"\"\n","    main = mdn_loss1(y, pi, mu, log_sigma2)\n","    div = diversity_loss1(attention_maps)\n","    return main + lambda_div * div"]},{"cell_type":"markdown","id":"cd28f489","metadata":{"papermill":{"duration":0.006288,"end_time":"2025-08-29T09:44:06.521262","exception":false,"start_time":"2025-08-29T09:44:06.514974","status":"completed"},"tags":[]},"source":["# 5. Dùng dummy input để test"]},{"cell_type":"code","execution_count":12,"id":"b79579a6","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:06.5353Z","iopub.status.busy":"2025-08-29T09:44:06.534863Z","iopub.status.idle":"2025-08-29T09:44:09.28434Z","shell.execute_reply":"2025-08-29T09:44:09.283444Z"},"papermill":{"duration":2.75789,"end_time":"2025-08-29T09:44:09.285616","exception":false,"start_time":"2025-08-29T09:44:06.527726","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["Downloading: \"https://download.pytorch.org/models/efficientnet_v2_s-dd5fe13b.pth\" to /root/.cache/torch/hub/checkpoints/efficientnet_v2_s-dd5fe13b.pth\n","100%|██████████| 82.7M/82.7M [00:00<00:00, 212MB/s]\n"]},{"name":"stdout","output_type":"stream","text":["có generator\n","Seed: 1682980503373802058\n","có generator\n","Seed: 7719168420834722085\n","có generator\n","Seed: 13969059997043941427\n","pi: tensor([[0.3416, 0.3135, 0.3450],\n","        [0.3585, 0.3077, 0.3338]], device='cuda:0', grad_fn=<SoftmaxBackward0>)\n","mu: tensor([[-0.0027,  0.0586,  0.0163],\n","        [-0.0386,  0.0456, -0.0819]], device='cuda:0',\n","       grad_fn=<SelectBackward0>)\n","sigma2: tensor([[0.9999, 1.0673, 0.9909],\n","        [1.0018, 1.0631, 0.9218]], device='cuda:0', grad_fn=<AddBackward0>)\n","attention_maps: torch.Size([2, 3, 1280, 12, 12])\n","Total loss mdn: 15.942384719848633\n","Total loss: 16.12113380432129\n"]}],"source":["# Dummy input\n","B, C, H, W = 2, 1, 384, 384\n","x = torch.randn(B, C, H, W)\n","y = torch.tensor([10.0, 12.0])  # tuổi ground truth\n","\n","# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","model = RegNetWithAttentionAndSoftmax(num_components=3).to(device)\n","model.init_attention_blocks(device=device)  # ✅ gọi thêm dòng này\n","\n","# Dummy input cũng cần lên device:\n","x = x.to(device)\n","y = y.to(device)\n","\n","# Forward\n","pi, mu, log_sigma2, attention_maps = model(x)\n","\n","\n","# Print shapes để kiểm tra\n","print(\"pi:\", pi)                  # [B, K]\n","print(\"mu:\", mu)                  # [B, K]\n","print(\"sigma2:\", torch.exp(log_sigma2) + eps)            # [B, K]\n","print(\"attention_maps:\", attention_maps.shape)  # [B, K, C, H', W']\n","\n","\n","# Compute loss\n","loss_mdn = mdn_loss(y, pi, mu, log_sigma2)\n","loss = total_loss(y, pi, mu, log_sigma2, attention_maps, lambda_div=0.2)\n","print(\"Total loss mdn:\", loss_mdn.item())\n","print(\"Total loss:\", loss.item())\n"]},{"cell_type":"markdown","id":"ca14812d","metadata":{"papermill":{"duration":0.007007,"end_time":"2025-08-29T09:44:09.300435","exception":false,"start_time":"2025-08-29T09:44:09.293428","status":"completed"},"tags":[]},"source":["# 6. Data "]},{"cell_type":"markdown","id":"db091866","metadata":{"papermill":{"duration":0.006825,"end_time":"2025-08-29T09:44:09.314186","exception":false,"start_time":"2025-08-29T09:44:09.307361","status":"completed"},"tags":[]},"source":["## 6.1. Class AgeGenderDataset"]},{"cell_type":"code","execution_count":13,"id":"bee947b9","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.32965Z","iopub.status.busy":"2025-08-29T09:44:09.329376Z","iopub.status.idle":"2025-08-29T09:44:09.340409Z","shell.execute_reply":"2025-08-29T09:44:09.339854Z"},"papermill":{"duration":0.020162,"end_time":"2025-08-29T09:44:09.341465","exception":false,"start_time":"2025-08-29T09:44:09.321303","status":"completed"},"tags":[]},"outputs":[],"source":["\n","\n","\n","class AgeGenderDataset(Dataset):\n","    def __init__(self, image_dirs, csv_path, use_age=True, use_male=False, \n","        transform=None, image_ext=\".png\", normalize=False, mean=None, std=None):\n","        \"\"\"\n","        image_dirs: 1 thư mục hoặc list thư mục chứa ảnh\n","        csv_path: đường dẫn đến file csv\n","        use_age: True → dùng age làm label\n","        use_male: True → thêm gender vào label\n","        image_ext: phần đuôi ảnh, ví dụ '.png'\n","        \"\"\"\n","        self.image_dirs = image_dirs if isinstance(image_dirs, list) else [image_dirs]\n","        # self.data = pd.read_csv(csv_path)\n","\n","        if csv_path.endswith(\".xlsx\"):\n","            self.data = pd.read_excel(csv_path)\n","        else:\n","            self.data = pd.read_csv(csv_path)\n","\n","        self.use_age = use_age\n","        self.use_male = use_male\n","        self.transform = transform\n","        self.image_ext = image_ext\n","        self.normalize = normalize\n","        self.mean = mean\n","        self.std = std\n","\n","        # Chuẩn hóa tên cột\n","        if 'id' not in self.data.columns:\n","            if 'Image ID' in self.data.columns:\n","                self.data.rename(columns={'Image ID': 'id'}, inplace=True)\n","            elif 'Case ID' in self.data.columns:\n","                self.data.rename(columns={'Case ID': 'id'}, inplace=True)\n","\n","        if 'boneage' not in self.data.columns:\n","            if 'Bone Age (months)' in self.data.columns:\n","                self.data.rename(columns={'Bone Age (months)': 'boneage'}, inplace=True)\n","            elif 'Ground truth bone age (months)' in self.data.columns:\n","                self.data.rename(columns={'Ground truth bone age (months)': 'boneage'}, inplace=True)\n","\n","        if 'male' not in self.data.columns:\n","            if 'Sex' in self.data.columns:\n","                self.data['male'] = self.data['Sex'].map({'M': True, 'F': False})\n","            elif 'gender' in self.data.columns:\n","                self.data['male'] = self.data['gender'].map({'male': True, 'female': False})\n","\n","        self.data['male'] = self.data['male'].astype(bool)\n","\n","    def __len__(self):\n","        return len(self.data)\n","\n","    def find_image_path(self, img_id):\n","        \"\"\"Tìm ảnh trong các thư mục đã cho.\"\"\"\n","        for dir in self.image_dirs:\n","            candidate = os.path.join(dir, img_id + self.image_ext)\n","            if os.path.exists(candidate):\n","                return candidate\n","        raise FileNotFoundError(f\"Không tìm thấy {img_id + self.image_ext} trong bất kỳ thư mục nào.\")\n","\n","    def __getitem__(self, idx):\n","        row = self.data.iloc[idx]\n","        img_id = str(row['id']).strip()\n","        img_path = self.find_image_path(img_id)\n","\n","        image = Image.open(img_path).convert(\"L\")\n","        if self.transform:\n","            image = self.transform(image)\n","\n","        if self.use_age:\n","            age = float(row['boneage'])\n","                   # chuẩn hoá nếu cần\n","            if self.normalize and self.mean is not None and self.std is not None:\n","                age = (age - self.mean) / self.std\n","\n","            \n","            if self.use_male:\n","                gender = float(row['male'])  # True → 1.0, False → 0.0\n","                label = torch.tensor([age, gender], dtype=torch.float32)\n","            else:\n","                label = torch.tensor(age, dtype=torch.float32)\n","        else:\n","            label = torch.tensor([-1.0, -1.0] if self.use_male else -1.0, dtype=torch.float32)\n","\n","        return image, label\n"]},{"cell_type":"code","execution_count":14,"id":"44abae85","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.356042Z","iopub.status.busy":"2025-08-29T09:44:09.35584Z","iopub.status.idle":"2025-08-29T09:44:09.359212Z","shell.execute_reply":"2025-08-29T09:44:09.358721Z"},"papermill":{"duration":0.012001,"end_time":"2025-08-29T09:44:09.360269","exception":false,"start_time":"2025-08-29T09:44:09.348268","status":"completed"},"tags":[]},"outputs":[],"source":["# import torchvision.transforms.v2 as T\n","# from PIL import Image\n","# import os\n","# import torch\n","\n","# # Đường dẫn thư mục ảnh\n","# data_dir = '/kaggle/input/boneage-amazone-data/BoneAgeTrainingSet/boneage-training-dataset'\n","\n","# # Transform dùng T.ToImage + T.ToDtype thay vì ToImageTensor\n","# transform = T.Compose([\n","#     T.ToImage(),                           # PIL → Tensor (C, H, W), dtype=uint8\n","#     T.ToDtype(torch.float32, scale=True), # → float32, chia 255 nếu scale=True\n","# ])\n","\n","# sum_ = 0.0\n","# sum_squared = 0.0\n","# num_pixels = 0\n","\n","# for file in os.listdir(data_dir):\n","#     if file.endswith(('.png', '.jpg', '.jpeg')):\n","#         img = Image.open(os.path.join(data_dir, file)).convert('L')  # ảnh grayscale\n","#         img_tensor = transform(img)  # shape: (1, H, W), float32 ∈ [0, 1]\n","\n","#         sum_ += img_tensor.sum().item()\n","#         sum_squared += (img_tensor ** 2).sum().item()\n","#         num_pixels += img_tensor.numel()\n","\n","# mean = sum_ / num_pixels\n","# std = (sum_squared / num_pixels - mean ** 2) ** 0.5\n","\n","# print(f\"Mean: {mean:.6f}\")\n","# print(f\"Std: {std:.6f}\")\n"]},{"cell_type":"markdown","id":"c2ba5750","metadata":{"papermill":{"duration":0.006764,"end_time":"2025-08-29T09:44:09.373968","exception":false,"start_time":"2025-08-29T09:44:09.367204","status":"completed"},"tags":[]},"source":["## 6.2 Tạo train_loader, val_loader, transform"]},{"cell_type":"code","execution_count":15,"id":"dee9e283","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.389072Z","iopub.status.busy":"2025-08-29T09:44:09.388484Z","iopub.status.idle":"2025-08-29T09:44:09.437482Z","shell.execute_reply":"2025-08-29T09:44:09.436694Z"},"papermill":{"duration":0.057818,"end_time":"2025-08-29T09:44:09.4388","exception":false,"start_time":"2025-08-29T09:44:09.380982","status":"completed"},"tags":[]},"outputs":[],"source":["\n","# Paths\n","train_dir = \"/kaggle/input/boneage-amazone-data/BoneAgeTrainingSet/boneage-training-dataset\"\n","train_csv = \"/kaggle/input/boneage-amazone-data/BoneAgeTrainingSetAnnotations (1)/train.csv\"\n","val_csv = \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/Validation Dataset.csv\"\n","val_img_dirs = [\n","    \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/boneage-validation-dataset-1/boneage-validation-dataset-1\",\n","    \"/kaggle/input/boneage-amazone-data/BoneAgeValidationSet/Bone Age Validation Set/boneage-validation-dataset-2/boneage-validation-dataset-2\",\n","]\n","\n","# Resize + CenterCrop + ToTensor \n","transform = v2.Compose([\n","    v2.ToImage(),\n","    v2.Resize((232, 232), interpolation=InterpolationMode.BILINEAR),\n","    v2.CenterCrop(224),\n","        \n","    v2.RandomHorizontalFlip(p=0.5),   # lật ngang\n","    v2.RandomVerticalFlip(p=0.2),     # lật dọc\n","    v2.RandomRotation(degrees=30),    # xoay ±30 độ\n","    v2.RandomAffine(\n","        degrees=0,\n","        translate=(0.1, 0.1),  # dịch chuyển 10% chiều rộng/cao\n","        scale=(0.9, 1.1),      # phóng to/thu nhỏ\n","        shear=10               # nghiêng ảnh\n","    ),\n","    \n","    # AddGaussianNoise(0., 0.05),      # thêm nhiễu Gaussian\n","\n","    v2.ToDtype(torch.float32, scale=True),\n","    v2.Normalize(mean=[mean], std=[std])\n","])\n","\n","\n","\n","# Dataset & DataLoader\n","train_dataset = AgeGenderDataset(train_dir, train_csv, use_age=True, transform=transform,normalize=True, mean=label_mean, std=label_std)\n","train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True,num_workers=4, pin_memory=True)\n","\n","val_dataset = AgeGenderDataset(val_img_dirs, val_csv, use_age=True, transform=transform,normalize=True, mean=label_mean, std=label_std)\n","val_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=4, pin_memory=True)\n","\n","\n"]},{"cell_type":"code","execution_count":16,"id":"1c34c779","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.453683Z","iopub.status.busy":"2025-08-29T09:44:09.453449Z","iopub.status.idle":"2025-08-29T09:44:09.45686Z","shell.execute_reply":"2025-08-29T09:44:09.456295Z"},"papermill":{"duration":0.011992,"end_time":"2025-08-29T09:44:09.457837","exception":false,"start_time":"2025-08-29T09:44:09.445845","status":"completed"},"tags":[]},"outputs":[],"source":["# import torch\n","# from torch.utils.data import DataLoader\n","\n","# def compute_label_stats(datasets, batch_size=64):\n","#     \"\"\"\n","#     datasets: list chứa nhiều Dataset (vd: [train_dataset])\n","#     batch_size: batch size khi duyệt\n","#     \"\"\"\n","#     all_labels = []\n","\n","#     for dataset in datasets:\n","#         loader = DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=2)\n","#         for _, labels in loader:\n","#             if labels.ndim > 1:  # Nếu có cả gender (shape [B, 2])\n","#                 labels = labels[:, 0]  # chỉ lấy cột age\n","#             all_labels.append(labels)\n","\n","#     all_labels = torch.cat(all_labels, dim=0)\n","#     mean = all_labels.mean().item()\n","#     print('label_mean',mean)\n","#     std = all_labels.std(unbiased=False).item()  # population std\n","#     print('label_std',std)\n","#     return mean, std\n"]},{"cell_type":"markdown","id":"87aca994","metadata":{"papermill":{"duration":0.006616,"end_time":"2025-08-29T09:44:09.471455","exception":false,"start_time":"2025-08-29T09:44:09.464839","status":"completed"},"tags":[]},"source":["# 7. Setup các hàm save_model, (train_step, valid_step) train, có apply Wandb và optuna"]},{"cell_type":"code","execution_count":17,"id":"b588238a","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.486444Z","iopub.status.busy":"2025-08-29T09:44:09.485925Z","iopub.status.idle":"2025-08-29T09:44:09.490045Z","shell.execute_reply":"2025-08-29T09:44:09.489521Z"},"papermill":{"duration":0.01264,"end_time":"2025-08-29T09:44:09.491069","exception":false,"start_time":"2025-08-29T09:44:09.478429","status":"completed"},"tags":[]},"outputs":[],"source":["import torch\n","from pathlib import Path\n","\n","def save_model(model: torch.nn.Module,\n","               target_dir: str,\n","               model_name: str):\n","\n","  # Create target directory\n","  target_dir_path = Path(target_dir)\n","  target_dir_path.mkdir(parents=True,\n","                        exist_ok=True)\n","  # Create model save path\n","  assert model_name.endswith(\".pth\") or model_name.endswith(\".pt\"), \"model_name should end with '.pt' or '.pth'\"\n","  model_save_path = target_dir_path / model_name\n","\n","  # Save the model state_dict()\n","  print(f\"[INFO] Saving model to: {model_save_path}\")\n","  torch.save(obj=model.state_dict(),\n","             f=model_save_path)"]},{"cell_type":"code","execution_count":18,"id":"c4cb2a0d","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.505615Z","iopub.status.busy":"2025-08-29T09:44:09.505373Z","iopub.status.idle":"2025-08-29T09:44:09.511469Z","shell.execute_reply":"2025-08-29T09:44:09.510829Z"},"papermill":{"duration":0.014622,"end_time":"2025-08-29T09:44:09.512631","exception":false,"start_time":"2025-08-29T09:44:09.498009","status":"completed"},"tags":[]},"outputs":[],"source":["\n","def train_step(model, dataloader, loss_fn, optimizer, device, lambda_div):\n","    model.train()\n","    total_loss_train = 0.0\n","\n","    for X, y in dataloader:\n","        X, y = X.to(device), y.to(device)\n","\n","        pi, mu, log_sigma2, attention_maps = model(X)\n","    \n","        # Gọi loss function truyền vào\n","        loss = loss_fn(y, pi, mu, log_sigma2, attention_maps, lambda_div)\n","        # loss = loss_fn(y, pi, mu, log_sigma2)#mdn loss\n","    \n","        print(\"Ground truth y:\", y[:1])\n","        print(\"Predicted mu:\", mu[:1])\n","        print(\"Predicted sigma2:\",torch.exp(log_sigma2[:1]) + eps )\n","        print(\"pi:\", pi[:1])\n","        print(\"loss:\", loss.item())\n","\n","        optimizer.zero_grad()\n","        loss.backward()\n","        optimizer.step()\n","\n","        total_loss_train += loss.item()\n","\n","    return total_loss_train / len(dataloader)\n","\n","\n","def valid_step(model, dataloader, loss_fn, device, lambda_div):\n","    model.eval()\n","    total_loss_val = 0.0\n","\n","    with torch.inference_mode():\n","        for X, y in dataloader:\n","            X, y = X.to(device), y.to(device)\n","            pi, mu, log_sigma2, attention_maps = model(X)\n","            loss = loss_fn(y, pi, mu, log_sigma2, attention_maps, lambda_div)\n","            # loss = loss_fn(y, pi, mu, log_sigma2)#chỉ mdn loss\n","            total_loss_val += loss.item()\n","\n","    return total_loss_val / len(dataloader)\n","\n","\n","\n","\n"," \n","\n"]},{"cell_type":"code","execution_count":19,"id":"cada1a89","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.528186Z","iopub.status.busy":"2025-08-29T09:44:09.527843Z","iopub.status.idle":"2025-08-29T09:44:09.534083Z","shell.execute_reply":"2025-08-29T09:44:09.533544Z"},"papermill":{"duration":0.015152,"end_time":"2025-08-29T09:44:09.53511","exception":false,"start_time":"2025-08-29T09:44:09.519958","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import torch\n","\n","class EarlyStopping:\n","    \"\"\"Dừng training sớm khi validation loss không cải thiện.\"\"\"\n","    def __init__(self, patience=5, delta=0.0, path=\"checkpoint.pt\", verbose=True):\n","        \"\"\"\n","        Args:\n","            patience (int): số epoch chờ sau khi val_loss không giảm\n","            delta (float): ngưỡng cải thiện tối thiểu để coi là tốt hơn\n","            path (str): nơi lưu best model\n","            verbose (bool): in log khi có cải thiện\n","        \"\"\"\n","        self.patience = patience\n","        self.delta = delta\n","        self.path = path\n","        self.verbose = verbose\n","\n","        self.counter = 0\n","        self.best_score = None\n","        self.early_stop = False\n","        self.val_loss_min = np.Inf\n","\n","    def __call__(self, val_loss, model):\n","        score = -val_loss  # vì loss càng thấp càng tốt\n","\n","        if self.best_score is None:\n","            self.best_score = score\n","            self.save_checkpoint(val_loss, model)\n","        elif score < self.best_score + self.delta:\n","            self.counter += 1\n","            if self.verbose:\n","                print(f\"⏳ EarlyStopping counter: {self.counter}/{self.patience}\")\n","            if self.counter >= self.patience:\n","                self.early_stop = True\n","        else:\n","            self.best_score = score\n","            self.save_checkpoint(val_loss, model)\n","            self.counter = 0\n","\n","    def save_checkpoint(self, val_loss, model):\n","        \"\"\"Lưu model tốt nhất (val_loss thấp nhất).\"\"\"\n","        if self.verbose:\n","            print(f\"✅ Validation loss giảm ({self.val_loss_min:.6f} → {val_loss:.6f}). Saving model ...\")\n","        torch.save(model.state_dict(), self.path)\n","        self.val_loss_min = val_loss\n"]},{"cell_type":"code","execution_count":null,"id":"7971e890","metadata":{"papermill":{"duration":0.006839,"end_time":"2025-08-29T09:44:09.548789","exception":false,"start_time":"2025-08-29T09:44:09.54195","status":"completed"},"tags":[]},"outputs":[],"source":[]},{"cell_type":"code","execution_count":20,"id":"5ec1d3f9","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.563419Z","iopub.status.busy":"2025-08-29T09:44:09.563173Z","iopub.status.idle":"2025-08-29T09:44:09.566083Z","shell.execute_reply":"2025-08-29T09:44:09.565594Z"},"papermill":{"duration":0.011255,"end_time":"2025-08-29T09:44:09.567049","exception":false,"start_time":"2025-08-29T09:44:09.555794","status":"completed"},"tags":[]},"outputs":[],"source":["# !pip install wandb\n"]},{"cell_type":"code","execution_count":21,"id":"5eaf8d35","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.581869Z","iopub.status.busy":"2025-08-29T09:44:09.581659Z","iopub.status.idle":"2025-08-29T09:44:09.589042Z","shell.execute_reply":"2025-08-29T09:44:09.588522Z"},"papermill":{"duration":0.015845,"end_time":"2025-08-29T09:44:09.590081","exception":false,"start_time":"2025-08-29T09:44:09.574236","status":"completed"},"tags":[]},"outputs":[],"source":["\n","import torch\n","# import wandb\n","\n","# # Đăng nhập vào Weights & Biases\n","# wandb.login(key=\"bef33c36a2dab89c3d8598f21606d5026d656739\")\n","# # wandb.init(project=\"bone-age-regression\", name=\"regnet-attention-run\")\n","\n","# eps = 1e-7\n","\n","\n","\n","\n","def train(model: torch.nn.Module, \n","          train_dataloader: torch.utils.data.DataLoader, \n","          valid_dataloader: torch.utils.data.DataLoader, \n","          optimizer: torch.optim.Optimizer,\n","          loss_fn,\n","          epochs: int,\n","          model_name: str,\n","          device: torch.device,\n","          lambda_div: float = 0.0,\n","          scheduler=None,\n","          early_stopping=None) -> Dict[str, List]:\n","\n","    \n"," \n","\n","    results = {\n","        \"train_loss\": [],\n","        \"valid_loss\": [],\n","        \"learning_rates\": []\n","    }\n","\n","    model.to(device)\n","\n","    for epoch in tqdm(range(epochs)):\n","        train_loss = train_step(\n","            model=model,\n","            dataloader=train_dataloader,\n","            loss_fn=loss_fn,\n","            optimizer=optimizer,\n","            device=device,\n","            lambda_div=lambda_div,\n","\n","        )\n","\n","        valid_loss = valid_step(\n","            model=model,\n","            dataloader=valid_dataloader,\n","            loss_fn=loss_fn,\n","            device=device,\n","            lambda_div=lambda_div,\n","    \n","        )\n","\n","        # Gọi scheduler sau valid_loss\n","        if scheduler is not None:\n","            scheduler.step(valid_loss)\n","\n","        current_lr = optimizer.param_groups[0]['lr']\n","\n","        # wandb.log({\n","        #     \"epoch\": epoch + 1,\n","        #     \"train_loss\": train_loss,\n","        #     \"val_loss\": valid_loss,\n","        #     \"learning_rate\": current_lr,\n","        # })\n","\n","\n","        #      # Log cả loss + tham số Optuna\n","        # wandb.log({\n","        #     \"epoch\": epoch + 1,\n","        #     \"train_loss\": train_loss,\n","        #     \"val_loss\": valid_loss,\n","        #     \"learning_rate\": current_lr,\n","        #     **trial.params  # <-- thêm tất cả tham số\n","        # })\n","\n","        # Ghi lại log\n","        print(\n","            f\"Epoch {epoch+1:02d} | \"\n","            f\"Train Loss: {train_loss:.4f} | \"\n","            f\"Valid Loss: {valid_loss:.4f} | \"\n","            f\"LR: {current_lr:.6f}\"\n","        )\n","\n","        # Lưu kết quả\n","        results[\"train_loss\"].append(train_loss)\n","        results[\"valid_loss\"].append(valid_loss)\n","        results[\"learning_rates\"].append(current_lr)\n","    \n","        # 👇 Kiểm tra EarlyStopping sau mỗi epoch\n","        if early_stopping is not None:\n","            early_stopping(valid_loss, model)\n","            if early_stopping.early_stop:\n","                print(\"⛔ Early stopping triggered!\")\n","                break\n","    \n","    # Sau khi training xong, load best model\n","    if early_stopping is not None:\n","        model.load_state_dict(torch.load(early_stopping.path))\n","        \n","    # Lưu mô hình\n","    save_path = \"/kaggle/working/\"\n","    save_model(model=model,\n","               target_dir=save_path,\n","               model_name=model_name)\n","    \n","    # wandb.finish()\n","\n","    return results, model\n"]},{"cell_type":"code","execution_count":22,"id":"f0b13b4a","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.604617Z","iopub.status.busy":"2025-08-29T09:44:09.604397Z","iopub.status.idle":"2025-08-29T09:44:09.609242Z","shell.execute_reply":"2025-08-29T09:44:09.608772Z"},"papermill":{"duration":0.01311,"end_time":"2025-08-29T09:44:09.610161","exception":false,"start_time":"2025-08-29T09:44:09.597051","status":"completed"},"tags":[]},"outputs":[],"source":["for name, param in model.named_parameters():\n","    if not param.requires_grad:\n","        print(f\"{name}: ❌ frozen (not trainable)\")\n"]},{"cell_type":"code","execution_count":23,"id":"a029c433","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.625286Z","iopub.status.busy":"2025-08-29T09:44:09.625079Z","iopub.status.idle":"2025-08-29T09:44:09.628836Z","shell.execute_reply":"2025-08-29T09:44:09.62834Z"},"papermill":{"duration":0.012661,"end_time":"2025-08-29T09:44:09.629932","exception":false,"start_time":"2025-08-29T09:44:09.617271","status":"completed"},"tags":[]},"outputs":[],"source":["# import torch\n","# import optuna\n","# import wandb\n","# from tqdm import tqdm\n","# from typing import Dict, List\n","\n","# # -------------------------\n","# # Hàm Optuna Objective\n","# # -------------------------\n","# def objective(trial):\n","#     # 8 siêu tham số\n","#     lr = trial.suggest_loguniform(\"lr\", 1e-5, 1e-1)\n","#     factor = trial.suggest_uniform(\"factor\", 0.1, 0.9)\n","#     patience = trial.suggest_int(\"patience\", 1, 10)\n","#     num_components = trial.suggest_int(\"num_components\", 1, 8)\n","#     epochs = trial.suggest_int(\"epochs\", 3,5)\n","#     batch_size = trial.suggest_categorical(\"batch_size\", [ 32, 64])\n","#     temperature = trial.suggest_uniform(\"temperature\", 1.0, 10.0)\n","#     lambda_div = trial.suggest_uniform(\"lambda_div\", 0.0, 1.0)\n","\n","#     # Khởi tạo W&B với tên trial\n","#     wandb.init(\n","#         project=\"bone-age-regression\",\n","#         name=f\"trial-{trial.number}\",\n","#         config=trial.params,  # <-- log config của Optuna\n","#         reinit=True\n","#     )\n","\n","\n","\n","#     # Model, Loss, Optimizer\n","#     device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","#     model = RegNetWithAttentionAndSoftmax(num_components=num_components)\n","        \n","#     # model = YourModel(num_components=num_components, temperature=temperature)\n","#     model = model.to(device)  # ⚠️ Phải to() trước khi init attention_blocks\n","#     model.init_attention_blocks(device=device) \n","    \n","#     optimizer = torch.optim.Adam(model.parameters(), lr=lr)\n","#     scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', \n","#                                                             factor=factor, patience=patience, verbose=True)\n","    \n","    \n","#     loss_fn = total_loss\n","\n","#     wandb.init(project=\"bone-age-regression\", name=f\"trial-{trial.number}\", reinit=True)\n","\n","#     results, _ = train(\n","#         model=model,\n","#         train_dataloader=train_loader,\n","#         valid_dataloader=train_loader,\n","#         optimizer=optimizer,\n","#         loss_fn=loss_fn,\n","#         epochs=epochs,\n","#         model_name=f\"model_trial_{trial.number}.pth\",\n","#         device=device,\n","#         lambda_div=lambda_div,\n","#         scheduler=scheduler\n","#     )\n","\n","#     wandb.finish()\n","#     return results[\"valid_loss\"][-1]\n","\n","\n","# # -------------------------\n","# # Chạy Optuna\n","# # -------------------------\n","# study = optuna.create_study(direction=\"minimize\")\n","# study.optimize(objective, n_trials=20)\n","\n","# print(\"Best params:\", study.best_params)\n","# print(\"Best loss:\", study.best_value)\n"]},{"cell_type":"code","execution_count":24,"id":"9d100569","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:09.644897Z","iopub.status.busy":"2025-08-29T09:44:09.644694Z","iopub.status.idle":"2025-08-29T09:44:10.473765Z","shell.execute_reply":"2025-08-29T09:44:10.472891Z"},"papermill":{"duration":0.837928,"end_time":"2025-08-29T09:44:10.474945","exception":false,"start_time":"2025-08-29T09:44:09.637017","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["có generator\n","Seed: 1095892022440902734\n","có generator\n","Seed: 8395861539748881000\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/torch/optim/lr_scheduler.py:62: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.\n","  warnings.warn(\n"]}],"source":["\n","\n","\n","\n","\n","# Model, Loss, Optimizer\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","model = RegNetWithAttentionAndSoftmax(num_components=num_components)\n","    \n","# model = YourModel(num_components=num_components, temperature=temperature)\n","model = model.to(device)  # ⚠️ Phải to() trước khi init attention_blocks\n","model.init_attention_blocks(device=device) \n","\n","optimizer = torch.optim.Adam(model.parameters(), lr=lr)\n","scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', \n","                                                        factor=factor, patience=patience, verbose=True)\n","# Khởi tạo EarlyStopping\n","early_stopping = EarlyStopping(patience=patience, path=\"best_model.pt\")\n","\n","\n"]},{"cell_type":"code","execution_count":25,"id":"0983cdcd","metadata":{"execution":{"iopub.execute_input":"2025-08-29T09:44:10.490184Z","iopub.status.busy":"2025-08-29T09:44:10.489962Z","iopub.status.idle":"2025-08-29T10:09:17.275832Z","shell.execute_reply":"2025-08-29T10:09:17.274857Z"},"papermill":{"duration":1506.794872,"end_time":"2025-08-29T10:09:17.277258","exception":false,"start_time":"2025-08-29T09:44:10.482386","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["  0%|          | 0/50 [00:00<?, ?it/s]"]},{"name":"stdout","output_type":"stream","text":["Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.1366,  0.0350]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.7755, 1.0688]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6598, 0.3402]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.8478238582611084\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.6294, -0.1343]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[1.7868, 1.0449]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5838, 0.4162]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.5194487571716309\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7360, 0.0069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6457, 0.9049]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5429, 0.4571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.4128810167312622\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[ 0.0907, -0.1014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2657, 0.7560]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6569, 0.3431]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.294414758682251\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.1520, -0.0191]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5944, 0.6966]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5746, 0.4254]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.5324671268463135\n","Ground truth y: tensor([-0.0559], device='cuda:0')\n","Predicted mu: tensor([[-0.7004, -0.0480]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3696, 0.8553]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5800, 0.4200]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.2337169647216797\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.5010, 0.2131]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4028, 0.6423]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3568, 0.6432]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.2164136171340942\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[0.5497, 0.4414]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3573, 0.7404]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4004, 0.5996]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.093781590461731\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.6054, 0.3404]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4595, 0.6896]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2363, 0.7637]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.2099311351776123\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.1295,  0.3182]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6133, 0.5832]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3841, 0.6159]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1239402294158936\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.2912, 0.1947]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4904, 0.8439]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5562, 0.4438]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1371283531188965\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[1.1293, 0.8624]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1254, 0.3030]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4069, 0.5931]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.478367567062378\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3828, 0.6047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3255, 0.2411]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4826, 0.5174]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.558097004890442\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2162, 0.0325]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6217, 0.7606]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4248, 0.5752]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1754390001296997\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0409,  0.0884]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.7479, 0.8699]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5150, 0.4850]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.178017020225525\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6152, 0.6114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3275, 0.3882]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3787, 0.6213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.078661561012268\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.0961, -0.3358]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[1.6263, 0.8221]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9150, 0.0850]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.210422396659851\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[0.0446, 0.1910]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6091, 0.7970]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5038, 0.4962]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1516262292861938\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0867, 0.0247]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3798, 0.8813]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6056, 0.3944]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0569343566894531\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2801, 0.7268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3704, 0.5349]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5780, 0.4220]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9077557921409607\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.1239, -0.1604]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5413, 0.8308]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7930, 0.2070]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.014768123626709\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-0.3179, -0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5305, 0.7898]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6087, 0.3913]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9963549375534058\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.4103, -0.1550]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6255, 0.2818]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7809, 0.2191]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9224679470062256\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0081,  0.3320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3227, 0.5590]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6897, 0.3103]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1974878311157227\n","Ground truth y: tensor([2.1510], device='cuda:0')\n","Predicted mu: tensor([[1.8485, 1.2897]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2207, 0.3804]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8907, 0.1093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.016295075416565\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.1558, -0.2083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2841, 0.4832]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7885, 0.2115]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0690103769302368\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.5407, 0.6169]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2610, 0.2721]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7736, 0.2264]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7842617630958557\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.0314, 0.2576]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1615, 0.4529]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6813, 0.3187]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.079200029373169\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2569, 0.5280]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2575, 0.3846]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6532, 0.3468]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8662556409835815\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[0.2219, 0.3494]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3035, 0.3041]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5272, 0.4728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0535029172897339\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3089, 0.8934]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4361, 0.2322]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4428, 0.5572]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.94319087266922\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2946, 0.3074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4652, 0.4770]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4378, 0.5622]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8136880397796631\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-2.0833, -1.0833]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.7938, 0.6171]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9771, 0.0229]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8403286337852478\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3876, 0.4995]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4911, 0.3132]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2470, 0.7530]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9788252711296082\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.4507, 0.8459]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5255, 0.2417]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2214, 0.7786]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9894942045211792\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.2997, -1.1525]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5039, 0.5217]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9506, 0.0494]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0691454410552979\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6965, -0.7055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5269, 0.4075]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8342, 0.1658]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9065848588943481\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2842, 0.3731]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4116, 0.2724]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3119, 0.6881]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7906936407089233\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.9421, -1.0449]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4659, 0.4338]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9393, 0.0607]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8752523064613342\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3831, 0.4781]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5078, 0.3042]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2828, 0.7172]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8209757804870605\n","Ground truth y: tensor([2.1510], device='cuda:0')\n","Predicted mu: tensor([[0.6414, 1.0290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5975, 0.2699]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2089, 0.7911]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.808982253074646\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4262, 0.8699]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4948, 0.1926]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1925, 0.8075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7884873747825623\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[ 0.2698, -0.2983]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3771, 0.3122]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5625, 0.4375]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8638384342193604\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5705, 0.2696]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4200, 0.2391]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2378, 0.7622]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6079275012016296\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.4194, 0.4504]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5507, 0.2715]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2854, 0.7146]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9627009034156799\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.5249, 0.9862]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.9074, 0.2772]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1306, 0.8694]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0367804765701294\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.0330, -1.3115]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2047, 0.4250]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9427, 0.0573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7915170192718506\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4009, 0.5845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4582, 0.2857]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1451, 0.8549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8167034387588501\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4203, 0.4576]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4859, 0.2138]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1918, 0.8082]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9178392291069031\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2139, 0.7599]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3789, 0.2752]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2067, 0.7933]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9066993594169617\n","Ground truth y: tensor([1.7630], device='cuda:0')\n","Predicted mu: tensor([[0.8246, 1.4630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4303, 0.1600]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0706, 0.9294]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9787458181381226\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.7508, -0.4081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5044, 0.3586]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7668, 0.2332]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8026420474052429\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.8223, 0.9792]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4661, 0.2714]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0952, 0.9048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.785092830657959\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5373, -0.0683]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4827, 0.2811]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6252, 0.3748]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9936618804931641\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-1.0865, -1.5158]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.8207, 0.3988]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8930, 0.1070]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7573471069335938\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.2119,  0.1810]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4358, 0.1633]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4260, 0.5740]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7530840039253235\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2269, 0.4144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2133, 0.2040]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3212, 0.6788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7673845887184143\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0017,  0.1171]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2950, 0.1932]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3673, 0.6327]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6286936402320862\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.2506, -0.2844]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3268, 0.2559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4613, 0.5387]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7204879522323608\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.8792, 1.5949]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5104, 0.1328]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1012, 0.8988]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8043553829193115\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-1.0132, -0.1240]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.9535, 0.2772]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8611, 0.1389]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6965527534484863\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1684, 0.0860]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2021, 0.1398]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3268, 0.6732]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6228589415550232\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8906, 1.2224]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4515, 0.1313]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1571, 0.8429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7355024814605713\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4121, 0.7176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3000, 0.1611]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2913, 0.7087]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6836175918579102\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.1993, -1.2246]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3675, 0.2212]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7448, 0.2552]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8839752674102783\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.6464, -0.9028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2250, 0.1629]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5687, 0.4313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7072535753250122\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3091, 0.1761]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0953, 0.1684]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2998, 0.7002]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7351729273796082\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1661, 0.2035]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1593, 0.1770]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3252, 0.6748]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.681644082069397\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-0.1195,  0.1378]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.9392, 0.1994]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6474, 0.3526]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.302913784980774\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3839, 0.0889]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3318, 0.1501]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3397, 0.6603]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8370981812477112\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7072, 0.2905]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2017, 0.2164]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4283, 0.5717]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.672717273235321\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.0610, 0.7573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5282, 0.2961]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3226, 0.6774]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7746816277503967\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.1883, -2.3571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3992, 0.2591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8090, 0.1910]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7465947866439819\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[ 0.1685, -0.0990]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6445, 0.2497]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6333, 0.3667]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8108385801315308\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3071, 0.0124]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4330, 0.2000]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6240, 0.3760]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.782221257686615\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[-0.2983, -1.3600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2736, 0.2001]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6045, 0.3955]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7928385734558105\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[0.2335, 0.1287]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4957, 0.3738]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6462, 0.3538]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8055988550186157\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.9767, 0.6562]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1276, 0.4397]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7939, 0.2061]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7112841010093689\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.3953, -0.6140]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3928, 0.2356]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5294, 0.4706]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6908124089241028\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.4116, 1.0746]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0998, 0.4933]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8695, 0.1305]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6916110515594482\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5430, 0.7170]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1500, 0.4185]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7297, 0.2703]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6984368562698364\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[ 0.0219, -0.0058]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3693, 0.2068]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5545, 0.4455]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5724686980247498\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.5237, -1.6501]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4916, 0.1304]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0868, 0.9132]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7168055176734924\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0518, -0.0471]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2500, 0.2391]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5350, 0.4650]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7933124899864197\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2681, 0.6936]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1801, 0.3550]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6844, 0.3156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8864931464195251\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0067, 0.0651]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3567, 0.1972]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4003, 0.5997]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7418308854103088\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.2575, -0.1838]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2740, 0.1603]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4087, 0.5913]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8004570007324219\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.5779, 0.4711]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1603, 0.1780]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6009, 0.3991]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9567297697067261\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.3860, 0.2069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1893, 0.1897]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6127, 0.3873]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9207156300544739\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.7835, 0.8175]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3069, 0.2844]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6078, 0.3922]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8423093557357788\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2020, -0.0023]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2518, 0.2893]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3044, 0.6956]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8057777881622314\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.9650, 0.9313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5046, 0.3669]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7262, 0.2738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7555578947067261\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5211, 1.0958]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4907, 0.3916]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5242, 0.4758]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7793994545936584\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-1.3840, -0.2293]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3344, 0.4488]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8898, 0.1102]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9453701376914978\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4136, 0.0026]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1586, 0.3904]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5056, 0.4944]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7933472394943237\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0268, -0.0962]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1869, 0.4858]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6714, 0.3286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8238228559494019\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6978, 0.5630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2243, 0.2499]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5134, 0.4866]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8535326719284058\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[-0.0905,  0.1154]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1706, 0.4071]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5499, 0.4501]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6552200317382812\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4893, 0.1139]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1652, 0.3263]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3998, 0.6002]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8416325449943542\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.9065, -0.0693]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3644, 0.4624]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9466, 0.0534]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7385702729225159\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.1300, 0.2903]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6024, 0.2591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4062, 0.5938]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7494599223136902\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.3114, 1.4912]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5072, 0.1712]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2584, 0.7416]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6520917415618896\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0207, -0.0369]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1946, 0.3624]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6420, 0.3580]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8256897330284119\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.0458, 0.1513]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1627, 0.2817]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6324, 0.3676]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6533873081207275\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4228, 0.5280]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2761, 0.2096]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4277, 0.5723]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8762970566749573\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.8827, 0.6945]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1980, 0.1704]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1689, 0.8311]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5802422165870667\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.7360, -0.0656]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1906, 0.6377]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9989, 0.0011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6859709620475769\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.7649, 0.5052]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1598, 0.2525]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2975, 0.7025]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7588033676147461\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[0.9643, 0.5883]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1366, 0.1972]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1123, 0.8877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7231026291847229\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.6658,  0.0378]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3935, 0.3068]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8926, 0.1074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6324892044067383\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.7656, -0.1301]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1450, 0.5750]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9924e-01, 7.6355e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6029176115989685\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4365,  0.1562]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2663, 0.2575]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8219, 0.1781]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6064575910568237\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.5632,  0.2795]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3294, 0.2797]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8676, 0.1324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.617860734462738\n","Ground truth y: tensor([-0.2256], device='cuda:0')\n","Predicted mu: tensor([[-0.1672,  0.1403]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2043, 0.2698]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7297, 0.2703]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6763092875480652\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-1.1481, -0.0430]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1371, 0.4186]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9931, 0.0069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5775268077850342\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.5903,  0.0136]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1831, 0.2943]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9387, 0.0613]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6279131770133972\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0762,  0.1108]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2033, 0.2299]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6432, 0.3568]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7618151903152466\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7627, 0.5604]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1717, 0.2121]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1589, 0.8411]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5885534286499023\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.2738, -0.0922]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1794, 0.3223]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9902, 0.0098]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.618769645690918\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8929, -0.0497]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1815, 0.2729]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9698, 0.0302]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.001592993736267\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1363, 0.2008]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2111, 0.2320]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4948, 0.5052]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1123406887054443\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4764, 0.6155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0930, 0.1903]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1497, 0.8503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.704612135887146\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[0.8384, 1.3585]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2982, 0.3642]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1186, 0.8814]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7229712009429932\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0612,  0.3094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3107, 0.2209]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7113, 0.2887]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8196619153022766\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-0.9455, -0.0090]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3517, 0.3636]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9860, 0.0140]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9215166568756104\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.7704, 1.2239]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2485, 0.2369]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1448, 0.8552]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6790056228637695\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.9290, 1.1509]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3378, 0.2349]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1781, 0.8219]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7028456926345825\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.4858, -0.0906]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4331, 0.4074]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9953, 0.0047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7503200769424438\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5968, 0.4114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2352, 0.1571]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3101, 0.6899]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6671946048736572\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.3938,  0.0634]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4244, 0.2138]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8122, 0.1878]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7967046499252319\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.7851, 0.4360]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1847, 0.1520]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2333, 0.7667]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6414835453033447\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2148, 0.1093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4407, 0.1961]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7425, 0.2575]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.660542905330658\n","Ground truth y: tensor([0.7687], device='cuda:0')\n","Predicted mu: tensor([[0.6726, 0.5856]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1762, 0.1598]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1787, 0.8213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6660081744194031\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-1.0172, -0.1016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5665, 0.2195]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9702, 0.0298]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6737735867500305\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-1.4033, -0.2809]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3817, 0.2562]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9882, 0.0118]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.639432966709137\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.8816, 0.7194]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1369, 0.1111]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2510, 0.7490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46227630972862244\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.0664, 0.9464]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2001, 0.1202]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2286, 0.7714]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7662850022315979\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0892,  0.1738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2049, 0.1233]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7391, 0.2609]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6908957362174988\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4541, 0.4371]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1708, 0.1627]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3353, 0.6647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7280937433242798\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0867, 0.6132]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2510, 0.1595]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6278, 0.3722]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.64971524477005\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.6721,  0.0393]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1686, 0.1461]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9441, 0.0559]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5664132237434387\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5001, 0.8063]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2676, 0.1397]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3845, 0.6155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4562186002731323\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.5442, 1.8882]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4914, 0.1429]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2136, 0.7864]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7328225374221802\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1959, 0.2199]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1641, 0.1164]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7269, 0.2731]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5807801485061646\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.2380, 0.2306]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1639, 0.1019]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7169, 0.2831]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7296621203422546\n","Ground truth y: tensor([-2.1415], device='cuda:0')\n","Predicted mu: tensor([[-1.3903, -0.1926]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2355, 0.2455]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9953, 0.0047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4729235768318176\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-0.9627, -0.0888]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1803, 0.1588]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9825, 0.0175]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5953846573829651\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5018, 0.6580]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1546, 0.0960]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4291, 0.5709]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6223305463790894\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1068, 0.6292]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3216, 0.1209]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4436, 0.5564]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7670758962631226\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8868, 1.0015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2704, 0.0928]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3012, 0.6988]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6020063161849976\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.2067,  0.3135]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1810, 0.1558]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8568, 0.1432]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4634336233139038\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2126,  0.2412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2696, 0.1087]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7810, 0.2190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6876716017723083\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.5283, 0.6163]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2132, 0.1275]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4407, 0.5593]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4890627861022949\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8945, 0.7868]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0921, 0.1070]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4965, 0.5035]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6094986200332642\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.6664,  0.0045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1633, 0.2524]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9945, 0.0055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5058955550193787\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7202, 0.7339]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1583, 0.0941]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5319, 0.4681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6932068467140198\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.0261,  0.0671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1488, 0.1550]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9814, 0.0186]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8598464131355286\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.2505,  0.2337]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2902, 0.1470]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8354, 0.1646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5087498426437378\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.0567,  0.3590]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3650, 0.1003]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7297, 0.2703]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6030875444412231\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7043, 0.7738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1941, 0.1090]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4916, 0.5084]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5077332258224487\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6739,  0.1272]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2383, 0.1279]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9435, 0.0565]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7862460017204285\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.4075,  0.1089]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2346, 0.1542]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9116, 0.0884]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5097417235374451\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.8435, 0.6511]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1844, 0.1419]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3854, 0.6146]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5551424026489258\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.5388,  0.0186]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2269, 0.1261]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8687, 0.1313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9031611680984497\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.4290, -0.0144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1843, 0.2211]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9906, 0.0094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6535418033599854\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2406,  0.2115]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4053, 0.1269]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7646, 0.2354]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5470092296600342\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4637, 0.2690]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3447, 0.1512]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5302, 0.4698]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5661051273345947\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.7059, -0.0806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2195, 0.1607]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9458, 0.0542]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6801137924194336\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3101, 0.4600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3211, 0.1045]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4808, 0.5192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4877435564994812\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5524,  0.0380]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2141, 0.1359]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9188, 0.0812]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5764164924621582\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0135,  0.3019]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1745, 0.1572]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7750, 0.2250]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7264270782470703\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3975, 0.3494]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2419, 0.1209]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4686, 0.5314]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4619399905204773\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1484, 0.2120]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2420, 0.1141]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5293, 0.4707]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38152292370796204\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.5861, 0.4887]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1954, 0.0998]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4053, 0.5947]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4262303411960602\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.7205,  0.0268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2043, 0.1303]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9473, 0.0527]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8126661777496338\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[-0.1211,  0.0536]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2140, 0.0974]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7163, 0.2837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5305582880973816\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[1.2598, 1.0899]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1125, 0.0958]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2408, 0.7592]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5750774145126343\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0990, 0.3084]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2612, 0.0872]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4678, 0.5322]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5159149765968323\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0876, 0.8322]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1401, 0.1393]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2319, 0.7681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3955279588699341\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.2709, 1.1253]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2946, 0.2007]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1582, 0.8418]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8658044934272766\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.7465, 0.6572]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1428, 0.1259]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2653, 0.7347]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7950907945632935\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1033, 0.1369]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3409, 0.1710]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3940, 0.6060]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5945692658424377\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.3813,  0.0279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2065, 0.1686]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9875, 0.0125]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.584267258644104\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.1925, -0.1540]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2583, 0.1938]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9804, 0.0196]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6300402879714966\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0722, 0.0472]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2056, 0.1514]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7637, 0.2363]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7579860091209412\n","Ground truth y: tensor([-1.7050], device='cuda:0')\n","Predicted mu: tensor([[-1.1384, -0.0677]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2852, 0.1910]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9672, 0.0328]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4521137475967407\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5924, 0.5128]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1525, 0.1634]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3607, 0.6393]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47831133008003235\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[1.3489, 0.9268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1209, 0.1277]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5173, 0.4827]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0839470624923706\n","Ground truth y: tensor([0.9384], device='cuda:0')\n","Predicted mu: tensor([[1.6055, 0.9312]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1288, 0.1391]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5515, 0.4485]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5177456736564636\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[1.4778, 0.9467]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1667, 0.1782]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5960, 0.4040]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8308618664741516\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.1147,  0.0084]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2747, 0.2432]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9543, 0.0457]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6219058632850647\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.9869, -0.0258]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3335, 0.2417]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9433, 0.0567]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6092796325683594\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[1.1038, 1.0226]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1424, 0.1697]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5195, 0.4805]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6080750823020935\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[1.0166, 1.0132]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2869, 0.2029]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4636, 0.5364]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4724316895008087\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.3726, 1.1473]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2679, 0.3257]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3481, 0.6519]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5304389595985413\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5511, 0.5808]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2323, 0.2065]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4166, 0.5834]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6267259120941162\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6225, 0.6456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1406, 0.2122]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3330, 0.6670]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5809524059295654\n","Ground truth y: tensor([-2.3598], device='cuda:0')\n","Predicted mu: tensor([[-1.6425, -0.3063]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2580, 0.3944]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9918, 0.0082]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5942363142967224\n"]},{"name":"stderr","output_type":"stream","text":["  2%|▏         | 1/50 [03:51<3:09:12, 231.68s/it]"]},{"name":"stdout","output_type":"stream","text":["Epoch 01 | Train Loss: 0.7873 | Valid Loss: 0.6072 | LR: 0.001000\n","✅ Validation loss giảm (inf → 0.607221). Saving model ...\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8181, 0.6786]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1410, 0.1659]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3811, 0.6189]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6212013959884644\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0943, 0.8757]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0663, 0.1657]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3547, 0.6453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7102397084236145\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8640, 0.8200]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0625, 0.1438]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4040, 0.5960]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5973271727561951\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.6641, -0.1869]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2801, 0.2704]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9901, 0.0099]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40319961309432983\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.7147, 0.6157]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0649, 0.1410]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3572, 0.6428]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7728719115257263\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3021, 0.6988]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1444, 0.1317]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4916, 0.5084]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6286710500717163\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3481, 0.3073]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0898, 0.1658]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4969, 0.5031]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6531720161437988\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5339, -0.0549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2115, 0.1968]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8510, 0.1490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6822672486305237\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.4048, -0.2490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1850, 0.4780]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9899, 0.0101]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6482320427894592\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.5956, -0.2351]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2178, 0.2940]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9931, 0.0069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5096214413642883\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.7721,  0.2165]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2072, 0.1931]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9063, 0.0937]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5772062540054321\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7005, 0.9017]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1332, 0.1295]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4013, 0.5987]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6641061902046204\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2049, -0.0378]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2317, 0.2094]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7224, 0.2776]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34599676728248596\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.7175, 1.5844]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1994, 0.1425]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3587, 0.6413]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4970017075538635\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1307, 0.0137]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1915, 0.2212]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5721, 0.4279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6383259296417236\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9150, 0.8925]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1292, 0.1507]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2593, 0.7407]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6141022443771362\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5358, -0.3353]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1218, 0.3664]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9403, 0.0597]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5920728445053101\n","Ground truth y: tensor([0.1624], device='cuda:0')\n","Predicted mu: tensor([[-0.3935, -0.0654]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2231, 0.3686]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9389, 0.0611]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4997503161430359\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2674, -0.1199]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1498, 0.1825]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7724, 0.2276]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39308488368988037\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.4564, 1.0277]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1761, 0.1227]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2774, 0.7226]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4934174716472626\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4381, 0.4436]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2465, 0.1154]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3174, 0.6826]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4383212625980377\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6242, 0.7578]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2182, 0.1092]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3088, 0.6912]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6192449331283569\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6506, 0.5637]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1593, 0.1439]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2672, 0.7328]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40887215733528137\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.1363, 0.2100]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2394, 0.1312]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4335, 0.5665]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5524234771728516\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.9076,  0.0564]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1821, 0.2365]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9966, 0.0034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6599103808403015\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.2404, -0.0152]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1989, 0.2151]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9802, 0.0198]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6340206265449524\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.3888,  0.1164]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1950, 0.0920]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8437, 0.1563]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8339883685112\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.1890,  0.0175]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2105, 0.0808]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6959, 0.3041]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8921484351158142\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.9455, -0.1682]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2360, 0.3042]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9723, 0.0277]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.767044723033905\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7949, 0.7047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2364, 0.0836]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3683, 0.6317]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5839992165565491\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-0.7703,  0.1128]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2895, 0.1464]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9360, 0.0640]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.01898992061615\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0806,  0.1549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3401, 0.1649]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5581, 0.4419]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47040894627571106\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5441, 0.8656]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2856, 0.1018]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5598, 0.4402]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6146062612533569\n","Ground truth y: tensor([2.1510], device='cuda:0')\n","Predicted mu: tensor([[2.0465, 1.7198]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1790, 0.1559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4480, 0.5520]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4840914011001587\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.8954,  0.2978]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2907, 0.1442]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8863, 0.1137]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5473389625549316\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0047, -0.1040]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1909, 0.2222]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9662, 0.0338]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39133360981941223\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7713, 0.7982]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1767, 0.1296]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4161, 0.5839]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49108874797821045\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7064, 0.8073]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2618, 0.1540]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5254, 0.4746]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6635956168174744\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.5617, 0.6028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1972, 0.1237]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4015, 0.5985]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6175289154052734\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3199, 0.4788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2863, 0.1157]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5661, 0.4339]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5460264682769775\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4180,  0.0508]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2133, 0.1750]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8099, 0.1901]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5571508407592773\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8590, 0.7210]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1279, 0.1665]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4645, 0.5355]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5314230918884277\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.0955, -0.2999]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2102, 0.4823]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9962, 0.0038]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6969790458679199\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4576, 0.4446]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1214, 0.1184]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4637, 0.5363]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47936394810676575\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.2881, 0.3765]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2183, 0.1513]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5007, 0.4993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6596739292144775\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.2900, 1.0242]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1059, 0.1992]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4884, 0.5116]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5087451934814453\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0744,  0.0500]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1230, 0.1431]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8140, 0.1860]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4582507014274597\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.7022, -0.1657]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1660, 0.2274]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9961, 0.0039]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6128764152526855\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[2.3316, 1.8165]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0973, 0.3029]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6549, 0.3451]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5848946571350098\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1926,  0.0805]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1427, 0.1657]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7997, 0.2003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8361272215843201\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2817, 0.4639]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1556, 0.1015]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4524, 0.5476]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3832719624042511\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2968,  0.2631]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1820, 0.1352]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7867, 0.2133]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39155760407447815\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.4129, -0.0093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2577, 0.1534]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9869, 0.0131]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.757692813873291\n","Ground truth y: tensor([-0.5652], device='cuda:0')\n","Predicted mu: tensor([[-0.4002,  0.2501]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3163, 0.1045]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8378, 0.1622]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8216173648834229\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7369, 0.8617]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1154, 0.1055]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3594, 0.6406]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5733321905136108\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.9595,  0.0843]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2285, 0.2136]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9380, 0.0620]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5535392165184021\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3712,  0.2399]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2239, 0.1347]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7135, 0.2865]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.544605553150177\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1113,  0.3416]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2670, 0.1052]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5119, 0.4881]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6223189234733582\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.6320,  0.2812]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3063, 0.1571]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8715, 0.1285]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3494163453578949\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.6890,  0.3032]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2882, 0.0825]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9346, 0.0654]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6641679406166077\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0298, 1.5237]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4018, 0.1868]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0865, 0.9135]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.817459225654602\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-0.4698,  0.1710]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2634, 0.1207]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8484, 0.1516]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4998059570789337\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1199,  0.0901]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3257, 0.1242]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6131, 0.3869]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5388781428337097\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.3622,  0.0409]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2235, 0.1053]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8359, 0.1641]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47885292768478394\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4208, 0.4685]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2342, 0.1418]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2905, 0.7095]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7119076251983643\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.9111, -0.1836]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0926, 0.2529]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6003230214118958\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.7513, -0.2900]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1683, 0.1966]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9700, 0.0300]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.544815719127655\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.1088, -0.2875]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1154, 0.1747]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9906, 0.0094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40519270300865173\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4198, 0.8590]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5493, 0.1425]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2699, 0.7301]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4949662387371063\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.0261, -0.2722]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0947, 0.2323]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9910e-01, 9.0192e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3791952133178711\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0949, 0.1467]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2272, 0.1420]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5875, 0.4125]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7996237277984619\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0634, -0.2279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1153, 0.1664]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9940, 0.0060]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40326127409935\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.0261,  0.1067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1798, 0.1573]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8672, 0.1328]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5017619729042053\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.2376,  0.1645]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2076, 0.1303]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8998, 0.1002]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5862433314323425\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.8664,  0.0755]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2849, 0.1434]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9827, 0.0173]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6468139290809631\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.5413, 0.9615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4712, 0.0575]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2238, 0.7762]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7182990312576294\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.4108, 0.4626]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2174, 0.1110]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4337, 0.5663]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.714623212814331\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2232, 0.2646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1596, 0.0932]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5335, 0.4665]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6235831379890442\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1753, -0.0376]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2427, 0.1650]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8787, 0.1213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5906153917312622\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.0243, 0.3008]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1662, 0.1090]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6224, 0.3776]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5858752131462097\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4003, 0.4176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1576, 0.1212]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3952, 0.6048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49987199902534485\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.2523, 1.3598]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2845, 0.0971]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0432, 0.9568]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6356090903282166\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1010,  0.1830]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2954, 0.1794]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7833, 0.2167]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5673549175262451\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3172, 0.4787]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1716, 0.0948]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5342, 0.4658]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4940161108970642\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7105, 0.5663]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1050, 0.1166]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2710, 0.7290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.673668622970581\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-2.1053, -0.1668]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5001, 0.2512]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9924e-01, 7.6251e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5556128621101379\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.5937, 0.8170]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2595, 0.1003]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3585, 0.6415]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4814772307872772\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.4113, 0.5681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1270, 0.0791]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4226, 0.5774]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4447705149650574\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3123,  0.0309]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1676, 0.1367]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9115, 0.0885]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8041365742683411\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.0595, -0.1073]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2253, 0.1726]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9931, 0.0069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5332247614860535\n","Ground truth y: tensor([-1.2685], device='cuda:0')\n","Predicted mu: tensor([[-1.0653,  0.1002]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2523, 0.1695]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9896, 0.0104]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4566150903701782\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.5649, -0.3173]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1816, 0.2191]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9988, 0.0012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5384274125099182\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.7474, -0.1452]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1607, 0.1676]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9729, 0.0271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4221062660217285\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.3686, -0.1522]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1304, 0.1524]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9283, 0.0717]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6582850217819214\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2687, 0.5144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3165, 0.1295]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4462, 0.5538]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45940494537353516\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6879, -0.1558]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1565, 0.1949]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9782, 0.0218]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5332050323486328\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-2.0454,  0.1423]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1712, 0.1226]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6600578427314758\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.6251, -0.0634]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1393, 0.1577]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9512, 0.0488]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5665094256401062\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.5374,  0.2109]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1264, 0.1039]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8758, 0.1242]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.546134352684021\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.1980,  0.4606]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2451, 0.0837]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6519, 0.3481]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40212035179138184\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3144, 0.7882]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2264, 0.0722]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3152, 0.6848]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5214146971702576\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.4010, 1.6129]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5404, 0.1480]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0873, 0.9127]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6220110058784485\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0632, 0.4844]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2077, 0.0869]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5119, 0.4881]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5463932156562805\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0890, 0.5468]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2362, 0.0895]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4190, 0.5810]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.447124719619751\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0815,  0.3699]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1934, 0.1205]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6328, 0.3672]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33526676893234253\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.2539,  0.1414]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1755, 0.1077]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7881, 0.2119]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.76670902967453\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1480, 0.4152]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2129, 0.0853]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4110, 0.5890]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7081507444381714\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8552, 0.8611]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2494, 0.0754]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1583, 0.8417]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4969993233680725\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.6456, -0.0965]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1552, 0.2245]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9972, 0.0028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4458349347114563\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3362, 0.2917]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1822, 0.0711]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3072, 0.6928]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44875508546829224\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1324, 0.2561]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2528, 0.0849]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4337, 0.5663]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4911494553089142\n","Ground truth y: tensor([-2.7236], device='cuda:0')\n","Predicted mu: tensor([[-2.4455, -0.0358]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1788, 0.2275]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9950e-01, 4.9872e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47847405076026917\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.7916, 0.4902]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2290, 0.1274]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1368, 0.8632]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6285486221313477\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6149, -0.0819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2140, 0.1857]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8967, 0.1033]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8612771034240723\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3728, -0.0607]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2255, 0.1074]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7510, 0.2490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7185444235801697\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1334, 0.3377]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2506, 0.1184]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2699, 0.7301]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44810065627098083\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0412, 0.8877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2557, 0.0883]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1077, 0.8923]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4226674735546112\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0893,  0.1419]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2218, 0.0854]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5082, 0.4918]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5735588669776917\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.2260,  0.1384]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2531, 0.1490]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5779, 0.4221]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6081247925758362\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.8698,  0.0596]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0967, 0.1723]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9964, 0.0036]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6690577864646912\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.0119,  0.5662]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2140, 0.0785]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3842, 0.6158]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7329654693603516\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0893,  0.4117]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2214, 0.0768]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3694, 0.6306]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46342983841896057\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-1.3307, -0.0660]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1530, 0.2645]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9871, 0.0129]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5302216410636902\n","Ground truth y: tensor([0.0169], device='cuda:0')\n","Predicted mu: tensor([[0.0071, 0.5216]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2545, 0.0997]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3559, 0.6441]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5234532952308655\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4518, 0.6382]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2280, 0.1400]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2457, 0.7543]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5149255990982056\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.3786,  0.0531]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2080, 0.1497]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6486, 0.3514]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5647584795951843\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8291, 0.8848]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3142, 0.1000]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2837, 0.7163]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5572820901870728\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.2635, 0.9672]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3155, 0.1353]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2647, 0.7353]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6177157163619995\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.7568,  0.0712]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1771, 0.2994]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9870, 0.0130]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4631042182445526\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0299,  0.1063]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1996, 0.2310]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4544, 0.5456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5449049472808838\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6704, 0.4809]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2110, 0.1699]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3739, 0.6261]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4956940710544586\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.7583,  0.0164]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1335, 0.3257]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9921, 0.0079]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5287598967552185\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.4794, 1.0615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2128, 0.1209]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2332, 0.7668]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5603654384613037\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.8193,  0.2199]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1218, 0.1488]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9321, 0.0679]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49566349387168884\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4873,  0.4342]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1926, 0.1437]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8287, 0.1713]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7337334156036377\n","Ground truth y: tensor([-2.3113], device='cuda:0')\n","Predicted mu: tensor([[-1.7842, -0.0305]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2687, 0.3103]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9943, 0.0057]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43507257103919983\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.9785, 0.9969]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1692, 0.1226]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3288, 0.6712]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4352772533893585\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4810, 1.3249]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1101, 0.0863]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2353, 0.7647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.592906653881073\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.5688, 0.9213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1746, 0.0780]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3898, 0.6102]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43245232105255127\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4772, 0.6536]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1476, 0.1316]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3791, 0.6209]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3428904116153717\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.8231, -0.2910]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.4174]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9716, 0.0284]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.680446207523346\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.2680,  0.0619]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1329, 0.1352]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8203, 0.1797]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4634297490119934\n","Ground truth y: tensor([-2.1658], device='cuda:0')\n","Predicted mu: tensor([[-1.9531, -0.0338]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3292, 0.3027]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9942, 0.0058]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.671980082988739\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.1575, -0.1256]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1415, 0.2296]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9824, 0.0176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3607560098171234\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4396, 0.7605]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1413, 0.0523]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2708, 0.7292]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48676174879074097\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2346, 0.4111]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2478, 0.1227]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4484, 0.5516]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4780893921852112\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.5445,  0.2188]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1489, 0.1256]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8163, 0.1837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4865070581436157\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.3465, 1.3300]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2152, 0.0599]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1489, 0.8511]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6276294589042664\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.6725,  0.1212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1449, 0.1396]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8788, 0.1212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.507725179195404\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3347, 0.6863]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2132, 0.0475]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3727, 0.6273]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5217455625534058\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-1.0552,  0.1489]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1072, 0.1230]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9600, 0.0400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0128443241119385\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.3205, 1.0090]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1743, 0.0609]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2440, 0.7560]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7455466389656067\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2898, -0.0147]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2538, 0.1502]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6959, 0.3041]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49203094840049744\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1005,  0.1345]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3120, 0.0967]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5532, 0.4468]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6152808666229248\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.4813,  0.2517]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1756, 0.1247]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9660, 0.0340]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5060595273971558\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.0247, -0.0593]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2058, 0.1578]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9482, 0.0518]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6544767022132874\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.6688, -0.2632]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1863, 0.2455]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9924, 0.0076]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6427475810050964\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.1538, 0.4826]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3344, 0.0537]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4608, 0.5392]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5445924401283264\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2621, 0.4653]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3188, 0.0747]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4272, 0.5728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6012507677078247\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4540, 0.6302]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3338, 0.0527]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3690, 0.6310]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6307432055473328\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3370,  0.0285]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4194, 0.1265]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6104, 0.3896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5621023774147034\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.1949, 1.0544]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3276, 0.0849]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5111, 0.4889]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42446908354759216\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4574, 0.5391]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2463, 0.0544]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3988, 0.6012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5857203602790833\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4825, -0.0568]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3253, 0.1404]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7999, 0.2001]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47154778242111206\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.2161, 1.3629]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5467, 0.1264]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4824, 0.5176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5839009881019592\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1335,  0.0877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3207, 0.0942]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5243, 0.4757]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5434439182281494\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.2573, 0.6333]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2484, 0.0584]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3949, 0.6051]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7272526025772095\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3575, 0.6173]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2493, 0.0804]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4127, 0.5873]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45154809951782227\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.0966, -0.2226]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1783, 0.1768]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9524, 0.0476]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43850111961364746\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.1381, 0.4881]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2186, 0.0812]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4196, 0.5804]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.652795672416687\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.2753, 1.1802]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2973, 0.0922]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3900, 0.6100]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5299538373947144\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0624, 1.1027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2840, 0.1051]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2895, 0.7105]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47760236263275146\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6098,  0.1875]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1926, 0.1147]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7982, 0.2018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5044838786125183\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[1.2419, 1.0210]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2579, 0.1163]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2857, 0.7143]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36224183440208435\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.4031,  0.0159]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2635, 0.1925]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7024, 0.2976]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3605138659477234\n","Ground truth y: tensor([-2.7478], device='cuda:0')\n","Predicted mu: tensor([[-1.9878, -0.0136]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1585, 0.2802]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9959, 0.0041]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3671756386756897\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.1854, -0.2198]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1490, 0.2521]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9714, 0.0286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5198588967323303\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-2.2661, -0.4360]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0602, 0.2946]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9938e-01, 6.1825e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4066275358200073\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.1108,  0.2355]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1585, 0.1109]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5063, 0.4937]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5652489066123962\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1834,  0.4869]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1868, 0.0924]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5015, 0.4985]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5096786618232727\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.8396, 0.7034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1471, 0.1151]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2022, 0.7978]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34008097648620605\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.6753, 2.1459]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4810, 0.1239]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0677, 0.9323]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3357667326927185\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0384, 0.1794]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1935, 0.1996]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4212, 0.5788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4672842025756836\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2430,  0.3292]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2005, 0.1219]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5730, 0.4270]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3533322513103485\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0090,  0.1142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1638, 0.2047]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4902, 0.5098]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5643438696861267\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.6844,  0.0224]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2374, 0.0935]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9588, 0.0412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2659721374511719\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.9016, 1.8078]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3623, 0.1269]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0439, 0.9561]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5104339122772217\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7473, 0.7739]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0964, 0.0838]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0944, 0.9056]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31388819217681885\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8916, -0.2438]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1319, 0.2386]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9500, 0.0500]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42094355821609497\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[1.3382, 1.0311]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1867, 0.0757]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1266, 0.8734]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5217100977897644\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2558, 0.2401]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1247, 0.1276]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3186, 0.6814]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7450394034385681\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[-0.0190,  0.3073]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1599, 0.1597]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3874, 0.6126]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49988389015197754\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2073, -0.0263]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2062, 0.2369]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6095, 0.3905]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6266705393791199\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4086,  0.2973]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1329, 0.1159]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7508, 0.2492]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5196384787559509\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2790, 0.7156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3387, 0.1147]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2723, 0.7277]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4860323965549469\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2400, 0.6033]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1733, 0.1038]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2611, 0.7389]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5328463912010193\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5786, -0.1492]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2328, 0.2016]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8980, 0.1020]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45085158944129944\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3505, 0.6400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1956, 0.1147]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2609, 0.7391]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9973247051239014\n","Epoch 02 | Train Loss: 0.5579 | Valid Loss: 0.5212 | LR: 0.001000\n","✅ Validation loss giảm (0.607221 → 0.521181). Saving model ...\n"]},{"name":"stderr","output_type":"stream","text":["  4%|▍         | 2/50 [07:22<2:55:18, 219.14s/it]"]},{"name":"stdout","output_type":"stream","text":["Ground truth y: tensor([-0.9532], device='cuda:0')\n","Predicted mu: tensor([[-0.4019, -0.0400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2638, 0.1670]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8074, 0.1926]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3838125169277191\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.7643, -0.1695]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1895, 0.1487]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9244, 0.0756]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6493302583694458\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.1241, 0.7087]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2393, 0.0832]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4006, 0.5994]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5825142860412598\n","Ground truth y: tensor([-1.8505], device='cuda:0')\n","Predicted mu: tensor([[-1.7373, -0.2304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2374, 0.2247]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9932, 0.0068]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7936031222343445\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.2739,  0.2048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2386, 0.1320]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5680, 0.4320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49828141927719116\n","Ground truth y: tensor([-0.2984], device='cuda:0')\n","Predicted mu: tensor([[-0.2027,  0.3563]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2405, 0.0897]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5801, 0.4199]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6188334822654724\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.7060, -0.1782]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2052, 0.1446]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9104, 0.0896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.478235125541687\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0744,  0.9431]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6810, 0.0248]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5396, 0.4604]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6152403354644775\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-1.6305,  0.1781]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3699, 0.1651]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9872, 0.0128]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8042576909065247\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0313, 0.6348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1689, 0.0725]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2330, 0.7670]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7564824223518372\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.0144, 0.8392]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1881, 0.0574]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2479, 0.7521]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5868533253669739\n","Ground truth y: tensor([0.7687], device='cuda:0')\n","Predicted mu: tensor([[0.2738, 0.8626]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2484, 0.0528]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2252, 0.7748]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5253300070762634\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.1604, -0.0219]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1866, 0.1232]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9868, 0.0132]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4494086503982544\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2638,  0.0826]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1689, 0.1327]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6404, 0.3596]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6543506979942322\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5974, -0.1855]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2066, 0.1690]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8403, 0.1597]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7913839817047119\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1100,  0.3421]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1904, 0.0756]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3674, 0.6326]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5459010601043701\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1336, 0.6600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1798, 0.0591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2469, 0.7531]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5626737475395203\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.0986, 0.4457]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3607, 0.1095]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2497, 0.7503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38867729902267456\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3024,  0.0705]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1720, 0.1072]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5385, 0.4615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.640476644039154\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2869,  0.2465]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2194, 0.1233]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4706, 0.5294]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4428969621658325\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5704, -0.0304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1514, 0.1153]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7724, 0.2276]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45882242918014526\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-2.0439, -0.3183]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1871, 0.2468]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6579961180686951\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.0879,  0.5772]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1863, 0.0796]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3187, 0.6813]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4052462577819824\n","Ground truth y: tensor([1.1810], device='cuda:0')\n","Predicted mu: tensor([[0.8888, 1.3080]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4850, 0.1703]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0754, 0.9246]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5587571263313293\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4290,  0.1540]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1624, 0.1133]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7038, 0.2962]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5218061208724976\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.6304, -0.1523]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1175, 0.1560]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9211, 0.0789]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3894827663898468\n","Ground truth y: tensor([-0.3469], device='cuda:0')\n","Predicted mu: tensor([[-0.2955,  0.1493]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1930, 0.1288]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6880, 0.3120]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7495413422584534\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.7619, -0.3324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1633, 0.2791]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9653, 0.0347]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4392348527908325\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3860, 0.8828]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1923, 0.0941]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1130, 0.8870]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4419926702976227\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3027,  0.1561]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1210, 0.0797]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6945, 0.3055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6660805344581604\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4349, 0.7901]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1781, 0.0855]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1194, 0.8806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4870451092720032\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0522, 0.5339]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1498, 0.0732]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3080, 0.6920]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4338326156139374\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.8506, -0.1106]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1844, 0.1578]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9505, 0.0495]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7001339793205261\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.7077, -0.1602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1405, 0.1428]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9288, 0.0712]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40563198924064636\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6915, 0.7365]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2181, 0.1130]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1080, 0.8920]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3819889426231384\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.9326, 1.4552]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5665, 0.1041]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0427, 0.9573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.792975664138794\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.6080, -0.4231]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1349, 0.3739]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9969, 0.0031]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5342414379119873\n","Ground truth y: tensor([0.7687], device='cuda:0')\n","Predicted mu: tensor([[-0.0355,  0.3021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1963, 0.1456]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4352, 0.5648]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5607472062110901\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4824, -0.0948]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1974, 0.2636]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8696, 0.1304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5984542369842529\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-1.8335, -0.3884]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2301, 0.3283]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5279262065887451\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.3240, -0.0321]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2297, 0.1868]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9914, 0.0086]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6998438835144043\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.0515, -0.3741]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2387, 0.2361]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9918, 0.0082]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5389432311058044\n","Ground truth y: tensor([1.4962], device='cuda:0')\n","Predicted mu: tensor([[1.1212, 1.9374]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[1.0088, 0.4214]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0282, 0.9718]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5485501289367676\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0279, -0.2192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2103, 0.2884]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9809, 0.0191]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6108066439628601\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0735,  0.2603]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1903, 0.1853]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5785, 0.4215]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6040264368057251\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.1375, 0.3615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1813, 0.1815]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4575, 0.5425]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4888593256473541\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1309, 0.3908]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1911, 0.1357]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4312, 0.5688]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5044945478439331\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0868, 0.2055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2031, 0.2049]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4564, 0.5436]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5279237031936646\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2446, -0.1109]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1813, 0.2158]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7939, 0.2061]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4288327693939209\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.7346, -0.0676]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2186, 0.1927]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9531, 0.0469]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9480482339859009\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.1822, 1.4278]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.8270, 0.3903]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0569, 0.9431]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48704993724823\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8294, 0.9208]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2694, 0.1101]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1611, 0.8389]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39717012643814087\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6393, 0.8286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2356, 0.1001]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1845, 0.8155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5389274954795837\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.3263, 0.5412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2003, 0.0848]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2750, 0.7250]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5855252742767334\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0008,  0.3354]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1894, 0.0978]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5697, 0.4303]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5160133838653564\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1952, 0.6284]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1995, 0.0594]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3195, 0.6805]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5421298742294312\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0664, 0.2433]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1914, 0.0935]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4966, 0.5034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4731210470199585\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.9172, -0.1725]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1915, 0.1667]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9979, 0.0021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5990750193595886\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.0886, 0.6094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5754, 0.1406]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3111, 0.6889]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5129780173301697\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1116, 0.3501]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1880, 0.0875]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4691, 0.5309]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47841522097587585\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.5754,  0.1922]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2577, 0.1221]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9919, 0.0081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5223973989486694\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[0.3328, 0.5415]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2250, 0.0852]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2183, 0.7817]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4573442041873932\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.0352,  0.2425]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2374, 0.1209]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6539, 0.3461]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41971561312675476\n","Ground truth y: tensor([-2.6508], device='cuda:0')\n","Predicted mu: tensor([[-2.0869, -0.0107]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2337, 0.1118]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9913e-01, 8.7471e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5032216906547546\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.2535,  0.0642]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1422, 0.1271]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8176, 0.1824]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6672554612159729\n","Ground truth y: tensor([-2.3113], device='cuda:0')\n","Predicted mu: tensor([[-1.7715,  0.0504]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3010, 0.1953]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9989, 0.0011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5052039623260498\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3632, 0.6183]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1680, 0.1044]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2632, 0.7368]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4805477261543274\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8704, 0.8837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2033, 0.0934]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1293, 0.8707]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3799382150173187\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.5507,  0.4541]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2661, 0.1488]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8313, 0.1687]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6338092684745789\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.0359,  0.4429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1795, 0.1038]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5239, 0.4761]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6483551859855652\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3237,  0.2973]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1654, 0.1041]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7899, 0.2101]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47730889916419983\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0235, 0.4210]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1710, 0.1052]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4585, 0.5415]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5357989072799683\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1846,  0.2417]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1875, 0.1719]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6645, 0.3355]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39076071977615356\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1788, 0.5234]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2046, 0.1241]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3583, 0.6417]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3392442464828491\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0158, 0.2578]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1417, 0.1263]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5710, 0.4290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4641766846179962\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.3353, -0.2656]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1363, 0.2039]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9978, 0.0022]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6292487978935242\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0668,  0.3412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1816, 0.1166]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5170, 0.4830]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5824860334396362\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.7415,  0.1362]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1509, 0.1195]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9244, 0.0756]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37988850474357605\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-0.5997, -0.1037]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1289, 0.1744]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9475, 0.0525]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40142396092414856\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0106,  0.3006]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1721, 0.1276]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5391, 0.4609]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47210150957107544\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1579,  0.1877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1614, 0.1086]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7945, 0.2055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3921387791633606\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2625,  0.3799]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1552, 0.0998]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8424, 0.1576]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5109696984291077\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1619,  0.3012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1837, 0.1593]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7953, 0.2047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7418944239616394\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.6099, 1.7847]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4342, 0.2029]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0269, 0.9731]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45105209946632385\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1946,  0.2329]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2266, 0.1661]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8639, 0.1361]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6062785983085632\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.2678,  0.1917]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1531, 0.1441]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8473, 0.1527]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5679155588150024\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[2.0898, 1.2343]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3004, 0.1535]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0434, 0.9566]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4073856472969055\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7803, 0.7134]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1870, 0.1032]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1946, 0.8054]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38923999667167664\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.4419, 0.9416]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2801, 0.1051]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0808, 0.9192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5358473658561707\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.6091, 0.7414]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1059, 0.0981]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1123, 0.8877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5970127582550049\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.4843, -0.0791]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2239, 0.1114]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9936, 0.0064]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48831167817115784\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.0097,  0.0411]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1939, 0.0920]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9710, 0.0290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4452110230922699\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-1.2957,  0.1409]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2675, 0.1195]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9773, 0.0227]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4591986835002899\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5550, 0.4400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1600, 0.1071]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3729, 0.6271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35318976640701294\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[2.0546, 1.3571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3734, 0.3190]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0638, 0.9362]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33524414896965027\n","Ground truth y: tensor([2.2965], device='cuda:0')\n","Predicted mu: tensor([[1.6868, 1.3716]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.7873, 0.2754]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0724, 0.9276]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5096727013587952\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0769,  0.1216]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1175, 0.1059]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7007, 0.2993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4399777948856354\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.4527, 1.2111]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5750, 0.1709]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1257, 0.8743]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9444775581359863\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0935, 0.3966]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1307, 0.1019]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5969, 0.4031]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3376011848449707\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.6817, -0.0268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1220, 0.1292]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9703, 0.0297]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5164052248001099\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6705, 0.9471]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1445, 0.0570]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3446, 0.6554]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7701181173324585\n","Ground truth y: tensor([-0.0559], device='cuda:0')\n","Predicted mu: tensor([[0.0442, 0.4845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1373, 0.0789]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7139, 0.2861]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4854690134525299\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0165, 1.0963]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2027, 0.1587]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3505, 0.6495]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7593855857849121\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.3229,  0.4383]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1831, 0.1089]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8365, 0.1635]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5257617831230164\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1150,  0.4533]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1766, 0.0706]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7638, 0.2362]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39617422223091125\n","Ground truth y: tensor([-2.3113], device='cuda:0')\n","Predicted mu: tensor([[-2.0955,  0.0757]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3021, 0.1639]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9988, 0.0012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4896428883075714\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1558, 0.7588]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2649, 0.1377]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6018, 0.3982]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5588961243629456\n","Ground truth y: tensor([-2.1900], device='cuda:0')\n","Predicted mu: tensor([[-1.7983,  0.2571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2928, 0.1294]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9952, 0.0048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49203211069107056\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.9887,  0.3773]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3110, 0.0941]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9954, 0.0046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6182824969291687\n","Ground truth y: tensor([2.0055], device='cuda:0')\n","Predicted mu: tensor([[1.6555, 1.4124]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1080, 0.1589]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3100, 0.6900]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4215702712535858\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1116, 0.5600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1982, 0.1028]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6290, 0.3710]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9750491976737976\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8074,  0.1050]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1760, 0.0865]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9687, 0.0313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4522409737110138\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2007, 0.5348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1831, 0.1031]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6418, 0.3582]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4326672852039337\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3552, 0.7905]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2378, 0.0798]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5423, 0.4577]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5131509304046631\n","Ground truth y: tensor([0.6232], device='cuda:0')\n","Predicted mu: tensor([[0.2388, 0.7280]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1869, 0.0739]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5263, 0.4737]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45872601866722107\n","Ground truth y: tensor([-1.2685], device='cuda:0')\n","Predicted mu: tensor([[-0.7316,  0.0857]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1569, 0.1130]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9532, 0.0468]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5114665627479553\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6679, 0.8334]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2454, 0.0980]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3858, 0.6142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5096403956413269\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.6277, -0.0485]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1179, 0.2141]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9982, 0.0018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4175857603549957\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3520,  0.1150]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1593, 0.0993]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8887, 0.1113]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5224073529243469\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.9461, 1.1793]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6403, 0.1838]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0954, 0.9046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3379199206829071\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0575,  0.2364]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1565, 0.0955]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7453, 0.2547]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49435076117515564\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.4399, -0.0099]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1103, 0.2531]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9973, 0.0027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4622519612312317\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1887,  0.3621]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1633, 0.0864]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7102, 0.2898]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44095170497894287\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.7471, -0.2130]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1331, 0.1532]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9914, 0.0086]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4368688762187958\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.1454,  0.1745]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1322, 0.1372]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8610, 0.1390]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39842548966407776\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.4070,  0.1407]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1116, 0.1237]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9319, 0.0681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6308063864707947\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.1975, 0.9774]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1966, 0.0642]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1770, 0.8230]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39670297503471375\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3456,  0.1955]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1443, 0.1278]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9054, 0.0946]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4427514672279358\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.2593, -0.2047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1228, 0.1810]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9971, 0.0029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5027525424957275\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0685,  0.2166]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1698, 0.0778]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8196, 0.1804]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7163740992546082\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.3743, 1.3397]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3551, 0.0530]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0575, 0.9425]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7317346930503845\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2482,  0.4045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2235, 0.1173]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7491, 0.2509]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44567474722862244\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.1011,  0.3479]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2722, 0.0600]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7866, 0.2134]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37899893522262573\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2401,  0.2490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2359, 0.0758]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8915, 0.1085]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44873473048210144\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.1557,  0.4268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2150, 0.1082]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7442, 0.2558]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3657454550266266\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2126, 0.5614]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2291, 0.0913]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5260, 0.4740]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5554879307746887\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4850,  0.2340]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1809, 0.1007]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8979, 0.1021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48335394263267517\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.4277,  0.1123]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2206, 0.0819]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9355, 0.0645]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44094324111938477\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.9830, 1.3501]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4593, 0.1291]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0360, 0.9640]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5271304845809937\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.3557,  0.3092]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2106, 0.0741]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8993, 0.1007]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.508955180644989\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.3003,  0.1303]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2059, 0.1254]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9303, 0.0697]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5038769841194153\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.2742, 1.2877]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6636, 0.1186]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0629, 0.9371]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6014650464057922\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.8702, 1.0085]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3960, 0.0805]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2388, 0.7612]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6636970043182373\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0206,  0.1455]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2132, 0.0833]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8080, 0.1920]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5739243030548096\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.2959, -0.0053]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2065, 0.1104]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9313, 0.0687]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9845930337905884\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.0280,  0.1720]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2112, 0.0851]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9890, 0.0110]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49959173798561096\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-0.9288, -0.0523]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1556, 0.1245]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9926, 0.0074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49461042881011963\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.7809, -0.0887]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1604, 0.1222]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9831, 0.0169]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.476322740316391\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.6730,  0.0201]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1910, 0.0839]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9716, 0.0284]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4776887893676758\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[1.7608, 0.8135]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.7150, 0.1448]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0287, 0.9713]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.523003339767456\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.4899,  0.0464]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2071, 0.1089]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9333, 0.0667]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3874841630458832\n","Ground truth y: tensor([2.0540], device='cuda:0')\n","Predicted mu: tensor([[2.3515, 1.6806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5368, 0.4615]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0112, 0.9888]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48409488797187805\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.2894, 0.4119]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1985, 0.0731]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5564, 0.4436]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4639177918434143\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.6104, -0.2003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1395, 0.1760]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9983, 0.0017]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39309853315353394\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0697,  0.3986]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2226, 0.0663]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6979, 0.3021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34992292523384094\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0819, 0.3585]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2459, 0.1029]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6359, 0.3641]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6877196431159973\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.7141,  0.0427]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2120, 0.1274]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9586, 0.0414]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4662542939186096\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-2.0827,  0.3873]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1624, 0.1170]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9940, 0.0060]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36856481432914734\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1586,  0.2851]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2716, 0.1260]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6917, 0.3083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.53395676612854\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5245, 0.7232]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1698, 0.0797]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2981, 0.7019]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5038790702819824\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2035, 0.5856]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1633, 0.0651]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4973, 0.5027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5376150608062744\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2254,  0.3010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2046, 0.0782]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7692, 0.2308]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31351861357688904\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.8746, -0.2648]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1325, 0.1252]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9934, 0.0066]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5159097909927368\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.5321, -0.2114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1393, 0.1616]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9718, 0.0282]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5080183744430542\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.5683,  0.3257]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1359, 0.0734]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9023, 0.0977]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4501802921295166\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2517,  0.0857]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1569, 0.0772]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8757, 0.1243]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38816967606544495\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.8664, 1.4203]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3449, 0.2121]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0617, 0.9383]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3496268689632416\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.1769,  0.1999]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1144, 0.1112]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9819, 0.0181]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4764629900455475\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1864,  0.3077]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1931, 0.0596]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8451, 0.1549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47722673416137695\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.5034, -0.1190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1025, 0.1345]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3790852129459381\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3794, 0.7671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1650, 0.0584]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2664, 0.7336]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35731926560401917\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1148,  0.2288]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1209, 0.0840]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7767, 0.2233]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4502083361148834\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.6590, -0.0838]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1539, 0.0890]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9836, 0.0164]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5572130084037781\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3833, 0.9268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1401, 0.0614]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2566, 0.7434]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33852455019950867\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1024, 0.5194]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1136, 0.0730]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4917, 0.5083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.529375433921814\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.7560,  0.3117]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1492, 0.0888]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9667, 0.0333]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37705591320991516\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8787, 1.2309]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2016, 0.0956]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1172, 0.8828]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45104673504829407\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1987, 0.7691]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1239, 0.0680]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3680, 0.6320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4480980634689331\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.6628, 1.0903]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2250, 0.0946]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1447, 0.8553]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5227759480476379\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.8659, 0.9097]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1367, 0.0788]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1733, 0.8267]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5261881947517395\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3723, 0.6521]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1025, 0.0681]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3370, 0.6630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3757692873477936\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.0683, 1.1944]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3841, 0.1456]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0788, 0.9212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3352738320827484\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.6922, -0.0943]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0962, 0.0970]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9989, 0.0011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5786052346229553\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1259, 0.4362]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1673, 0.0638]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4370, 0.5630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46144819259643555\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.3354, -0.1801]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1182, 0.1803]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9963, 0.0037]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35361912846565247\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.9591, -0.2833]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1181, 0.1133]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9953, 0.0047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35847172141075134\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.2465, -0.0235]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1286, 0.1608]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9927, 0.0073]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5850310921669006\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3850, 0.6044]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1018, 0.0525]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4774, 0.5226]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3069341778755188\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3608, 0.6451]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1859, 0.0853]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3620, 0.6380]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4622339904308319\n","Ground truth y: tensor([-1.8505], device='cuda:0')\n","Predicted mu: tensor([[-1.0263,  0.1174]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1661, 0.1117]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9806, 0.0194]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6751846075057983\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2886, 0.5188]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1261, 0.0590]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4404, 0.5596]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5122929811477661\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2176,  0.2209]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1360, 0.0733]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8502, 0.1498]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4409371018409729\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.4153,  0.1185]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1387, 0.0660]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8986, 0.1014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49947836995124817\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.2886, 0.5024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1462, 0.0888]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4627, 0.5373]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33060401678085327\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1674,  0.2812]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1280, 0.0722]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7734, 0.2266]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39392518997192383\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3459, 0.6173]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1253, 0.0723]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4500, 0.5500]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40622204542160034\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[1.0230, 0.9398]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2234, 0.1222]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1687, 0.8313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.472693532705307\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3810, 0.6613]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2520, 0.1372]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2639, 0.7361]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.002102973870933056\n","Epoch 03 | Train Loss: 0.5092 | Valid Loss: 0.4324 | LR: 0.001000\n","✅ Validation loss giảm (0.521181 → 0.432371). Saving model ...\n"]},{"name":"stderr","output_type":"stream","text":["  6%|▌         | 3/50 [10:54<2:49:06, 215.89s/it]"]},{"name":"stdout","output_type":"stream","text":["Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.2430,  0.0257]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1867, 0.1269]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9947, 0.0053]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47959938645362854\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.2879, 1.0596]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2172, 0.0776]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1134, 0.8866]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3591712415218353\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5292, 0.7293]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1954, 0.0598]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2858, 0.7142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4698559045791626\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7894, 0.9355]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0966, 0.0425]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2733, 0.7267]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36757615208625793\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.6315,  0.1472]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1278, 0.1012]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9957, 0.0043]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39473381638526917\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.1221, 0.4492]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2027, 0.0643]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5234, 0.4766]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39074739813804626\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.1912, -0.1527]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0992, 0.0925]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9961, 0.0039]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31277620792388916\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3160, 0.6845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1731, 0.0548]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3738, 0.6262]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44823768734931946\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.9033, 0.8551]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1040, 0.0417]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2775, 0.7225]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4362642765045166\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.9967, 1.5545]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3477, 0.1136]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0728, 0.9272]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4348418116569519\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.0883,  0.1271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1511, 0.0764]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8222, 0.1778]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4764491021633148\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7597, 0.6517]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0976, 0.0545]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2942, 0.7058]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47347915172576904\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.5349, 0.5786]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0912, 0.0620]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3680, 0.6320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3385116457939148\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-0.6487,  0.2101]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1536, 0.1080]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9553, 0.0447]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3586517572402954\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.0271,  0.4318]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1827, 0.0925]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6108, 0.3892]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5667181015014648\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0244, 0.4487]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1251, 0.0629]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6363, 0.3637]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4309019148349762\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0314, 0.7438]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0993, 0.0878]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2059, 0.7941]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44463229179382324\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3122, 0.5863]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1169, 0.0608]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3933, 0.6067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41020599007606506\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[0.8007, 0.7846]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3030, 0.1337]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1404, 0.8596]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5117961168289185\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0294,  0.4987]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1599, 0.0652]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7315, 0.2685]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4492419958114624\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2572, 0.6051]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1210, 0.0513]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4170, 0.5830]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5563969612121582\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0301, 0.5086]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1209, 0.0583]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6192, 0.3808]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40110647678375244\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6587, 0.8001]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1697, 0.1293]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2871, 0.7129]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4147820472717285\n","Ground truth y: tensor([0.8899], device='cuda:0')\n","Predicted mu: tensor([[0.8450, 0.9242]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1197, 0.0838]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2844, 0.7156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4302614629268646\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0463,  0.5084]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1198, 0.0606]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7454, 0.2546]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4995708763599396\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.5721, 1.3864]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1223, 0.1164]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0787, 0.9213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3161875605583191\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.7759,  0.2094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2477, 0.1375]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9976, 0.0024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3965458571910858\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6000, 0.7551]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1164, 0.0985]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3403, 0.6597]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38739630579948425\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3808, 0.6694]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1424, 0.0912]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4671, 0.5329]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4492616355419159\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[0.2557, 0.5495]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0780, 0.0668]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6497, 0.3503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3478274643421173\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.2429, 0.6324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1020, 0.0760]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6307, 0.3693]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4739527106285095\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3316, 0.5558]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0913, 0.0440]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5167, 0.4833]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5551406145095825\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.7831, -0.0728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1252, 0.0959]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9920, 0.0080]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.26407212018966675\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.8346,  0.1441]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1400, 0.1345]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9978, 0.0022]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4475144147872925\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0470,  0.2711]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1320, 0.0559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8582, 0.1418]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4775281250476837\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[2.6739, 1.6310]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1921, 0.4366]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0093, 0.9907]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5741455554962158\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.4632, -0.1408]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0876, 0.1135]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9929e-01, 7.0834e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5555092692375183\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3042, 0.6986]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1834, 0.0536]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4685, 0.5315]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4307626485824585\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6274,  0.1537]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1489, 0.0749]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9839, 0.0161]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2881667912006378\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.8968,  0.2923]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0962, 0.1656]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9972, 0.0028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41408616304397583\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.7524,  0.1164]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0714, 0.1287]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9989, 0.0011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5334497094154358\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.0738, 0.5957]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2028, 0.0418]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6317, 0.3683]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.342379629611969\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9590, 0.9730]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1314, 0.0762]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3079, 0.6921]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4402923583984375\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7212, 0.8399]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1779, 0.0507]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3794, 0.6206]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49709174036979675\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.8564,  0.3043]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1299, 0.0851]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9705, 0.0295]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2803441882133484\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[-0.7319,  0.1351]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1131, 0.0997]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9747, 0.0253]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44233837723731995\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0368, 0.4467]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1910, 0.0680]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7739, 0.2261]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2154773324728012\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.6303, -0.0093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1045, 0.1613]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9984, 0.0016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49605792760849\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.1942, 0.5729]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1591, 0.0512]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4656, 0.5344]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4473118484020233\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7141, 0.7601]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1035, 0.0443]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3967, 0.6033]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5877372026443481\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3529, 0.5695]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1460, 0.0402]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5907, 0.4093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5500931739807129\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8974, 0.7657]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1055, 0.0475]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3314, 0.6686]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6138277053833008\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.6322,  0.2969]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1851, 0.0724]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9714, 0.0286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6512193083763123\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8013, 0.8833]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0988, 0.0404]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4089, 0.5911]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3465604782104492\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4596, 0.7180]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1512, 0.0792]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5789, 0.4211]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5721896886825562\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2224, 0.6171]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1526, 0.0296]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7021, 0.2979]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5607399344444275\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8984, 1.1347]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1074, 0.0446]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4029, 0.5971]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47977885603904724\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.5997,  0.1036]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1836, 0.0845]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9985, 0.0015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34776774048805237\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.8622,  0.1582]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1820, 0.0553]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9886, 0.0114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.371987909078598\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1238, 0.6578]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1900, 0.0606]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6999, 0.3001]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5139967799186707\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4406, 0.7229]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1474, 0.0358]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6145, 0.3855]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4635387063026428\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.9889,  0.0652]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1785, 0.0764]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9908, 0.0092]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5286979675292969\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3594,  0.3466]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1680, 0.0795]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8858, 0.1142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2598841190338135\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0256, 0.5077]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1957, 0.0622]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6844, 0.3156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39357060194015503\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2372, 0.5772]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1987, 0.0620]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6588, 0.3412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3796154260635376\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.2782, 0.5968]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2079, 0.0478]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5794, 0.4206]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6760160326957703\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6218, 0.8769]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1705, 0.0325]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3716, 0.6284]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3802885115146637\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.1568, 0.7257]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1902, 0.0533]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5904, 0.4096]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.428223192691803\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.5677, 0.7884]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1435, 0.0411]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4100, 0.5900]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4643253982067108\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.4569, 1.6155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2602, 0.1398]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0539, 0.9461]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4569145739078522\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.8093, 0.8039]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1658, 0.0602]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2768, 0.7232]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48209622502326965\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.6084, -0.2981]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.0741]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9926e-01, 7.4473e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43117326498031616\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5457, 0.7160]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0946, 0.0202]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4810, 0.5190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4778713881969452\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.5112, 1.6571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2687, 0.1419]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0707, 0.9293]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38538801670074463\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.0793, -0.0259]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1370, 0.0506]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9962, 0.0038]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4694768488407135\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6512, 0.8138]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1067, 0.0411]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3398, 0.6602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34969279170036316\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3729, 0.6013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1337, 0.0325]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4875, 0.5125]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49994173645973206\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2431, 0.5192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1271, 0.0486]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5984, 0.4016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4905736744403839\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7185, 0.7805]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1210, 0.0318]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3371, 0.6629]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38562461733818054\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3049, 0.5500]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1024, 0.0268]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5590, 0.4410]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3860260844230652\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.4662, -0.0930]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1225, 0.0679]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9914e-01, 8.6386e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4368915557861328\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8601,  0.0029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1169, 0.0494]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9932, 0.0068]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4289828836917877\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1974, 0.6081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.0477]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6801, 0.3199]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24194295704364777\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5955, 0.8597]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3983, 0.1802]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2350, 0.7650]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5876753926277161\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-1.8462,  0.0326]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1334, 0.1448]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3146144449710846\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3608, 0.5883]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1348, 0.0649]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5798, 0.4202]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5079116821289062\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-2.5259,  0.2302]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1014, 0.1166]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9926e-01, 7.4174e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4631231129169464\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.1113,  0.5157]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2153, 0.0621]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9864, 0.0136]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46269798278808594\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.4502,  0.2310]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1305, 0.0872]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9595, 0.0405]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47944653034210205\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[0.9547, 1.3633]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3137, 0.1058]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0938, 0.9062]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5493637919425964\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6726, 1.0474]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1395, 0.0525]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2580, 0.7420]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4850275218486786\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.1100, 1.0075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1323, 0.0626]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1540, 0.8460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4673687517642975\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.0751, 0.6028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1673, 0.0605]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6918, 0.3082]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43085843324661255\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.6409,  0.1881]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1542, 0.2058]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9963, 0.0037]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5153748989105225\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.8582,  0.2185]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1320, 0.1107]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9880, 0.0120]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36441904306411743\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-1.0182,  0.1459]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1117, 0.1270]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9944, 0.0056]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4608030319213867\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4033,  0.4268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4106, 0.2601]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7794, 0.2206]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3630872368812561\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.4063, 1.2984]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4285, 0.0721]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0917, 0.9083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3403500020503998\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6099,  0.4375]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1204, 0.0662]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9462, 0.0538]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6890466809272766\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.2848,  0.1237]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1200, 0.1238]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9969, 0.0031]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43002280592918396\n","Ground truth y: tensor([-2.7478], device='cuda:0')\n","Predicted mu: tensor([[-2.2828,  0.3891]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1290, 0.1687]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9952, 0.0048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31105318665504456\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3872, 0.7145]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1787, 0.0844]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4514, 0.5486]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5061517953872681\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0223,  0.5460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1668, 0.0581]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7493, 0.2507]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.25093844532966614\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4348, 0.6456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1502, 0.0449]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5343, 0.4657]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4221753776073456\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6373, 0.6845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1607, 0.0434]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4049, 0.5951]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42299169301986694\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.7539,  0.0088]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1060, 0.1575]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9765, 0.0235]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46836310625076294\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1237, 0.3788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1154, 0.0501]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7902, 0.2098]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5936679244041443\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3661, 0.5234]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1607, 0.0354]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5182, 0.4818]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7222802042961121\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.1878,  0.2665]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1589, 0.0682]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7255, 0.2745]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49962180852890015\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.1350,  0.2569]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1963, 0.0589]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7547, 0.2453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3806903660297394\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5965, 0.6421]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1813, 0.0596]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3373, 0.6627]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3412776589393616\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.5688,  0.1046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1091, 0.1238]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9972, 0.0028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4972167909145355\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8813, 0.7412]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2681, 0.0558]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2468, 0.7532]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30418822169303894\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[2.0279, 1.5231]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3172, 0.1359]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0490, 0.9510]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3770306408405304\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.3117, -0.0941]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0888, 0.1099]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9980, 0.0020]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4804988205432892\n","Ground truth y: tensor([-0.9532], device='cuda:0')\n","Predicted mu: tensor([[-0.9472,  0.2582]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1195, 0.0807]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9784, 0.0216]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5202478766441345\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2808, 0.7268]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1741, 0.0458]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4986, 0.5014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4762272536754608\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3105,  0.4842]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2047, 0.0818]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8079, 0.1921]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44188404083251953\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1720, 0.6136]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2936, 0.0693]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5717, 0.4283]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4343740940093994\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.4086, -0.1717]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1319, 0.2084]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9904e-01, 9.6188e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3720588684082031\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7793, 1.1074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2484, 0.1387]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1442, 0.8558]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3837619125843048\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.4645, 0.6750]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1975, 0.0467]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3397, 0.6603]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7212459444999695\n","Ground truth y: tensor([-2.4325], device='cuda:0')\n","Predicted mu: tensor([[-1.9258,  0.0772]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1285, 0.1278]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9973, 0.0027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4906604290008545\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2010,  0.2271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1860, 0.1164]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8167, 0.1833]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3038841485977173\n","Ground truth y: tensor([-0.9532], device='cuda:0')\n","Predicted mu: tensor([[-0.6847, -0.0365]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1713, 0.1384]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9703, 0.0297]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6795678734779358\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1103,  0.2463]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1790, 0.0828]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7676, 0.2324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.640379786491394\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.9487, -0.0735]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1223, 0.1458]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9835, 0.0165]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4449236989021301\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.8771, -0.2751]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1350, 0.1380]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9903e-01, 9.7079e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6282476186752319\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4114, 1.0763]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2317, 0.1434]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0733, 0.9267]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7516131401062012\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[2.1448, 1.3747]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1290, 0.2520]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0540, 0.9460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3457283675670624\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.7110,  0.0654]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1637, 0.0970]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9638, 0.0362]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47698336839675903\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2360, 0.6393]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1636, 0.0769]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5381, 0.4619]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40344303846359253\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.5874, -0.0046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2067, 0.1554]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9943, 0.0057]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4149807393550873\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.1910, 0.5242]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1517, 0.0949]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5220, 0.4780]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.415387362241745\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3587,  0.2446]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1672, 0.1180]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8512, 0.1488]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5051378011703491\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2747, 0.6112]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1060, 0.1009]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5136, 0.4864]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3526128828525543\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.9792, -0.1172]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1656, 0.1739]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9787, 0.0213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3514222204685211\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3359, 0.6478]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1116, 0.0722]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5003, 0.4997]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3796599209308624\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.0518,  0.0980]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1309, 0.1374]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9806, 0.0194]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43487748503685\n","Ground truth y: tensor([-0.3469], device='cuda:0')\n","Predicted mu: tensor([[-1.2583,  0.0261]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1671, 0.2028]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9791, 0.0209]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34199684858322144\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.3118, 1.4537]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1777, 0.1230]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1571, 0.8429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.327346533536911\n","Ground truth y: tensor([-0.3711], device='cuda:0')\n","Predicted mu: tensor([[-0.7496, -0.1040]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1084, 0.2126]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9721, 0.0279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3866204619407654\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2098, 0.4647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1121, 0.0605]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5508, 0.4492]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34992969036102295\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3374, 0.6432]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1141, 0.0735]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4715, 0.5285]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5532768964767456\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-0.1911,  0.1095]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1527, 0.0971]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8556, 0.1444]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2667716145515442\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.8331, -0.0445]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1351, 0.1889]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9868, 0.0132]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4001210033893585\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0426, 0.2859]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1468, 0.0916]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6540, 0.3460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6565146446228027\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3997, 0.6551]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1426, 0.0841]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3570, 0.6430]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2830454111099243\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0585,  0.2595]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1181, 0.0819]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7366, 0.2634]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3438073694705963\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3426,  0.1023]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1263, 0.0965]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8945, 0.1055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29379934072494507\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.5104, 0.5411]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1355, 0.0735]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4811, 0.5189]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2436145544052124\n","Ground truth y: tensor([2.1510], device='cuda:0')\n","Predicted mu: tensor([[1.9297, 1.8220]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2642, 0.1666]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0303, 0.9697]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6426048278808594\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-2.1295,  0.1617]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0929, 0.1100]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9952, 0.0048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3836790919303894\n","Ground truth y: tensor([-0.3469], device='cuda:0')\n","Predicted mu: tensor([[-0.0305,  0.3124]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1305, 0.0687]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6943, 0.3057]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24743469059467316\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9159, 0.9550]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1031, 0.0310]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2455, 0.7545]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36485156416893005\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-2.6244,  0.1410]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0991, 0.0794]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9982, 0.0018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46998342871665955\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.8341, -0.1620]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0731, 0.1405]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9934e-01, 6.5759e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5013688206672668\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.1354, 0.6185]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1627, 0.0778]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5108, 0.4892]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4775376617908478\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0270,  0.2825]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1631, 0.0990]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6834, 0.3166]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24966813623905182\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0398,  0.4150]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1532, 0.0594]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6977, 0.3023]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2601519525051117\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.1893, 0.5443]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1389, 0.0592]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5925, 0.4075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29859456419944763\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3718, 0.6449]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1274, 0.0496]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4590, 0.5410]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5780770778656006\n","Ground truth y: tensor([0.2109], device='cuda:0')\n","Predicted mu: tensor([[0.6670, 0.7838]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1093, 0.0391]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2886, 0.7114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35339513421058655\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.4058,  0.0161]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1248, 0.0963]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9973, 0.0027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3678838610649109\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2221,  0.2375]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1447, 0.0861]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8486, 0.1514]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.323540061712265\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.6077, 0.6748]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2084, 0.0694]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4211, 0.5789]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37188491225242615\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2878, 0.5443]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1569, 0.0572]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5036, 0.4964]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30528008937835693\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1249, 0.4312]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1297, 0.0658]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6398, 0.3602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3844885528087616\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.3497, 1.3150]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2685, 0.0777]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1295, 0.8705]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5408636331558228\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.0756, 0.3114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1778, 0.1097]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6658, 0.3342]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38614457845687866\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7559, 0.8437]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1198, 0.0468]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3345, 0.6655]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6258962154388428\n","Ground truth y: tensor([-2.2870], device='cuda:0')\n","Predicted mu: tensor([[-2.1281,  0.1812]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1411, 0.1059]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41022002696990967\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2456,  0.2888]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1839, 0.1188]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7912, 0.2088]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29946640133857727\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.1285, 0.7490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2202, 0.0381]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5541, 0.4459]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4524190127849579\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4741, 0.4993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2017, 0.0810]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7924, 0.2076]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4025183320045471\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.7295,  0.5415]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4987, 0.1387]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9714, 0.0286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3557102680206299\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2814, 0.5141]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3136, 0.1365]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6087, 0.3913]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47796034812927246\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8732,  0.1290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1277, 0.1159]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9788, 0.0212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33863553404808044\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0395, 0.3916]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1228, 0.0468]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7329, 0.2671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4591107964515686\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3047, 0.6900]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1489, 0.0488]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4332, 0.5668]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3824118375778198\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.9054,  0.7781]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5031, 0.1742]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7299, 0.2701]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4740360379219055\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[-0.0133,  0.4681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1595, 0.0751]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6147, 0.3853]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3424956798553467\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5694, 0.7711]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0927, 0.0585]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3709, 0.6291]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33153966069221497\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3837, 0.8115]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1532, 0.0728]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3993, 0.6007]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31141021847724915\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3573, 0.7429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1192, 0.0485]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4351, 0.5649]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2566482722759247\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1943, 0.6062]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1580, 0.0697]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5596, 0.4404]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.486370712518692\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.4080,  0.1831]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1073, 0.0723]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9197, 0.0803]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5091520547866821\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1906,  0.4065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1212, 0.0652]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7828, 0.2172]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5289353728294373\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0199, 0.5079]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1234, 0.0770]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6006, 0.3994]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2797539234161377\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.5485,  0.1461]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0980, 0.0561]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9347, 0.0653]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33283737301826477\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4562,  0.3646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1456, 0.0766]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9118, 0.0882]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.639637291431427\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0894, 0.4771]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0961, 0.0722]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6781, 0.3219]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5486350059509277\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.3017, 1.2477]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2131, 0.0895]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1386, 0.8614]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6385501027107239\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0797,  0.3963]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1267, 0.0621]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6839, 0.3161]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6397407650947571\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0756,  0.4409]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1401, 0.0559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7698, 0.2302]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30976513028144836\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3984,  0.0484]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1323, 0.0675]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9235, 0.0765]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39068546891212463\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3168,  0.1824]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1337, 0.0706]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8565, 0.1435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3036162853240967\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.7759,  0.1384]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1465, 0.0661]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9668, 0.0332]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.19826413691043854\n"]},{"name":"stderr","output_type":"stream","text":["  8%|▊         | 4/50 [14:25<2:44:05, 214.03s/it]"]},{"name":"stdout","output_type":"stream","text":["Epoch 04 | Train Loss: 0.4341 | Valid Loss: 0.8429 | LR: 0.001000\n","⏳ EarlyStopping counter: 1/2\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.0271,  0.0942]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1722, 0.0403]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9893, 0.0107]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4420098662376404\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-0.8784,  0.2434]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1589, 0.0377]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9604, 0.0396]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7531980276107788\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.4862, 0.7702]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1753, 0.0460]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2825, 0.7175]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5872442126274109\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3707, 0.6400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1790, 0.0384]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4437, 0.5563]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5066303014755249\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.3940, 0.7618]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1278, 0.0332]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3424, 0.6576]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39279961585998535\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.5713, 0.7153]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1609, 0.0393]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3510, 0.6490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3807554244995117\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3031, 0.7651]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1499, 0.0286]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4378, 0.5622]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2508663237094879\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-2.5792,  0.1469]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2310, 0.0629]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9936e-01, 6.4376e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36742863059043884\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9341, 0.9010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1710, 0.0329]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2090, 0.7910]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3379403352737427\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4353, 0.6373]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1374, 0.0550]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4146, 0.5854]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48231300711631775\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2049,  0.3327]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2022, 0.0495]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8674, 0.1326]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7655107378959656\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1646,  0.2631]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1422, 0.0416]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7395, 0.2605]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3588840663433075\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2703, 0.7239]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1512, 0.0336]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4547, 0.5453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4121120274066925\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3106,  0.4116]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1718, 0.0660]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8601, 0.1399]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45936670899391174\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[2.2035, 1.5742]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1927, 0.1561]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0697, 0.9303]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5447046160697937\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.5024, 1.8808]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.5942, 0.4886]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0637, 0.9363]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4047326147556305\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.3251,  0.2447]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1751, 0.0528]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9937, 0.0063]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39761343598365784\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3305, 0.8570]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0972, 0.0494]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3744, 0.6256]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4839988052845001\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-2.0565,  0.3085]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2303, 0.0785]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3910227119922638\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.4314,  0.4658]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2227, 0.0318]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8736, 0.1264]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46964529156684875\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-2.0617,  0.2151]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2796, 0.0540]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9990, 0.0010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33333835005760193\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.0074, 0.7512]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1447, 0.1008]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3608, 0.6392]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5751193761825562\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6537,  0.0798]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1582, 0.0755]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9704, 0.0296]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5324750542640686\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1483, 0.4738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0939, 0.0463]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6465, 0.3535]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.25940796732902527\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-1.5974,  0.0424]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1459, 0.0549]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9979, 0.0021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2823841869831085\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6699, 0.7063]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0995, 0.0555]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3925, 0.6075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4033830761909485\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0977, 0.4549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2425, 0.0973]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6019, 0.3981]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45261356234550476\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2422, 0.6646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6170, 0.1414]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4484, 0.5516]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22159992158412933\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4082,  0.2868]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1219, 0.0604]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8658, 0.1342]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5268319845199585\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.1109,  0.4377]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1972, 0.0818]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7177, 0.2823]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4023612439632416\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-0.8792, -0.0456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0972, 0.0510]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9842, 0.0158]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42122092843055725\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2287,  0.2537]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1355, 0.0621]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7656, 0.2344]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.21361839771270752\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.2097,  0.0806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1338, 0.0583]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9907, 0.0093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2814379334449768\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2466, 0.4719]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1599, 0.0876]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5128, 0.4872]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3813098967075348\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2925, 0.6079]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1353, 0.0430]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5107, 0.4893]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47716107964515686\n","Ground truth y: tensor([0.2351], device='cuda:0')\n","Predicted mu: tensor([[0.3017, 0.4917]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1534, 0.0966]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5613, 0.4387]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6027494072914124\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.9647, 1.3904]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1484, 0.0681]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3413, 0.6587]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4332709312438965\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3032, 0.6643]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1116, 0.0322]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4809, 0.5191]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36151957511901855\n","Ground truth y: tensor([-1.2442], device='cuda:0')\n","Predicted mu: tensor([[-9.0097e-01, -7.2793e-05]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1654, 0.0498]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9872, 0.0128]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5807841420173645\n","Ground truth y: tensor([-2.6508], device='cuda:0')\n","Predicted mu: tensor([[-2.6592, -0.0969]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1163, 0.0655]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9987e-01, 1.2569e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4172014892101288\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.3348, 2.4773]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1128, 0.0853]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2056, 0.7944]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6243965029716492\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.6305, -0.0109]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1691, 0.0565]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9467, 0.0533]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6196222305297852\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4182, 0.7819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1226, 0.0295]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4294, 0.5706]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39728137850761414\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.6056, -0.1212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1566, 0.0814]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9970, 0.0030]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2918652892112732\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.4248,  0.2992]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2140, 0.0676]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8666, 0.1334]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.352953165769577\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.1569,  0.0052]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1497, 0.0890]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9899, 0.0101]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3836473226547241\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5605, -0.1319]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1614, 0.0757]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9602, 0.0398]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2835270166397095\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0901,  0.2562]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1897, 0.0641]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7711, 0.2289]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2649751305580139\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.9105, 0.8896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1055, 0.0521]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4587, 0.5413]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4243272542953491\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0567,  0.5659]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1866, 0.1027]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5695, 0.4305]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35481205582618713\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5148, 0.6381]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1563, 0.0307]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4890, 0.5110]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42626655101776123\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.4661, -0.0933]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1100, 0.1035]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9966, 0.0034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43419474363327026\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0758,  0.2001]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1772, 0.0941]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7194, 0.2806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44373035430908203\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.9022, 0.8993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1978, 0.0565]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3127, 0.6873]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2738567292690277\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2089,  0.1519]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1491, 0.0913]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7537, 0.2463]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5407634377479553\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.7938, -0.1029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1028, 0.0994]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9781, 0.0219]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3294390141963959\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7627, 0.9197]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1579, 0.0667]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3751, 0.6249]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30860552191734314\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.2596,  0.2294]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1620, 0.0910]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7886, 0.2114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5101466774940491\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.5506, 0.6715]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1710, 0.0648]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3839, 0.6161]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49834612011909485\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0782, -0.0285]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1043, 0.1326]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9832, 0.0168]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.20270289480686188\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.1488,  0.0270]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0534, 0.0757]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9972e-01, 2.8481e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46194708347320557\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.1120, 0.9263]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2084, 0.0913]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3652, 0.6348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38812941312789917\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.3140, 1.3884]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2398, 0.1858]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2392, 0.7608]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4226663112640381\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1408, 0.5822]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1480, 0.0562]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5262, 0.4738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36692607402801514\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.6842, -0.0699]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1414, 0.1167]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9521, 0.0479]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30624425411224365\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.3124,  0.2243]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1288, 0.0721]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8242, 0.1758]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.568170964717865\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5471,  0.2529]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1453, 0.0833]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9348, 0.0652]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3331819772720337\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-2.2770,  0.1003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0550, 0.1120]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9980e-01, 1.9629e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24374961853027344\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.8526, -0.0457]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1199, 0.1065]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9741, 0.0258]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38010355830192566\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4899, 0.6726]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1143, 0.0655]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4302, 0.5698]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4230557680130005\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.9410, -0.0038]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1269, 0.1276]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9776, 0.0224]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3629341125488281\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6612, 0.7444]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0924, 0.0544]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4227, 0.5773]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40085893869400024\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.3005, 1.0125]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1137, 0.0661]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2776, 0.7224]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5252407193183899\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.5133,  0.0571]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1392, 0.0901]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9329, 0.0671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6240097284317017\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.0527, 0.1405]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1936, 0.1151]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6766, 0.3234]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4323212206363678\n","Ground truth y: tensor([-2.5053], device='cuda:0')\n","Predicted mu: tensor([[-2.2022,  0.2438]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1634, 0.1703]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9803, 0.0197]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.252426415681839\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.4442,  0.0695]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1742, 0.1090]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9353, 0.0647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38120388984680176\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.5154,  0.1461]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1267, 0.1373]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9129, 0.0871]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22117315232753754\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5368, 0.6974]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1147, 0.0373]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4212, 0.5788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36913934350013733\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.5844, 0.7720]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1358, 0.0413]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2961, 0.7039]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3561306595802307\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0013, 1.2217]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2959, 0.1249]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1138, 0.8862]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32557210326194763\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.7008, 0.8380]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1557, 0.0417]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2812, 0.7188]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.25743311643600464\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1945, 0.4655]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1819, 0.0877]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4877, 0.5123]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4091039001941681\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2630, 1.6604]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2606, 0.0984]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0691, 0.9309]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46775901317596436\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.6166,  0.1592]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1184, 0.1104]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9655, 0.0345]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45781460404396057\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.5349,  0.1444]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1224, 0.0831]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9540, 0.0460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3018379509449005\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3527, 0.6023]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1749, 0.0317]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3955, 0.6045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22658641636371613\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4243, 1.6429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2145, 0.1320]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0556, 0.9444]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2176753431558609\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.2136,  0.1120]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0945, 0.0896]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9971, 0.0029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41391509771347046\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3015,  0.2379]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1169, 0.0895]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9183, 0.0817]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34601444005966187\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.8629,  0.0590]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1109, 0.1111]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9899, 0.0101]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3320028483867645\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.1837,  0.3906]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1600, 0.0725]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8181, 0.1819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49179530143737793\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.3000,  0.2111]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1312, 0.0735]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9098, 0.0902]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42350849509239197\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6050, 0.8604]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2586, 0.0642]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2049, 0.7951]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3942953944206238\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4864,  0.1809]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1102, 0.0810]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9532, 0.0468]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.58649742603302\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3679, 0.7554]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2073, 0.0264]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2232, 0.7768]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5344977378845215\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.3106, 1.3781]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1895, 0.1029]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0871, 0.9129]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27097395062446594\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1686, 0.5311]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1976, 0.0513]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4044, 0.5956]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3904465138912201\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0118, 0.5326]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1642, 0.0873]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4824, 0.5176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3195643424987793\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.3469, -0.0433]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2066, 0.1955]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9952, 0.0048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43312859535217285\n","Ground truth y: tensor([-0.6379], device='cuda:0')\n","Predicted mu: tensor([[-0.7530,  0.2664]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1572, 0.0782]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9544, 0.0456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5756316184997559\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.9996,  0.3013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1572, 0.0507]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9848, 0.0152]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5148641467094421\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1218, 0.5165]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1660, 0.0353]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5659, 0.4341]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6419978141784668\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0123,  0.3438]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1696, 0.0534]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6310, 0.3690]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.338664174079895\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-0.9688,  0.0640]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1593, 0.0890]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9895, 0.0105]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5245118141174316\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7624, 0.7144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1376, 0.0698]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3088, 0.6912]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48747751116752625\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1834,  0.1948]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1954, 0.0698]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8263, 0.1737]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47741395235061646\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.2842,  0.3458]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2047, 0.0673]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8488, 0.1512]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37524569034576416\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2292,  0.2972]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1782, 0.0594]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8528, 0.1472]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31318849325180054\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-1.5560, -0.0021]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1362, 0.1912]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9984, 0.0016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38427379727363586\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7030, 0.8562]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2066, 0.0487]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2986, 0.7014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4186505377292633\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1383,  0.3496]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1719, 0.0501]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7933, 0.2067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4832189679145813\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4401,  0.4290]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1608, 0.0543]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9234, 0.0766]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39246073365211487\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5399, 0.7770]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1719, 0.0344]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3445, 0.6555]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.502589225769043\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4740,  0.2836]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1557, 0.0637]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9385, 0.0615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2322554737329483\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6936, 0.7804]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1588, 0.0361]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2976, 0.7024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8329933881759644\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.4816,  0.0837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1523, 0.1257]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3697371482849121\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.2874,  0.1323]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1265, 0.0618]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9190, 0.0810]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5315714478492737\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1238, 0.3939]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1482, 0.0275]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5943, 0.4057]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5901028513908386\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[0.8391, 0.9050]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2158, 0.0397]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2348, 0.7652]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3830401301383972\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2775,  0.3435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1800, 0.0681]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8753, 0.1247]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6342607736587524\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4273,  0.3346]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1879, 0.1077]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8996, 0.1004]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43352144956588745\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.2504,  0.0507]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.0625]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9547, 0.0453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45917657017707825\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.6293, 1.5972]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4750, 0.1437]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0756, 0.9244]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4901267886161804\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.4078, 0.8302]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1986, 0.0346]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4760, 0.5240]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41167694330215454\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.2173, -0.0555]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1342, 0.1154]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9988, 0.0012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5134109854698181\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4132, 1.5353]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4374, 0.1317]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1478, 0.8522]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33676034212112427\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.5994, 1.8156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3848, 0.2161]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0945, 0.9055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4703521132469177\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.3381, -0.0331]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1362, 0.1813]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9914e-01, 8.5711e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40784043073654175\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.5268, 0.8375]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1702, 0.0821]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4602, 0.5398]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32193779945373535\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.2768, 1.7288]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4095, 0.2868]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1115, 0.8885]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5384902358055115\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.6586, 0.9312]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3524, 0.1673]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2540, 0.7460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4775707423686981\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7774, 0.7919]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1359, 0.1016]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4782, 0.5218]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3189978003501892\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0196,  0.4589]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1809, 0.0795]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7997, 0.2003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3456982970237732\n","Ground truth y: tensor([1.7145], device='cuda:0')\n","Predicted mu: tensor([[1.7045, 1.3379]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3729, 0.1682]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1319, 0.8681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33880117535591125\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3289, 0.9065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3422, 0.0439]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4684, 0.5316]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.240933358669281\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.1280, -0.1391]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1128, 0.0837]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9903e-01, 9.6866e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2519240081310272\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3266, 0.5616]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1438, 0.0519]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6501, 0.3499]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4945235848426819\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.3945, -0.1067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1396, 0.0837]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9980e-01, 2.0499e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40729978680610657\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1658, 0.3523]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1133, 0.0532]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8317, 0.1683]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5178182125091553\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.7248,  0.1951]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1338, 0.0847]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9826, 0.0174]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3304508626461029\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.0873,  0.2976]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1143, 0.0598]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9230, 0.0770]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49939021468162537\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.5975,  0.0293]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1244, 0.0549]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9878, 0.0122]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3484722673892975\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2035, 0.5415]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1297, 0.0479]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6601, 0.3399]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22679293155670166\n","Ground truth y: tensor([-2.3840], device='cuda:0')\n","Predicted mu: tensor([[-2.4186,  0.2862]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1528, 0.1590]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9985, 0.0015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27767908573150635\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0475,  0.3008]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1645, 0.0663]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8344, 0.1656]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4406358599662781\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.0020, -0.0054]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1323, 0.0987]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9951, 0.0049]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27541014552116394\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.2705,  0.0502]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1198, 0.0794]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9972, 0.0028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38218775391578674\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.5710,  0.2853]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1242, 0.0632]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9912, 0.0088]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.380075603723526\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1283,  0.4179]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1249, 0.0364]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8307, 0.1693]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31522777676582336\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2510, 0.7993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1248, 0.0160]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5287, 0.4713]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30908796191215515\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[1.3922, 1.4699]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1918, 0.0569]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0888, 0.9112]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43330273032188416\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7416, 0.8503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2455, 0.0461]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3164, 0.6836]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35157400369644165\n","Ground truth y: tensor([-0.9532], device='cuda:0')\n","Predicted mu: tensor([[-0.6211,  0.0671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1216, 0.0667]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9683, 0.0317]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3123166859149933\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8499, 0.9330]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2357, 0.0402]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2416, 0.7584]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2752249538898468\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.5010,  0.2212]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1041, 0.0314]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9327, 0.0673]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28233107924461365\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2496, 1.7074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2769, 0.0727]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1505, 0.8495]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2762035131454468\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-2.2922, -0.0069]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0668, 0.0721]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9953e-01, 4.6847e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5261008739471436\n","Ground truth y: tensor([-2.6508], device='cuda:0')\n","Predicted mu: tensor([[-2.2027,  0.4041]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0862, 0.0579]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9919, 0.0081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.25042176246643066\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.0032, 0.2786]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1587, 0.0683]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8146, 0.1854]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32087066769599915\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7646, 0.9646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2070, 0.0671]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2213, 0.7787]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.19001421332359314\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.3674,  0.4896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0964, 0.0960]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9725, 0.0275]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2186521291732788\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5345, 0.6453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1003, 0.0373]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4919, 0.5081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32737997174263\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.1685, -0.1083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0804, 0.0874]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9966, 0.0034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2727784812450409\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.2358, 0.5922]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1115, 0.0327]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5715, 0.4285]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5055727362632751\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.1179, 1.0029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1172, 0.0426]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3294, 0.6706]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4866889715194702\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4647, 1.1041]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1517, 0.0614]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2007, 0.7993]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3567981719970703\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.0722, 1.3205]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4121, 0.1403]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1334, 0.8666]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5516542196273804\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[0.1357, 0.6103]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1590, 0.0362]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7076, 0.2924]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8823490738868713\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.0343, -0.1453]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1135, 0.0528]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9969, 0.0031]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33703649044036865\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.9901,  0.7460]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1624, 0.1229]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9590, 0.0410]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5547698140144348\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.7116, 1.3286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1885, 0.1157]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2598, 0.7402]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3778493404388428\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4449, 0.9170]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1319, 0.0454]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5237, 0.4763]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40168866515159607\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6031, 1.0511]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1397, 0.0587]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4194, 0.5806]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3750077784061432\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0346,  0.5896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1209, 0.0461]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7554, 0.2446]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5021527409553528\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7323, 1.0826]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1374, 0.0679]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2954, 0.7046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5158758759498596\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8381, 1.0679]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1316, 0.0560]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2939, 0.7061]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4475165903568268\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4931,  0.3144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2090, 0.0540]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9761, 0.0239]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4575175642967224\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.4203,  0.3044]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1974, 0.0738]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9452, 0.0548]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4114057421684265\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5994, 0.9924]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1332, 0.0805]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3385, 0.6615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4428805112838745\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6317, 0.7707]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0968, 0.0494]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4154, 0.5846]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40854743123054504\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5667, 0.8291]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1300, 0.0610]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4097, 0.5903]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5223534107208252\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0684,  0.3307]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1661, 0.0793]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8898, 0.1102]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4334079623222351\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.3041, 1.6992]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2105, 0.1728]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0767, 0.9233]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34377792477607727\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4562, 0.5788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1080, 0.0507]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5441, 0.4559]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3121938109397888\n","Ground truth y: tensor([0.4777], device='cuda:0')\n","Predicted mu: tensor([[0.5738, 0.7559]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1280, 0.0547]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4582, 0.5418]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.725075364112854\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3143, 0.6725]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1702, 0.0508]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6128, 0.3872]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4297318160533905\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3445,  0.2367]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1452, 0.0551]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9210, 0.0790]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38857224583625793\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4470,  0.1820]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1723, 0.0937]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9658, 0.0342]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3968731462955475\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2010, 0.5632]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1561, 0.0390]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6322, 0.3678]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3151744604110718\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2875,  0.2425]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1658, 0.0930]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9180, 0.0820]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46890372037887573\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1403, 0.3968]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1424, 0.0642]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7505, 0.2495]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5078577995300293\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9095, 0.7930]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0982, 0.0591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3565, 0.6435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4587544798851013\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.2126,  0.3293]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1274, 0.0507]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8769, 0.1231]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3022061288356781\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.2299,  0.4836]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2384, 0.1031]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9716, 0.0284]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3115314841270447\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3293, 0.5343]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1281, 0.0485]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6810, 0.3190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.412178099155426\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2605, 1.5371]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1763, 0.1037]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1683, 0.8317]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43203315138816833\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.2146,  0.1535]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1005, 0.0595]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9200, 0.0800]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.1876300573349\n","Epoch 05 | Train Loss: 0.4157 | Valid Loss: 0.3794 | LR: 0.001000\n","✅ Validation loss giảm (0.432371 → 0.379384). Saving model ...\n"]},{"name":"stderr","output_type":"stream","text":[" 10%|█         | 5/50 [17:58<2:40:18, 213.74s/it]"]},{"name":"stdout","output_type":"stream","text":["Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6204, 0.8286]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1398, 0.0588]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3718, 0.6282]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31920191645622253\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.1837, 1.6614]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2641, 0.1221]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1087, 0.8913]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4572029113769531\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.4212, 0.8446]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2381, 0.1012]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4416, 0.5584]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3982943594455719\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1548, 0.4697]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2113, 0.0528]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7533, 0.2467]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44682997465133667\n","Ground truth y: tensor([1.7145], device='cuda:0')\n","Predicted mu: tensor([[0.9011, 1.2192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3633, 0.1553]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1368, 0.8632]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2309112250804901\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.6684, 0.8137]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1755, 0.0363]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3426, 0.6574]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.457552969455719\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.1250,  0.3767]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2472, 0.1060]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8729, 0.1271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4386478662490845\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6266, 0.8257]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2022, 0.0439]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3055, 0.6945]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3941914141178131\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.9857, 0.8532]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1999, 0.0467]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2249, 0.7751]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.318192720413208\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.0871, 0.4326]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2378, 0.1037]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7917, 0.2083]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6275355815887451\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.5049,  0.4538]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1825, 0.0560]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9374, 0.0626]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6218827366828918\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2361,  0.6486]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1788, 0.0458]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8304, 0.1696]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4054621756076813\n","Ground truth y: tensor([1.7630], device='cuda:0')\n","Predicted mu: tensor([[1.7702, 1.2600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2194, 0.0918]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0366, 0.9634]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3194495141506195\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4427, 0.6100]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1994, 0.0634]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5669, 0.4331]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40681684017181396\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-1.2331,  0.2376]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1232, 0.1293]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9936, 0.0064]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40673714876174927\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-1.5789,  0.2585]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0868, 0.1272]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9968, 0.0032]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40211814641952515\n","Ground truth y: tensor([2.1510], device='cuda:0')\n","Predicted mu: tensor([[1.9995, 1.6667]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2126, 0.1279]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0111, 0.9889]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5204995274543762\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.8656,  0.4853]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1172, 0.0765]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9840, 0.0160]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49462684988975525\n","Ground truth y: tensor([-2.3598], device='cuda:0')\n","Predicted mu: tensor([[-1.4588,  0.4997]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1461, 0.1525]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9897, 0.0103]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4196733832359314\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.1034,  0.7428]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1622, 0.0527]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7351, 0.2649]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3474925756454468\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4948,  0.3747]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1292, 0.0661]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9717, 0.0283]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3730595111846924\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.7258,  0.2435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1544, 0.0809]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9894, 0.0106]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2614043056964874\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4658, 0.6755]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1615, 0.0405]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4987, 0.5013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4339388608932495\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3635,  0.3445]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1490, 0.0618]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9655, 0.0345]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4070955812931061\n","Ground truth y: tensor([1.3507], device='cuda:0')\n","Predicted mu: tensor([[2.0064, 1.4123]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1507, 0.1248]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0160, 0.9840]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.9395694136619568\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5131, 0.7052]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1069, 0.0247]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3214, 0.6786]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4860502779483795\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.3830, 0.9988]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0993, 0.0505]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0558, 0.9442]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4700334966182709\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.8332, 0.7403]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1060, 0.0363]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1735, 0.8265]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4006076753139496\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5569, 0.7376]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1925, 0.0759]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3428, 0.6572]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2786542475223541\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.6172, 1.6015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2026, 0.1314]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0176, 0.9824]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4478287100791931\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0631, 0.5710]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1330, 0.0487]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6840, 0.3160]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.17550912499427795\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.2810, 0.5515]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1289, 0.0454]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5740, 0.4260]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48621314764022827\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-0.8281,  0.3137]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1648, 0.0563]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9805, 0.0195]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4078763723373413\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.5034, 1.4244]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2107, 0.0831]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0323, 0.9677]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3863096535205841\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.5642,  0.1436]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1997, 0.0627]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9987, 0.0013]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.619316041469574\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.1751,  0.1642]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1662, 0.0580]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9945, 0.0055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4356207549571991\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2714,  0.4382]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1337, 0.0382]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9139, 0.0861]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37469375133514404\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.5305, 0.8007]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1531, 0.0602]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2982, 0.7018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4589845538139343\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.2593, 0.5161]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1933, 0.0732]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5634, 0.4366]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3813936114311218\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0198, 0.4488]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1439, 0.0335]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7400, 0.2600]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28494352102279663\n","Ground truth y: tensor([-0.0559], device='cuda:0')\n","Predicted mu: tensor([[0.0723, 0.3853]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1948, 0.0710]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7160, 0.2840]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.303299218416214\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4141, 0.6529]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1119, 0.0421]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3569, 0.6431]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4711814820766449\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6288, 0.7923]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1217, 0.0332]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2529, 0.7471]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37207943201065063\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.2267, 0.6526]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1417, 0.0395]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5077, 0.4923]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5517266392707825\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-0.9364,  0.1797]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1572, 0.0697]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9897, 0.0103]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40348294377326965\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1800,  0.4793]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1901, 0.0527]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8426, 0.1574]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4007667303085327\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.0037, 0.3876]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1382, 0.0388]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8362, 0.1638]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43751978874206543\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[1.5124, 1.4252]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1266, 0.0810]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0651, 0.9349]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33901771903038025\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.2632,  0.3643]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1260, 0.0459]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9345, 0.0655]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5831955671310425\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.9706, 1.2943]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2719, 0.1399]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2027, 0.7973]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5331215858459473\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.2557,  0.4646]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1056, 0.0334]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9098, 0.0902]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35549524426460266\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.2165, 1.4319]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2037, 0.0925]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0978, 0.9022]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.411807119846344\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0882,  0.5920]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1865, 0.0436]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7870, 0.2130]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34748512506484985\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3389, 0.8979]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1039, 0.0245]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4270, 0.5730]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4729430079460144\n","Ground truth y: tensor([-0.2499], device='cuda:0')\n","Predicted mu: tensor([[-0.5593,  0.2558]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1091, 0.0354]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9840, 0.0160]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.527773380279541\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6543, 0.8985]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1258, 0.0522]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2538, 0.7462]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48444864153862\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1267, 0.7648]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2831, 0.1154]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4776, 0.5224]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33256998658180237\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.5517, 1.2206]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1983, 0.0947]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0446, 0.9554]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24809817969799042\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[1.1360, 1.0202]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1517, 0.0761]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1272, 0.8728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4775681495666504\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.3527, 0.6143]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0988, 0.0296]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5640, 0.4360]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6571571230888367\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0158,  0.2586]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1549, 0.0640]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8834, 0.1166]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48451751470565796\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.1792,  0.3969]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1660, 0.0495]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8818, 0.1182]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3694194555282593\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.5032,  0.1300]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1628, 0.0949]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9978, 0.0022]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4691806137561798\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.8409,  0.1628]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1662, 0.0730]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9872, 0.0128]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22841358184814453\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.1268,  0.4873]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1538, 0.0403]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8599, 0.1401]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40751373767852783\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5632,  0.5386]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2522, 0.0786]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9451, 0.0549]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4287354052066803\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.5810,  0.3837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1810, 0.0472]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9830, 0.0170]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3681632876396179\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-1.2760, -0.0457]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.0599]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9990, 0.0010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46796339750289917\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.5475,  0.2630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1826, 0.0370]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9900e-01, 9.9879e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5214972496032715\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1030, 0.6186]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1363, 0.0483]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7469, 0.2531]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49777406454086304\n","Ground truth y: tensor([-0.3226], device='cuda:0')\n","Predicted mu: tensor([[-0.2460,  0.2077]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1325, 0.0754]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9445, 0.0555]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38775634765625\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.3937,  0.0979]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1536, 0.0617]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9976, 0.0024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4764390289783478\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6771,  0.3372]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1763, 0.0677]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9664, 0.0336]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.26653221249580383\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2300, 0.5896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0839, 0.0407]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6527, 0.3473]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5518091320991516\n","Ground truth y: tensor([0.6232], device='cuda:0')\n","Predicted mu: tensor([[0.1295, 0.5787]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0891, 0.0489]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7350, 0.2650]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33879074454307556\n","Ground truth y: tensor([-0.9047], device='cuda:0')\n","Predicted mu: tensor([[-1.2496, -0.0801]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0971, 0.0381]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9945e-01, 5.4836e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3875928521156311\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.1393, 1.9999]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.3492, 0.2756]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0572, 0.9428]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42608126997947693\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.9945, -0.0193]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1086, 0.0437]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9982, 0.0018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3026809096336365\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.3661,  0.4200]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1627, 0.0791]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8946, 0.1054]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42353323101997375\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2806, 0.5828]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1654, 0.1094]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4742, 0.5258]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.522287130355835\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3293,  0.4530]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1489, 0.0377]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9125, 0.0875]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24221348762512207\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.0575,  0.3902]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1641, 0.0647]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7437, 0.2563]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4058791697025299\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6487, 0.9259]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0955, 0.0392]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3029, 0.6971]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2860102951526642\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.4907,  0.0897]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1037, 0.0566]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9879, 0.0121]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29275375604629517\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4293, 0.6279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1196, 0.0387]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4370, 0.5630]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6187486052513123\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4869, 0.7287]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1346, 0.0682]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2779, 0.7221]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22781231999397278\n","Ground truth y: tensor([-1.1957], device='cuda:0')\n","Predicted mu: tensor([[-1.4377,  0.2126]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1088, 0.0650]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9982, 0.0018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4473402500152588\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2013, 0.3152]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1238, 0.0714]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7148, 0.2852]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2677516043186188\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0686,  0.3522]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1260, 0.0607]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8853, 0.1147]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3731490969657898\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-0.6600,  0.1003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1317, 0.1277]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9860, 0.0140]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.384093701839447\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4841,  0.0503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1197, 0.0981]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9811, 0.0189]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3040464520454407\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-2.4017,  0.4956]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1171, 0.0865]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9929, 0.0071]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3770665228366852\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6161, 0.7427]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0874, 0.0336]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3006, 0.6994]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2452031522989273\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6911, 0.8490]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1405, 0.0614]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2108, 0.7892]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3773705065250397\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.9557,  0.3464]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1015, 0.0773]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9795, 0.0205]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28007519245147705\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.5663,  0.3065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1538, 0.0831]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9356, 0.0644]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2773110270500183\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1011, 0.5382]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1206, 0.0366]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7117, 0.2883]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3024272322654724\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.6043,  0.4093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1109, 0.0653]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9777, 0.0223]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4159719944000244\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.0514,  0.4226]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1037, 0.0611]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8679, 0.1321]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34995365142822266\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.2442,  0.2555]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1067, 0.0749]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9982, 0.0018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3430551290512085\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1135, 0.5872]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1535, 0.0408]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7453, 0.2547]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48513883352279663\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1158,  0.5447]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1242, 0.0527]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8407, 0.1593]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42007124423980713\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.4542,  0.3670]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1054, 0.0572]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9706, 0.0294]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29642024636268616\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.7823, 1.6420]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1722, 0.1069]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0749, 0.9251]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3914036452770233\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6845, 0.9116]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0918, 0.0240]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3405, 0.6595]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34769195318222046\n","Ground truth y: tensor([0.4777], device='cuda:0')\n","Predicted mu: tensor([[0.1679, 0.7191]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1175, 0.0349]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6911, 0.3089]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.1683410257101059\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3049, 0.6940]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1268, 0.0317]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5695, 0.4304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4247480630874634\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.2156,  0.3262]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1500, 0.0838]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9118, 0.0882]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.581544041633606\n","Ground truth y: tensor([-2.2870], device='cuda:0')\n","Predicted mu: tensor([[-2.4186,  0.4145]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1205, 0.1945]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9906, 0.0094]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34219321608543396\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.2926,  0.4783]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1584, 0.0748]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8778, 0.1222]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2944912016391754\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.0024,  0.4281]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1325, 0.0475]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8541, 0.1459]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.244393989443779\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.1020,  0.3138]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1828, 0.0882]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9071, 0.0929]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5320992469787598\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.6055,  0.1960]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1259, 0.0596]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9919, 0.0081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40949490666389465\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.4568,  0.3616]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1334, 0.0559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9677, 0.0323]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5031449198722839\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4488,  0.2067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1480, 0.1636]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9617, 0.0383]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3658501207828522\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7042, 0.8671]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0969, 0.0348]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3745, 0.6255]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3368544578552246\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5338,  0.3275]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1144, 0.0444]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9841, 0.0159]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3459412753582001\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3219, 0.5878]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1659, 0.0723]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6582, 0.3418]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3927510678768158\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4589, 0.5946]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1891, 0.1249]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4997, 0.5003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5784659385681152\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-1.5545,  0.4225]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1170, 0.0954]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9920, 0.0080]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4305196702480316\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.1272,  0.4387]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1284, 0.0922]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9600, 0.0400]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3896602392196655\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.0473,  0.4647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2161, 0.1511]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9262, 0.0738]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29784080386161804\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0611,  0.3608]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2221, 0.1538]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8238, 0.1762]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3798213005065918\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-2.3513,  0.3662]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1188, 0.1158]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9935, 0.0065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37664270401000977\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2438, 1.2428]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1618, 0.2059]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1246, 0.8754]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45329177379608154\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.6686,  0.2996]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1670, 0.0799]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9939, 0.0061]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5105848908424377\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[0.4236, 0.8348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1055, 0.0234]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4085, 0.5915]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.639380931854248\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[-0.0074,  0.3631]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2339, 0.1611]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7770, 0.2230]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45633411407470703\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2497, 0.7859]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1475, 0.0244]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5032, 0.4968]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3969515264034271\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0795, 0.5673]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2073, 0.1153]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6319, 0.3681]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4813528060913086\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.1448,  0.4979]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1723, 0.0706]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9778, 0.0222]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3182390630245209\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2721, 0.8141]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1202, 0.0400]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5141, 0.4859]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6118202805519104\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0129, 0.5585]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1844, 0.0437]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6653, 0.3347]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4308503270149231\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4612, 0.9256]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0866, 0.0240]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3865, 0.6135]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3432753384113312\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.1101, 0.5976]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1645, 0.0667]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5688, 0.4312]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4653187692165375\n","Ground truth y: tensor([0.6232], device='cuda:0')\n","Predicted mu: tensor([[0.5157, 0.8457]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1573, 0.0591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3662, 0.6338]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6841175556182861\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.2473, 0.5202]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1538, 0.0333]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5733, 0.4267]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29507890343666077\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3025, 0.4728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1262, 0.0393]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5719, 0.4281]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4842556118965149\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.9054, 0.8045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1785, 0.0789]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3061, 0.6939]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.589835524559021\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.2095, 0.2492]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1041, 0.0235]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6504, 0.3496]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3462475538253784\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.1287, 0.2653]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1330, 0.0437]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7559, 0.2441]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4399879276752472\n","Ground truth y: tensor([-0.3469], device='cuda:0')\n","Predicted mu: tensor([[0.1306, 0.2299]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1258, 0.0389]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7402, 0.2598]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45327475666999817\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.4844, 0.4757]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1155, 0.0489]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5248, 0.4752]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33993884921073914\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[0.0599, 0.1497]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1273, 0.0811]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8696, 0.1304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43547019362449646\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2713,  0.1601]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1915, 0.0898]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8837, 0.1163]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7345744371414185\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3837, 0.2727]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1260, 0.0711]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7203, 0.2797]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6168877482414246\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.4604, 0.8192]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1477, 0.0828]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4593, 0.5407]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44355013966560364\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.9490,  0.2190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1581, 0.0950]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9858, 0.0142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2512805759906769\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.5210, 0.5639]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2032, 0.1075]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4962, 0.5038]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5532136559486389\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.8858, 0.8004]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1768, 0.1158]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5856, 0.4144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3849483132362366\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.8696,  0.3167]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1975, 0.1166]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9729, 0.0271]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3454904854297638\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.4711,  0.2963]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1613, 0.1049]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9670, 0.0330]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3782692849636078\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0090, 1.0713]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0779, 0.0667]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5661, 0.4339]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32538220286369324\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.1242, 0.4313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1033, 0.1071]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8692, 0.1308]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3668298125267029\n","Ground truth y: tensor([0.7687], device='cuda:0')\n","Predicted mu: tensor([[0.2785, 0.6427]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1336, 0.0938]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6845, 0.3155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39414405822753906\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.7445, 1.0436]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0692, 0.0483]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5170, 0.4830]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4029492437839508\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.5099, 0.9478]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1189, 0.0604]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4625, 0.5375]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41855260729789734\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[-0.6474,  0.1319]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1447, 0.1250]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9897, 0.0103]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3863205015659332\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6576, 0.9661]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0955, 0.0756]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4448, 0.5552]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3473060429096222\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[0.6009, 0.8785]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0801, 0.0524]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4680, 0.5320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32453152537345886\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5047, 0.6784]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0822, 0.0539]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6476, 0.3524]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4505724012851715\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.4702,  0.1694]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1219, 0.1228]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9833, 0.0167]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6090315580368042\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.5950, -0.1819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1413, 0.1912]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9969e-01, 3.1384e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3004200756549835\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.3392,  0.2238]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1228, 0.0731]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9834, 0.0166]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5208640098571777\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6073, 0.8930]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1807, 0.1010]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2929, 0.7071]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2297741323709488\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8906, 0.9020]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0537, 0.0327]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2779, 0.7221]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3748733103275299\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.0019,  0.2811]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1437, 0.0777]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8636, 0.1364]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3160295784473419\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1990, 0.3489]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1327, 0.0805]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7526, 0.2474]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.329572856426239\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1424,  0.3109]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1439, 0.0920]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8895, 0.1105]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6427118182182312\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[1.4514, 1.9573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1781, 0.1697]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0238, 0.9762]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2793933153152466\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.2418, 1.7216]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2300, 0.1808]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0293, 0.9707]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4239257574081421\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0906,  0.4243]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1351, 0.0532]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7994, 0.2006]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5514834523200989\n","Ground truth y: tensor([0.1866], device='cuda:0')\n","Predicted mu: tensor([[-0.0096,  0.5204]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1388, 0.0590]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8064, 0.1936]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4435904920101166\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-0.8636,  0.0895]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1628, 0.1010]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9955, 0.0045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4476945400238037\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.0481, 0.3809]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1488, 0.0559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7922, 0.2078]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38882210850715637\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0768,  0.4385]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1562, 0.0579]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8449, 0.1551]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41374078392982483\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2621,  0.2440]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1674, 0.0736]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9385, 0.0615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.464491069316864\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.5769,  0.1927]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2129, 0.1636]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9988, 0.0012]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3669794797897339\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3934, 0.7682]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1304, 0.0405]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4506, 0.5494]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.39380696415901184\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0785,  0.0727]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1572, 0.0826]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9912e-01, 8.8491e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5997040867805481\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.7208,  0.2396]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1481, 0.0842]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9908, 0.0092]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35387569665908813\n","Ground truth y: tensor([0.6232], device='cuda:0')\n","Predicted mu: tensor([[0.5119, 0.9045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1221, 0.0537]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2697, 0.7303]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37361574172973633\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.3872, 0.7052]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1198, 0.0363]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4513, 0.5487]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3757752776145935\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-0.9266,  0.1841]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1709, 0.1304]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9956, 0.0044]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46705394983291626\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3458, 0.6990]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1752, 0.0514]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4078, 0.5922]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3925285339355469\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.2321,  0.3385]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2088, 0.0663]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9299, 0.0701]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38639578223228455\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4427, 0.7309]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1554, 0.0409]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3418, 0.6582]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.343793123960495\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3890, 0.6503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2294, 0.0822]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3773, 0.6227]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27315086126327515\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.2917,  0.2991]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0961, 0.1102]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9975, 0.0025]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3222058117389679\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8596, 0.9104]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2377, 0.0622]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1259, 0.8741]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37469273805618286\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-0.7718,  0.2323]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1303, 0.1221]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9946, 0.0054]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4408871829509735\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8657, 1.0051]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1954, 0.0747]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1415, 0.8585]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3532179892063141\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.6806, 0.8473]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1576, 0.0434]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2151, 0.7849]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3307837247848511\n","Ground truth y: tensor([-2.7963], device='cuda:0')\n","Predicted mu: tensor([[-2.3764,  0.4384]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0694, 0.1145]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9989, 0.0011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47936490178108215\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.4455,  0.2940]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0869, 0.0785]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9908e-01, 9.2233e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4644008278846741\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2972, 0.6628]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1868, 0.0559]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4796, 0.5204]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.8645966053009033\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3282,  0.2921]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1363, 0.0707]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9676, 0.0324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.1990637332201004\n","Ground truth y: tensor([-1.4867], device='cuda:0')\n","Predicted mu: tensor([[-1.5635,  0.2396]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0937, 0.1243]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9974, 0.0026]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.08877895027399063\n"]},{"name":"stderr","output_type":"stream","text":[" 12%|█▏        | 6/50 [21:34<2:37:17, 214.49s/it]"]},{"name":"stdout","output_type":"stream","text":["Epoch 06 | Train Loss: 0.4112 | Valid Loss: 0.3855 | LR: 0.001000\n","⏳ EarlyStopping counter: 1/2\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-2.3298,  0.3065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0693, 0.0919]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9909e-01, 9.1239e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.26588162779808044\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.9425,  0.1968]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0941, 0.0992]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9925, 0.0075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5895030498504639\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2017, 0.5394]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1296, 0.0464]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7356, 0.2644]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.0112589597702026\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.1752, 0.4823]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1381, 0.0498]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7112, 0.2888]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35347288846969604\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1985,  0.4119]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1377, 0.0539]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9385, 0.0615]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5834376215934753\n","Ground truth y: tensor([-2.7963], device='cuda:0')\n","Predicted mu: tensor([[-2.4705,  0.3372]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1437, 0.0813]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9983e-01, 1.6683e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3673345446586609\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2561, 0.6990]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1180, 0.0428]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7048, 0.2952]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4201195538043976\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-0.8172,  0.4461]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2067, 0.0636]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9856, 0.0144]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2867022156715393\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.6335, 1.0233]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1675, 0.0744]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2775, 0.7225]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.558422863483429\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1053,  0.6768]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1847, 0.0471]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8317, 0.1683]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43234315514564514\n","Ground truth y: tensor([0.3079], device='cuda:0')\n","Predicted mu: tensor([[-0.0760,  0.6029]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2276, 0.0595]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8278, 0.1722]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48733893036842346\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.3495, 0.6464]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1387, 0.0466]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5634, 0.4366]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4956471025943756\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.7427,  0.2109]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1532, 0.0755]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9923, 0.0077]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42852333188056946\n","Ground truth y: tensor([-1.4867], device='cuda:0')\n","Predicted mu: tensor([[-1.3030,  0.1693]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2686, 0.1116]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4622083306312561\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3881, 0.6464]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1811, 0.0637]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5285, 0.4715]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32393398880958557\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.2353,  0.1253]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1512, 0.0829]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9981, 0.0019]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.609393835067749\n","Ground truth y: tensor([-1.5352], device='cuda:0')\n","Predicted mu: tensor([[-1.4584,  0.1938]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2312, 0.0566]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9942e-01, 5.8447e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30534544587135315\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.5488, 0.6541]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1692, 0.0646]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3718, 0.6282]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3336716294288635\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.7302, 0.6576]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1261, 0.0500]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2826, 0.7174]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24263322353363037\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8813, 0.6423]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1075, 0.0456]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2829, 0.7171]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4108377695083618\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.9802,  0.1725]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1360, 0.0678]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9952, 0.0048]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3662091791629791\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.9429, 1.5365]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1760, 0.1159]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0309, 0.9691]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6069709062576294\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0265, 0.8066]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0887, 0.0524]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2963, 0.7037]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30201083421707153\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.1676, 1.4237]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.6293, 0.1562]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0607, 0.9393]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3095764219760895\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.5303, 0.5927]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1420, 0.0818]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6173, 0.3827]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.21657174825668335\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.5395, 0.6978]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0797, 0.0384]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5265, 0.4735]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31924161314964294\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.3911, 0.5895]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0856, 0.0439]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7209, 0.2791]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2931186854839325\n","Ground truth y: tensor([0.6232], device='cuda:0')\n","Predicted mu: tensor([[0.6334, 0.7471]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0606, 0.0334]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5028, 0.4972]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28707265853881836\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0879, 0.9141]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0652, 0.0377]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2666, 0.7334]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4832918345928192\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.5721,  0.2313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1234, 0.0614]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9955, 0.0045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3404799997806549\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.5549, 0.7678]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1485, 0.0552]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4250, 0.5750]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5643351078033447\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2026, 0.6508]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0915, 0.0464]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7406, 0.2594]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.230746790766716\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.8860,  0.1607]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0919, 0.0412]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9985, 0.0015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3995526432991028\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-1.5780,  0.5532]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2404, 0.0473]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9886, 0.0114]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.26234185695648193\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1912, 0.6789]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1078, 0.0359]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5695, 0.4305]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29532063007354736\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.6940, 1.3255]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.4322, 0.0681]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1073, 0.8927]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3123665750026703\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.0240,  0.2855]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1356, 0.0410]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9936e-01, 6.4122e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4382036030292511\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3142, 0.8126]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0921, 0.0222]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3800, 0.6200]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.26465582847595215\n","Ground truth y: tensor([-1.4140], device='cuda:0')\n","Predicted mu: tensor([[-1.3030,  0.1947]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0840, 0.0367]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9990, 0.0010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32489633560180664\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7217, 0.9228]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1560, 0.0332]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2280, 0.7720]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2176286280155182\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.2762,  0.0465]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0882, 0.0506]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9901e-01, 9.8808e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2817569375038147\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0722,  0.1854]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1019, 0.0492]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9953, 0.0047]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24293753504753113\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.4476, 0.6819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0886, 0.0193]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3556, 0.6444]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27312588691711426\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5819, 0.8188]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0985, 0.0188]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3064, 0.6936]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.15333248674869537\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.5087,  0.4278]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1613, 0.0485]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9163, 0.0837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5591813325881958\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-1.1031,  0.0628]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1204, 0.0314]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9954, 0.0046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3721022605895996\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.8488, 0.8627]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1231, 0.0260]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1990, 0.8010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4533748924732208\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.9537,  0.4301]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1423, 0.0339]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9787, 0.0213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5113131403923035\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.3931,  0.1772]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1298, 0.0380]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9597, 0.0403]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35660985112190247\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.1538,  0.3125]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1077, 0.0641]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8802, 0.1198]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4903673231601715\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4151, 0.7248]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1462, 0.0415]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4989, 0.5011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3211727738380432\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.8903, 1.1525]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1553, 0.0923]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1787, 0.8213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6002049446105957\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[1.0103, 1.0975]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1415, 0.1012]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1467, 0.8533]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.25515690445899963\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.7318,  0.1332]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0957, 0.0787]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9895, 0.0105]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4433719217777252\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.4220, 0.8595]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1348, 0.0452]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3584, 0.6416]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3594883382320404\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[0.8211, 1.0311]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1073, 0.0616]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2271, 0.7729]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.24216294288635254\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.1605,  0.4769]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1514, 0.0963]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8699, 0.1301]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5424997210502625\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0821,  0.4933]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1433, 0.0691]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8104, 0.1896]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2601364552974701\n","Ground truth y: tensor([-2.4325], device='cuda:0')\n","Predicted mu: tensor([[-2.3651,  0.2244]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1072, 0.0593]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9989e-01, 1.1284e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43628212809562683\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.9203,  0.3510]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1053, 0.0662]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9907, 0.0093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.44867536425590515\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1510,  0.4034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1601, 0.0541]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8976, 0.1024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2612115442752838\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0412,  0.4602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1822, 0.1048]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8721, 0.1279]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.180149644613266\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.9923,  0.2388]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1194, 0.0719]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9961, 0.0039]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.21381250023841858\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.2207, 1.1247]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2470, 0.1215]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2103, 0.7897]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35877975821495056\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3943,  0.3848]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1474, 0.0863]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9623, 0.0377]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2173203080892563\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[-0.0564,  0.3540]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1243, 0.0586]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9360, 0.0640]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41222822666168213\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[1.0645, 0.9635]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0847, 0.0592]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2350, 0.7650]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4779871106147766\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1069, 0.5016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1249, 0.0476]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8249, 0.1751]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4076193571090698\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.7711,  0.4317]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1603, 0.0516]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9785, 0.0215]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2300000935792923\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1132,  0.3808]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1575, 0.1032]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9430, 0.0570]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3703095614910126\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2578, 0.6028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1043, 0.0406]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6662, 0.3338]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3618661165237427\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6518,  0.2392]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1196, 0.0354]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9896, 0.0104]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4248383939266205\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.9529,  0.2177]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1313, 0.0438]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9941, 0.0059]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46916791796684265\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.3750, 0.6267]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1447, 0.0568]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5946, 0.4054]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4100790321826935\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.6133, 0.8324]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0777, 0.0250]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4120, 0.5880]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.27031409740448\n","Ground truth y: tensor([-2.6508], device='cuda:0')\n","Predicted mu: tensor([[-2.0712,  0.2670]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1417, 0.0901]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9986, 0.0014]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4568871855735779\n","Ground truth y: tensor([-1.0017], device='cuda:0')\n","Predicted mu: tensor([[-0.4963,  0.2845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1437, 0.0854]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9820, 0.0180]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4803352653980255\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.5997, 0.8178]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0830, 0.0310]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5049, 0.4951]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3789922893047333\n","Ground truth y: tensor([0.6474], device='cuda:0')\n","Predicted mu: tensor([[0.1926, 0.7417]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1351, 0.0354]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5849, 0.4151]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2936302125453949\n","Ground truth y: tensor([-0.1529], device='cuda:0')\n","Predicted mu: tensor([[-0.3358,  0.3269]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1584, 0.1388]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9623, 0.0377]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3039937913417816\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.2064,  0.3397]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1423, 0.0503]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9492, 0.0508]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.22236131131649017\n","Ground truth y: tensor([1.3507], device='cuda:0')\n","Predicted mu: tensor([[0.3192, 0.7947]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1562, 0.0399]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5165, 0.4835]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35179129242897034\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.7899, 1.6702]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1674, 0.1919]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0876, 0.9124]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.237905353307724\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3586, 0.7221]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0999, 0.0189]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5565, 0.4435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3379972279071808\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0299, 0.5207]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1446, 0.0569]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8398, 0.1602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2545064389705658\n","Ground truth y: tensor([1.8600], device='cuda:0')\n","Predicted mu: tensor([[2.2197, 1.6750]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1291, 0.1768]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0752, 0.9248]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4914488196372986\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5268, 0.7805]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1355, 0.0360]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4655, 0.5345]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6624268293380737\n","Ground truth y: tensor([2.4420], device='cuda:0')\n","Predicted mu: tensor([[1.5397, 1.4382]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1850, 0.1020]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1224, 0.8776]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3261101245880127\n","Ground truth y: tensor([1.4962], device='cuda:0')\n","Predicted mu: tensor([[1.1404, 1.0242]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1171, 0.0362]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2544, 0.7456]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38885441422462463\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4028, 0.6190]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1050, 0.0288]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5853, 0.4147]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2951865494251251\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2929, 0.7222]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1413, 0.0270]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6014, 0.3986]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4099319875240326\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-1.0147,  0.1658]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0982, 0.0804]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9967, 0.0033]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.18876826763153076\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.3785, 1.2402]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2102, 0.0913]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2055, 0.7945]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31999725103378296\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6856,  0.2260]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1232, 0.0832]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9859, 0.0141]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.49187734723091125\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2869, 0.8016]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1148, 0.0210]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6327, 0.3673]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48753973841667175\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[-0.0008,  0.5845]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1441, 0.0249]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8044, 0.1956]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.23258619010448456\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.9715, 1.1167]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1833, 0.0436]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3304, 0.6696]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47350454330444336\n","Ground truth y: tensor([-0.6137], device='cuda:0')\n","Predicted mu: tensor([[-1.0238,  0.4062]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1043, 0.0464]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9781, 0.0219]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.37077274918556213\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.5759,  0.2200]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1391, 0.1003]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9747, 0.0253]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3630257844924927\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.2371, 0.5953]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1555, 0.0489]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6775, 0.3225]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32357972860336304\n","Ground truth y: tensor([-0.4682], device='cuda:0')\n","Predicted mu: tensor([[-0.0834,  0.3963]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1568, 0.0332]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9021, 0.0979]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38744327425956726\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0272, 0.4647]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2326, 0.1686]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6575, 0.3425]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.466897577047348\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.3581,  0.2621]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1333, 0.0400]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9520, 0.0480]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5190088748931885\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[0.9256, 0.8275]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0855, 0.0176]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4000, 0.6000]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4154970645904541\n","Ground truth y: tensor([-0.0316], device='cuda:0')\n","Predicted mu: tensor([[0.1755, 0.4254]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1857, 0.0551]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7453, 0.2547]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35163989663124084\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.9267, 0.7573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1071, 0.0257]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4315, 0.5685]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42477843165397644\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.4352,  0.0260]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1438, 0.0733]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9844, 0.0156]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3205890655517578\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3580, 0.5674]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1623, 0.0621]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5680, 0.4320]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3579237759113312\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.9528, -0.0715]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1228, 0.0577]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9973, 0.0027]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41150516271591187\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.4819,  0.1767]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1685, 0.0556]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9713, 0.0287]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31513968110084534\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.8722, -0.0746]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1235, 0.0653]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9944e-01, 5.5861e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3308912515640259\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1661,  0.2543]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1348, 0.0452]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9398, 0.0602]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.1909802258014679\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.4147,  0.1010]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0879, 0.0520]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9984e-01, 1.6459e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5430582165718079\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.8222,  0.0133]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1280, 0.0674]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9950, 0.0050]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43803367018699646\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.4275, 0.7710]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1425, 0.0553]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4719, 0.5281]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.529336154460907\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.6393,  0.2990]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1589, 0.1037]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9519, 0.0481]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3205655515193939\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.5375,  0.2826]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1430, 0.0567]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9840, 0.0160]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3128809630870819\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3553, 0.7916]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1041, 0.0285]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5420, 0.4580]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3448896110057831\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.1173, 0.6163]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1174, 0.0298]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8035, 0.1965]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32596713304519653\n","Ground truth y: tensor([-2.3598], device='cuda:0')\n","Predicted mu: tensor([[-2.1331,  0.2819]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1344, 0.1430]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9983, 0.0017]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32297369837760925\n","Ground truth y: tensor([1.5690], device='cuda:0')\n","Predicted mu: tensor([[1.2655, 1.5750]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1445, 0.1695]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0935, 0.9065]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3118756115436554\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.7954, 0.7747]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0722, 0.0469]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4290, 0.5710]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3386906087398529\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[-0.3017,  0.3079]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1253, 0.0381]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9651, 0.0349]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3737497925758362\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.2607, 0.6147]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1184, 0.0409]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6284, 0.3716]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3093566298484802\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-1.0168,  0.0532]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1348, 0.0801]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9957, 0.0043]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.263435035943985\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6498, 0.7055]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0928, 0.0510]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4696, 0.5304]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.17358319461345673\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.6824,  0.2308]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1612, 0.0992]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9622, 0.0378]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.29017627239227295\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2505,  0.1800]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1195, 0.0797]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9687, 0.0313]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.46132001280784607\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-1.0750,  0.0383]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1288, 0.0607]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9970, 0.0030]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2967446744441986\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.3482, 1.2486]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1149, 0.0823]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1501, 0.8499]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4175524115562439\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[-0.4319,  0.2018]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1174, 0.0808]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9709, 0.0291]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3415398895740509\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0434,  0.3670]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1037, 0.0601]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8571, 0.1429]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3034113347530365\n","Ground truth y: tensor([-1.0502], device='cuda:0')\n","Predicted mu: tensor([[-0.9153,  0.1122]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0953, 0.0473]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9972, 0.0028]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2600621283054352\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.1859, 0.6348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1096, 0.0408]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6773, 0.3227]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6906329393386841\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[-0.0192,  0.5844]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1488, 0.0669]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6649, 0.3351]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34218907356262207\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7444, 1.1831]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1411, 0.0686]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2072, 0.7928]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3849545121192932\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0500,  0.5617]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1154, 0.0372]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8888, 0.1112]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.43628308176994324\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.4106, 1.8591]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1337, 0.0838]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0772, 0.9228]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6872310638427734\n","Ground truth y: tensor([0.2594], device='cuda:0')\n","Predicted mu: tensor([[0.3111, 0.8322]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1481, 0.0441]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4346, 0.5654]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47209545969963074\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[1.2850, 1.6652]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1462, 0.0801]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.0996, 0.9004]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.7778512239456177\n","Ground truth y: tensor([0.9142], device='cuda:0')\n","Predicted mu: tensor([[1.0674, 1.0578]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1113, 0.0514]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1827, 0.8173]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2980269193649292\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2704, 0.5543]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1418, 0.0514]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5854, 0.4146]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2875939607620239\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[0.6923, 0.8022]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1047, 0.0471]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3211, 0.6789]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2836810052394867\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.8838, 0.8127]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1135, 0.0513]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2711, 0.7289]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.373298704624176\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.1685, 0.5011]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1309, 0.0307]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6933, 0.3067]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3216889500617981\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.1497, 1.0142]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0978, 0.0712]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2394, 0.7606]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3798033893108368\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.2841, 0.5664]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1343, 0.0542]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5926, 0.4074]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.45221975445747375\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.6086, 0.6703]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1223, 0.0606]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3824, 0.6176]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4508115351200104\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.9136, 0.7765]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0884, 0.0522]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3279, 0.6721]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.502928614616394\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.5919, 0.6878]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1180, 0.0591]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4497, 0.5503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4086751341819763\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[1.4772, 1.5416]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0636, 0.1078]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2248, 0.7752]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.38937506079673767\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4057, 0.7005]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1175, 0.0492]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5293, 0.4707]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.41189098358154297\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.2704, 0.4998]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1398, 0.0528]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7114, 0.2886]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5296939611434937\n","Ground truth y: tensor([1.4235], device='cuda:0')\n","Predicted mu: tensor([[0.6481, 0.9003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0891, 0.0506]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4497, 0.5503]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28861355781555176\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0336, 0.4337]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1563, 0.0649]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7494, 0.2506]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.448068231344223\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.8320,  0.1581]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1580, 0.0575]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9845, 0.0155]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.35952797532081604\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.3562, 0.7119]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0879, 0.0298]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6024, 0.3976]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5951026082038879\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2013, 0.5745]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1135, 0.0319]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7163, 0.2837]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.23868125677108765\n","Ground truth y: tensor([-2.5781], device='cuda:0')\n","Predicted mu: tensor([[-2.4562,  0.3420]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2118, 0.1036]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9985, 0.0015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4997064173221588\n","Ground truth y: tensor([-2.6508], device='cuda:0')\n","Predicted mu: tensor([[-2.5704,  0.6352]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2165, 0.0653]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9966, 0.0034]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3045676648616791\n","Ground truth y: tensor([-1.8748], device='cuda:0')\n","Predicted mu: tensor([[-2.2609,  0.5666]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2890, 0.1208]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9958, 0.0042]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.30312952399253845\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.4137, 0.7126]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1100, 0.0423]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6094, 0.3906]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2669416069984436\n","Ground truth y: tensor([1.0597], device='cuda:0')\n","Predicted mu: tensor([[0.9460, 1.0968]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1753, 0.1250]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4386, 0.5614]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.34500622749328613\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.9246, 0.9003]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0921, 0.0248]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3013, 0.6987]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33564871549606323\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.8429, 0.7899]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0904, 0.0289]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4142, 0.5858]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47197428345680237\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.0620,  0.4368]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1293, 0.0545]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9012, 0.0988]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.1684790402650833\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.7495, 0.8113]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1540, 0.0627]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4720, 0.5280]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3404265344142914\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-1.5570,  0.5038]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1231, 0.0486]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9954, 0.0046]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.33073699474334717\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.0534, 0.3817]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1135, 0.0461]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8686, 0.1314]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.42168816924095154\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.2895, 1.0834]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1484, 0.0378]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1877, 0.8123]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.23136462271213531\n","Ground truth y: tensor([-2.2143], device='cuda:0')\n","Predicted mu: tensor([[-1.9933,  0.1870]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1044, 0.1155]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9962e-01, 3.8249e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2543118894100189\n","Ground truth y: tensor([0.5504], device='cuda:0')\n","Predicted mu: tensor([[0.0100, 0.4904]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1297, 0.0382]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8787, 0.1213]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5279480814933777\n","Ground truth y: tensor([0.9869], device='cuda:0')\n","Predicted mu: tensor([[1.2316, 1.0721]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2896, 0.1085]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.1985, 0.8015]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2984354794025421\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.2374,  0.3653]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1203, 0.0451]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9652, 0.0348]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2289288491010666\n","Ground truth y: tensor([-1.9233], device='cuda:0')\n","Predicted mu: tensor([[-2.3169,  0.3692]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0932, 0.0426]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9935e-01, 6.4818e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.36946776509284973\n","Ground truth y: tensor([-1.7777], device='cuda:0')\n","Predicted mu: tensor([[-1.8599,  0.3530]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0949, 0.0807]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9970, 0.0030]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3391188085079193\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-0.1758,  0.3683]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1173, 0.0436]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9427, 0.0573]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4481155276298523\n","Ground truth y: tensor([0.4049], device='cuda:0')\n","Predicted mu: tensor([[0.2412, 0.6075]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1484, 0.0411]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.7222, 0.2778]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.28097015619277954\n","Ground truth y: tensor([-1.3412], device='cuda:0')\n","Predicted mu: tensor([[-1.2333,  0.1330]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0884, 0.0619]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9976, 0.0024]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4257468283176422\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.6058, 0.7675]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1309, 0.0457]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6039, 0.3961]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.357033908367157\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[-1.1497,  0.3397]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2054, 0.1303]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9883, 0.0117]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4246605336666107\n","Ground truth y: tensor([-1.4625], device='cuda:0')\n","Predicted mu: tensor([[-1.5439,  0.1977]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1048, 0.0482]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[9.9925e-01, 7.5161e-04]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.21373417973518372\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5410, 0.8796]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1397, 0.0281]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4327, 0.5673]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3362225592136383\n","Ground truth y: tensor([-0.7592], device='cuda:0')\n","Predicted mu: tensor([[-0.6487,  0.2239]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1271, 0.0716]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9874, 0.0126]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.5309603810310364\n","Ground truth y: tensor([-0.5167], device='cuda:0')\n","Predicted mu: tensor([[-0.0642,  0.4964]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1059, 0.0234]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8565, 0.1435]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3259105086326599\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.0505, 0.6999]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1533, 0.0422]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6907, 0.3093]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.20671436190605164\n","Ground truth y: tensor([1.2780], device='cuda:0')\n","Predicted mu: tensor([[0.5766, 0.7111]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2293, 0.0478]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3731, 0.6269]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.21641527116298676\n","Ground truth y: tensor([0.8414], device='cuda:0')\n","Predicted mu: tensor([[0.9516, 0.8728]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1263, 0.0297]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.2705, 0.7295]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.3327364921569824\n","Ground truth y: tensor([-0.8077], device='cuda:0')\n","Predicted mu: tensor([[-0.0005,  0.4983]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1521, 0.0288]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.8236, 0.1764]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.6739194989204407\n","Ground truth y: tensor([-0.1771], device='cuda:0')\n","Predicted mu: tensor([[0.1546, 0.6465]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1189, 0.0196]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.5818, 0.4182]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.47636401653289795\n","Ground truth y: tensor([-0.6622], device='cuda:0')\n","Predicted mu: tensor([[-0.3364,  0.3788]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1421, 0.0196]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9555, 0.0445]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.40859270095825195\n","Ground truth y: tensor([0.6959], device='cuda:0')\n","Predicted mu: tensor([[0.5629, 0.7910]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.0703, 0.0146]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.4313, 0.5687]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.31791287660598755\n","Ground truth y: tensor([0.1139], device='cuda:0')\n","Predicted mu: tensor([[0.2374, 0.6208]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1467, 0.0293]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6445, 0.3555]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4808494746685028\n","Ground truth y: tensor([-2.0688], device='cuda:0')\n","Predicted mu: tensor([[-2.0879,  0.3020]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.2193, 0.0899]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9919, 0.0081]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.2550840973854065\n","Ground truth y: tensor([-1.6322], device='cuda:0')\n","Predicted mu: tensor([[-2.1654,  0.2901]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1689, 0.0904]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9955, 0.0045]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.32326945662498474\n","Ground truth y: tensor([1.1325], device='cuda:0')\n","Predicted mu: tensor([[1.2448, 1.0493]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1827, 0.0811]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.3111, 0.6889]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.4054527282714844\n","Ground truth y: tensor([-1.0987], device='cuda:0')\n","Predicted mu: tensor([[-0.8773,  0.3206]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1541, 0.0660]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.9772, 0.0228]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 0.48538336157798767\n","Ground truth y: tensor([1.1810], device='cuda:0')\n","Predicted mu: tensor([[0.0391, 0.7591]], device='cuda:0', grad_fn=<SliceBackward0>)\n","Predicted sigma2: tensor([[0.1568, 0.0522]], device='cuda:0', grad_fn=<AddBackward0>)\n","pi: tensor([[0.6610, 0.3390]], device='cuda:0', grad_fn=<SliceBackward0>)\n","loss: 1.4843147993087769\n"]},{"name":"stderr","output_type":"stream","text":[" 12%|█▏        | 6/50 [25:06<3:04:06, 251.06s/it]"]},{"name":"stdout","output_type":"stream","text":["Epoch 07 | Train Loss: 0.3821 | Valid Loss: 0.5336 | LR: 0.001000\n","⏳ EarlyStopping counter: 2/2\n","⛔ Early stopping triggered!\n"]},{"name":"stderr","output_type":"stream","text":["\n"]},{"name":"stdout","output_type":"stream","text":["[INFO] Saving model to: /kaggle/working/custom_model_v1.pth\n"]}],"source":["results, model = train(\n","    model=model,\n","    train_dataloader=train_loader,\n","    valid_dataloader=val_loader,\n","    loss_fn=total_loss,  # 👈 Gọi loss function ở đây\n","    optimizer=optimizer,\n","    epochs=epochs,\n","    model_name=\"custom_model_v1.pth\",\n","    device=device,\n","    lambda_div=lambda_div,  # hoặc giá trị bạn cần\n","    scheduler=scheduler,  # nếu dùng ReduceLROnPlateau\n","    early_stopping=early_stopping\n",")\n"]},{"cell_type":"code","execution_count":26,"id":"e355bb81","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:17.41876Z","iopub.status.busy":"2025-08-29T10:09:17.418239Z","iopub.status.idle":"2025-08-29T10:09:17.800599Z","shell.execute_reply":"2025-08-29T10:09:17.799745Z"},"papermill":{"duration":0.454495,"end_time":"2025-08-29T10:09:17.802251","exception":false,"start_time":"2025-08-29T10:09:17.347756","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1000x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 1000x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","# Biểu đồ Train Loss và Valid Loss\n","plt.figure(figsize=(10, 5))\n","plt.plot(results[\"train_loss\"], label='Train Loss')\n","plt.plot(results[\"valid_loss\"], label='Valid Loss')\n","plt.xlabel('Epoch')\n","plt.ylabel('Loss')\n","plt.title('Train vs Valid Loss')\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n","\n","# Biểu đồ Learning Rate\n","plt.figure(figsize=(10, 5))\n","plt.plot(results[\"learning_rates\"], label='Learning Rate', color='green')\n","plt.xlabel('Epoch')\n","plt.ylabel('LR')\n","plt.title('Learning Rate over Epochs')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"b1dbf4dc","metadata":{"papermill":{"duration":0.08765,"end_time":"2025-08-29T10:09:17.967431","exception":false,"start_time":"2025-08-29T10:09:17.879781","status":"completed"},"tags":[]},"outputs":[],"source":[]},{"cell_type":"code","execution_count":27,"id":"a8e1344a","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:18.118272Z","iopub.status.busy":"2025-08-29T10:09:18.118006Z","iopub.status.idle":"2025-08-29T10:09:28.124664Z","shell.execute_reply":"2025-08-29T10:09:28.123948Z"},"papermill":{"duration":10.07968,"end_time":"2025-08-29T10:09:28.12598","exception":false,"start_time":"2025-08-29T10:09:18.0463","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["có generator\n","Seed: 11906419539707238636\n","có generator\n","Seed: 1465717627126048999\n","tensor([[144.8096, 150.1945],\n","        [150.2275, 156.0433],\n","        [106.5551, 128.3816],\n","        [136.0874, 145.3864],\n","        [124.6482, 142.1582],\n","        [ 42.0909, 125.6352],\n","        [139.2746, 151.3883],\n","        [130.5773, 144.9974],\n","        [145.5306, 153.1620],\n","        [189.5027, 204.7870],\n","        [155.0185, 159.6426],\n","        [ 97.3373, 129.8097],\n","        [126.4479, 144.3876],\n","        [159.3506, 160.7070],\n","        [126.2216, 132.7229],\n","        [129.7807, 144.2248],\n","        [187.8904, 195.8736],\n","        [141.4140, 150.6246],\n","        [121.9525, 143.1055],\n","        [164.9807, 170.7223],\n","        [160.2972, 160.9611],\n","        [ 54.9297, 134.4930],\n","        [117.8447, 139.2464],\n","        [143.8038, 151.5460],\n","        [156.0369, 162.3559],\n","        [ 81.3378, 128.2780],\n","        [ 63.3467, 138.8375],\n","        [ 91.6706, 135.7996],\n","        [ 21.0180, 137.3612],\n","        [ 12.3778, 134.6263],\n","        [162.5417, 163.4449],\n","        [123.4102, 140.4132],\n","        [139.6212, 153.6333],\n","        [ 76.4698, 128.8360],\n","        [ 99.5024, 134.4629],\n","        [131.9764, 142.6266],\n","        [ 87.0712, 130.5442],\n","        [156.0109, 162.5491],\n","        [150.1850, 157.9165],\n","        [136.4005, 152.4077],\n","        [142.4544, 151.1485],\n","        [129.5751, 139.8716],\n","        [ 73.1699, 133.0931],\n","        [167.4268, 176.2593],\n","        [161.1508, 162.9456],\n","        [176.7012, 183.1449],\n","        [131.5542, 143.4384],\n","        [112.2572, 136.2132],\n","        [123.9078, 139.7875],\n","        [140.7014, 151.4042],\n","        [119.8713, 140.2313],\n","        [138.7012, 148.9261],\n","        [126.2352, 135.9188],\n","        [126.2258, 128.6909],\n","        [135.4019, 142.0450],\n","        [120.6624, 136.5215],\n","        [142.5485, 152.3418],\n","        [166.8715, 171.1398],\n","        [166.5858, 164.5639],\n","        [178.2349, 180.8938],\n","        [139.8853, 153.2586],\n","        [132.6945, 147.9069],\n","        [133.3851, 146.2382],\n","        [131.3189, 149.4599]], device='cuda:0')\n","---------------------\n","tensor([[107.9885, 139.3553],\n","        [192.8614, 196.0600],\n","        [152.8552, 160.6461],\n","        [146.5489, 152.5010],\n","        [131.0306, 143.5896],\n","        [108.8515, 130.1378],\n","        [131.6119, 146.4880],\n","        [153.8868, 154.8634],\n","        [114.4405, 135.3677],\n","        [180.2797, 194.9391],\n","        [107.8944, 135.9166],\n","        [107.1044, 137.4710],\n","        [191.0873, 196.9497],\n","        [ 87.8785, 129.5220],\n","        [124.6264, 142.4111],\n","        [178.9779, 183.4272],\n","        [117.5950, 132.6510],\n","        [199.7287, 192.9932],\n","        [166.2003, 178.7770],\n","        [ 64.3494, 128.0692],\n","        [172.7717, 186.8629],\n","        [188.1864, 197.8860],\n","        [137.0042, 147.3344],\n","        [126.2241, 133.3120],\n","        [ 90.3095, 132.0555],\n","        [159.0854, 161.8765],\n","        [156.9014, 160.8949],\n","        [123.7617, 145.5732],\n","        [141.5644, 150.2159],\n","        [120.3463, 134.1372],\n","        [123.3478, 137.2836],\n","        [ 32.8249, 140.5497],\n","        [139.6025, 149.1373],\n","        [119.1428, 140.7464],\n","        [110.1502, 134.4062],\n","        [ 83.8199, 127.3745],\n","        [125.3678, 139.5659],\n","        [139.6459, 150.9407],\n","        [144.9994, 154.1539],\n","        [129.4524, 145.0770],\n","        [ 96.9461, 144.3225],\n","        [128.8480, 142.5201],\n","        [122.9103, 140.5659],\n","        [ 95.5335, 128.7005],\n","        [126.2335, 127.4125],\n","        [102.8202, 131.9110],\n","        [188.5467, 196.5641],\n","        [127.8792, 149.1279],\n","        [117.7020, 131.1949],\n","        [169.0354, 181.4327],\n","        [151.2241, 157.6229],\n","        [ 66.4776, 151.7660],\n","        [126.1653, 136.3127],\n","        [111.9100, 133.2372],\n","        [126.0038, 140.2220],\n","        [ 69.6575, 127.4213],\n","        [131.6895, 143.2832],\n","        [165.8565, 165.9471],\n","        [131.4476, 143.2329],\n","        [ 29.5663, 144.2860],\n","        [139.2630, 149.0714],\n","        [133.3091, 142.9070],\n","        [119.9735, 136.7243],\n","        [118.0764, 134.6736]], device='cuda:0')\n","---------------------\n","tensor([[155.1452, 159.5808],\n","        [180.6437, 204.5471],\n","        [ 70.7880, 127.8763],\n","        [126.7731, 137.8860],\n","        [110.1766, 132.0956],\n","        [188.2598, 190.1353],\n","        [130.2008, 148.8847],\n","        [104.1298, 129.6186],\n","        [176.9882, 186.7409],\n","        [169.4490, 170.9393],\n","        [ 97.2882, 128.7308],\n","        [105.5780, 130.4289],\n","        [114.8900, 143.1066],\n","        [104.6300, 129.8526],\n","        [180.6863, 192.8993],\n","        [132.9462, 144.0407],\n","        [114.8465, 140.9980],\n","        [ 24.5501, 140.3621],\n","        [136.2947, 156.3338],\n","        [135.8484, 144.0230],\n","        [173.1692, 185.3132],\n","        [ 59.7059, 124.9918],\n","        [ 51.2824, 132.9629],\n","        [188.9155, 194.9953],\n","        [133.4712, 138.5183],\n","        [135.5534, 146.7961],\n","        [136.1692, 146.4261],\n","        [127.1171, 134.5565],\n","        [137.9921, 147.2248],\n","        [181.1661, 190.7336],\n","        [113.8959, 137.0577],\n","        [174.8205, 185.1398],\n","        [181.5369, 195.5046],\n","        [167.4073, 168.3921],\n","        [110.3163, 137.8778],\n","        [140.8030, 150.6296],\n","        [ 93.3780, 133.2815],\n","        [ 93.8202, 127.2026],\n","        [130.7518, 140.6416],\n","        [122.7997, 145.3706],\n","        [173.6703, 199.5931],\n","        [158.6003, 163.4000],\n","        [172.1003, 181.0472],\n","        [ 54.5963, 128.4966],\n","        [169.3378, 169.6012],\n","        [ 89.3447, 137.7497],\n","        [144.4355, 154.0019],\n","        [123.4837, 141.0025],\n","        [ 61.4626, 128.7920],\n","        [124.4898, 136.8942],\n","        [115.8624, 134.9320],\n","        [ 20.1682, 137.6161],\n","        [109.9275, 133.9685],\n","        [102.9155, 131.5367],\n","        [135.3709, 146.5003],\n","        [ 82.6847, 129.4308],\n","        [136.2458, 146.0657],\n","        [142.1356, 154.7643],\n","        [ 84.9415, 140.3674],\n","        [180.8237, 197.2048],\n","        [146.3272, 153.2921],\n","        [183.5682, 193.0180],\n","        [172.2329, 181.4324],\n","        [179.2154, 189.0854]], device='cuda:0')\n","---------------------\n","tensor([[ 99.6822, 129.4782],\n","        [103.6931, 132.5697],\n","        [117.0643, 135.8907],\n","        [140.9580, 144.9066],\n","        [135.0096, 148.2610],\n","        [172.8944, 174.2291],\n","        [156.9019, 158.6952],\n","        [129.3351, 142.3178]], device='cuda:0')\n","---------------------\n","Inference completed. Predictions saved to: inference_results1.csv\n"]}],"source":["\n","# Định nghĩa transform nếu cần\n","transform = v2.Compose([\n","    v2.ToImage(),\n","    v2.Resize((232, 232), interpolation=InterpolationMode.BILINEAR),\n","    v2.CenterCrop(224),\n","    v2.ToDtype(torch.float32, scale=True),\n","    v2.Normalize(mean=[0.187437], std=[0.197918])  # Dùng cho ảnh (không liên quan đến label)\n","])\n","\n","def inference(model_path, image_dirs, csv_path, output_path, num_components=num_components, use_male=True):\n","    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","    # Tạo dataset và dataloader\n","    dataset = AgeGenderDataset(\n","        image_dirs=image_dirs,\n","        csv_path=csv_path,\n","        use_age=True,\n","        use_male=use_male,\n","        transform=transform\n","    )\n","    dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=False)\n","\n","    # Tải model\n","    model = RegNetWithAttentionAndSoftmax(num_components=num_components).to(device)\n","    model.init_attention_blocks(device=device)   # ✅ GỌI TRƯỚC!\n","    model.load_state_dict(torch.load(model_path, map_location=device))\n","    model.eval()\n","\n","    predictions = []\n","\n","    with torch.inference_mode():\n","        for imgs, _ in dataloader:\n","            imgs = imgs.to(device)\n","            pi, mu, log_sigma2, _ = model(imgs)\n","            print(mu*label_std+label_mean)\n","            print('---------------------')\n","            \n","\n","            # Dự đoán tuổi bằng kỳ vọng của GMM\n","            predicted_age = (pi * mu).sum(dim=1)\n","            predictions.extend(predicted_age.cpu().numpy())\n","\n","    # Đọc CSV chứa ID gốc\n","    if csv_path.endswith(\".xlsx\"):\n","        df = pd.read_excel(csv_path)\n","    else:\n","        df = pd.read_csv(csv_path)\n","\n","    # Đảm bảo có cột \"id\"\n","    if 'id' not in df.columns:\n","        if 'Image ID' in df.columns:\n","            df.rename(columns={'Image ID': 'id'}, inplace=True)\n","        elif 'Case ID' in df.columns:\n","            df.rename(columns={'Case ID': 'id'}, inplace=True)\n","\n","    # Thêm cột dự đoán và lưu kết quả\n","    df['predicted_boneage'] = predictions\n","    df[['id', 'predicted_boneage']].to_csv(output_path, index=False)\n","    print(f\"Inference completed. Predictions saved to: {output_path}\")\n","\n","# Ví dụ sử dụng\n","if __name__ == \"__main__\":\n","    inference(\n","        model_path=\"/kaggle/working/custom_model_v1.pth\",\n","        image_dirs=\"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Test Set Images\",\n","        csv_path=\"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Bone age ground truth.xlsx\",\n","        output_path=\"inference_results1.csv\",\n","        num_components=num_components,\n","        use_male=False\n","    )\n"]},{"cell_type":"code","execution_count":28,"id":"3815c61b","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:28.268742Z","iopub.status.busy":"2025-08-29T10:09:28.26802Z","iopub.status.idle":"2025-08-29T10:09:28.428027Z","shell.execute_reply":"2025-08-29T10:09:28.427139Z"},"papermill":{"duration":0.231735,"end_time":"2025-08-29T10:09:28.429252","exception":false,"start_time":"2025-08-29T10:09:28.197517","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Saved architecture diagram to regnet_attention.png\n"]}],"source":["from graphviz import Digraph\n","\n","def visualize_regnet_with_attention(num_components=2, filename=\"regnet_attention\"):\n","    dot = Digraph(comment=\"RegNetWithAttentionAndSoftmax\", format=\"png\")\n","    dot.attr(rankdir=\"LR\", size=\"8\")\n","\n","    # Backbone\n","    dot.node(\"input\", \"Input Image [B, 1, H, W]\")\n","    dot.node(\"backbone\", \"EfficientNetV2-S (modified)\\n[B, 1280, H/32, W/32]\")\n","    dot.edge(\"input\", \"backbone\")\n","\n","    # Attention blocks\n","    for i in range(num_components):\n","        att = f\"att{i}\"\n","        feat = f\"feat{i}\"\n","        gap = f\"gap{i}\"\n","        reg = f\"reg{i}\"\n","\n","        dot.node(att, f\"SelfAttentionGate {i+1}\\nW_y{i+1}, attention{i+1}\")\n","        dot.edge(\"backbone\", att)\n","\n","        dot.node(feat, f\"W_y{i+1} [B, 1280, H/32, W/32]\")\n","        dot.edge(att, feat)\n","\n","        dot.node(gap, f\"GAP → feature{i+1} [B, 1280]\")\n","        dot.edge(feat, gap)\n","\n","        dot.node(reg, f\"Regression branch {i+1}\\nLinear(1280→2) → mu{i+1}, raw_sigma{i+1}\")\n","        dot.edge(gap, reg)\n","\n","    # Mixing coeff branch\n","    dot.node(\"gap_global\", \"GAP(feat_map) [B, 1280]\")\n","    dot.edge(\"backbone\", \"gap_global\")\n","\n","    dot.node(\"pi\", \"Linear(1280→K) → Softmax\\npi [B, K]\")\n","    dot.edge(\"gap_global\", \"pi\")\n","\n","    # Outputs\n","    dot.node(\"output\", \"Outputs:\\npi [B,K], mu [B,K], log_sigma2 [B,K], attention_maps [B,K,C,H,W]\")\n","\n","    for i in range(num_components):\n","        reg = f\"reg{i}\"\n","        dot.edge(reg, \"output\")\n","    dot.edge(\"pi\", \"output\")\n","\n","    dot.render(filename, cleanup=True)\n","    print(f\"Saved architecture diagram to {filename}.png\")\n","\n","# Example usage\n","visualize_regnet_with_attention(num_components=3)\n"]},{"cell_type":"markdown","id":"c9330162","metadata":{"papermill":{"duration":0.07016,"end_time":"2025-08-29T10:09:28.570529","exception":false,"start_time":"2025-08-29T10:09:28.500369","status":"completed"},"tags":[]},"source":["# 8. visualize"]},{"cell_type":"code","execution_count":29,"id":"5bc9ea0e","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:28.713229Z","iopub.status.busy":"2025-08-29T10:09:28.712488Z","iopub.status.idle":"2025-08-29T10:09:29.892121Z","shell.execute_reply":"2025-08-29T10:09:29.891334Z"},"papermill":{"duration":1.251669,"end_time":"2025-08-29T10:09:29.893219","exception":false,"start_time":"2025-08-29T10:09:28.64155","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["có generator\n","Seed: 4447810592208119573\n","có generator\n","Seed: 3758445820179930143\n","                                          image_path  predicted_age  \\\n","0  /kaggle/input/boneage-amazone-data/BoneAgeTest...      21.047393   \n","1  /kaggle/input/boneage-amazone-data/BoneAgeTest...      87.456640   \n","2  /kaggle/input/boneage-amazone-data/BoneAgeTest...     136.400516   \n","\n","                                            pi  \\\n","0   [0.999747097492218, 0.0002529223565943539]   \n","1   [0.9911335110664368, 0.008866497315466404]   \n","2  [0.9999998807907104, 7.964883508293497e-08]   \n","\n","                                        mu  \\\n","0  [21.017967224121094, 137.3612060546875]   \n","1   [87.07118225097656, 130.5442352294922]   \n","2  [136.4005126953125, 152.40765380859375]   \n","\n","                                     sigma2  \n","0  [11.472311973571777, 11.442378044128418]  \n","1  [11.566543579101562, 11.534574508666992]  \n","2   [11.92591667175293, 11.471358299255371]  \n","Predictions saved to predict_3_images.csv\n"]}],"source":["import torch\n","import pandas as pd\n","from torchvision.io import read_image\n","from torchvision.transforms import v2\n","from torchvision.transforms.functional import InterpolationMode\n","import json\n","import math\n","\n","\n","# Transform giống lúc training\n","transform = v2.Compose([\n","    v2.ToImage(),\n","    v2.Resize((232, 232), interpolation=InterpolationMode.BILINEAR),\n","    v2.CenterCrop(224),\n","    v2.ToDtype(torch.float32, scale=True),\n","    v2.Normalize(mean=[0.187437], std=[0.197918])\n","])\n","\n","def predict_images(model_path, image_paths, num_components, output_csv):\n","    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","    # Load model\n","    model = RegNetWithAttentionAndSoftmax(num_components=num_components).to(device)\n","    model.init_attention_blocks(device=device)\n","    model.load_state_dict(torch.load(model_path, map_location=device))\n","    model.eval()\n","\n","    results = []\n","\n","    with torch.inference_mode():\n","        for img_path in image_paths:\n","            img = read_image(img_path)  # Đọc ảnh\n","            img = transform(img).unsqueeze(0).to(device)  # (1, C, H, W)\n","\n","            pi, mu, log_sigma2, _ = model(img)\n","            sigma2 = torch.exp(log_sigma2)  # sigma²\n","        \n","            # Tính tuổi dự đoán từ kỳ vọng GMM\n","            predicted_age = (pi * mu).sum(dim=1).item()\n","            predicted_age = predicted_age*label_std+label_mean\n","            mu= mu*label_std+label_mean\n","            sigma2 = sigma2*label_std+label_mean\n","            sigma2 = torch.sqrt(sigma2)\n","            \n","            # Lưu kết quả\n","            results.append({\n","                \"image_path\": img_path,\n","                \"predicted_age\": predicted_age,\n","                \"pi\": json.dumps(pi.squeeze(0).cpu().tolist()),\n","                \"mu\": json.dumps(mu.squeeze(0).cpu().tolist()),\n","                \"sigma2\": json.dumps(sigma2.squeeze(0).cpu().tolist())\n","            })\n","\n","    # Xuất CSV\n","    df = pd.DataFrame(results)\n","    print(df)\n","    df.to_csv(output_csv, index=False)\n","    print(f\"Predictions saved to {output_csv}\")\n","\n","# Ví dụ dùng\n","if __name__ == \"__main__\":\n","    image_paths = [\n","        \"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Test Set Images/4388.png\",\n","        \"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Test Set Images/4396.png\",\n","        \"/kaggle/input/boneage-amazone-data/BoneAgeTestSet (1)/Bone Age Test Set/Test Set Images/4399.png\"\n","    ]\n","    predict_images(\n","        model_path=\"/kaggle/working/custom_model_v1.pth\",\n","        image_paths=image_paths,\n","        num_components= 2,\n","        output_csv=\"predict_3_images.csv\"\n","    )\n"]},{"cell_type":"code","execution_count":30,"id":"de50c61b","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:30.037061Z","iopub.status.busy":"2025-08-29T10:09:30.03646Z","iopub.status.idle":"2025-08-29T10:09:30.208389Z","shell.execute_reply":"2025-08-29T10:09:30.207792Z"},"papermill":{"duration":0.244796,"end_time":"2025-08-29T10:09:30.209814","exception":false,"start_time":"2025-08-29T10:09:29.965018","status":"completed"},"tags":[]},"outputs":[],"source":["import torch\n","import torchvision.transforms.v2 as T\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import cv2\n","from PIL import Image\n"]},{"cell_type":"code","execution_count":31,"id":"0360c660","metadata":{"execution":{"iopub.execute_input":"2025-08-29T10:09:30.354165Z","iopub.status.busy":"2025-08-29T10:09:30.353667Z","iopub.status.idle":"2025-08-29T10:09:30.357932Z","shell.execute_reply":"2025-08-29T10:09:30.35712Z"},"papermill":{"duration":0.077172,"end_time":"2025-08-29T10:09:30.359023","exception":false,"start_time":"2025-08-29T10:09:30.281851","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class '__main__.RegNetWithAttentionAndSoftmax'>\n"]}],"source":["print(type(model))"]},{"cell_type":"code","execution_count":null,"id":"6450aaa1","metadata":{"papermill":{"duration":0.070807,"end_time":"2025-08-29T10:09:30.500461","exception":false,"start_time":"2025-08-29T10:09:30.429654","status":"completed"},"tags":[]},"outputs":[],"source":[]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"datasetId":10832,"sourceId":15122,"sourceType":"datasetVersion"},{"datasetId":7928729,"sourceId":12556697,"sourceType":"datasetVersion"},{"isSourceIdPinned":true,"modelId":424242,"modelInstanceId":406322,"sourceId":513847,"sourceType":"modelInstanceVersion"},{"isSourceIdPinned":true,"modelId":424259,"modelInstanceId":406339,"sourceId":513872,"sourceType":"modelInstanceVersion"}],"dockerImageVersionId":31090,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.13"},"papermill":{"default_parameters":{},"duration":1541.815603,"end_time":"2025-08-29T10:09:32.801879","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-08-29T09:43:50.986276","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}